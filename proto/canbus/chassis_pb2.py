# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: canbus/chassis.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from proto.common import header_pb2 as common_dot_header__pb2
from proto.common import vehicle_signal_pb2 as common_dot_vehicle__signal__pb2
from proto.common import drive_state_pb2 as common_dot_drive__state__pb2
from proto.common import geometry_pb2 as common_dot_geometry__pb2
from proto.common.configs import vehicle_config_pb2 as common_dot_configs_dot_vehicle__config__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x14\x63\x61nbus/chassis.proto\x12\x10\x64\x65\x65proute.canbus\x1a\x13\x63ommon/header.proto\x1a\x1b\x63ommon/vehicle_signal.proto\x1a\x18\x63ommon/drive_state.proto\x1a\x15\x63ommon/geometry.proto\x1a#common/configs/vehicle_config.proto\"\x93\x0c\n\x07\x43hassis\x12\x16\n\x0e\x65ngine_started\x18\x03 \x01(\x08\x12\x17\n\nengine_rpm\x18\x04 \x01(\x02:\x03nan\x12\x16\n\tspeed_mps\x18\x05 \x01(\x02:\x03nan\x12\x17\n\nodometer_m\x18\x06 \x01(\x02:\x03nan\x12\x14\n\x0c\x66uel_range_m\x18\x07 \x01(\x05\x12 \n\x13throttle_percentage\x18\x08 \x01(\x02:\x03nan\x12\x1d\n\x10\x62rake_percentage\x18\t \x01(\x02:\x03nan\x12 \n\x13steering_percentage\x18\x0b \x01(\x02:\x03nan\x12\x1f\n\x12steering_torque_nm\x18\x0c \x01(\x02:\x03nan\x12\x15\n\rparking_brake\x18\r \x01(\x08\x12\x1c\n\x10high_beam_signal\x18\x0e \x01(\x08\x42\x02\x18\x01\x12\x1b\n\x0flow_beam_signal\x18\x0f \x01(\x08\x42\x02\x18\x01\x12\x1c\n\x10left_turn_signal\x18\x10 \x01(\x08\x42\x02\x18\x01\x12\x1d\n\x11right_turn_signal\x18\x11 \x01(\x08\x42\x02\x18\x01\x12\x10\n\x04horn\x18\x12 \x01(\x08\x42\x02\x18\x01\x12\r\n\x05wiper\x18\x13 \x01(\x08\x12\x1c\n\x10\x64isengage_status\x18\x14 \x01(\x08\x42\x02\x18\x01\x12\x43\n\x0c\x64riving_mode\x18\x15 \x01(\x0e\x32%.deeproute.canbus.Chassis.DrivingMode:\x06MANUAL\x12\x41\n\nerror_code\x18\x16 \x01(\x0e\x32#.deeproute.canbus.Chassis.ErrorCode:\x08NO_ERROR\x12=\n\rgear_location\x18\x17 \x01(\x0e\x32&.deeproute.canbus.Chassis.GearPosition\x12\x1a\n\x12steering_timestamp\x18\x18 \x01(\x01\x12(\n\x06header\x18\x19 \x01(\x0b\x32\x18.deeproute.common.Header\x12\x1d\n\x12\x63hassis_error_mask\x18\x1a \x01(\x05:\x01\x30\x12/\n\x06signal\x18\x1b \x01(\x0b\x32\x1f.deeproute.common.VehicleSignal\x12\x31\n\x0b\x63hassis_gps\x18\x1c \x01(\x0b\x32\x1c.deeproute.canbus.ChassisGPS\x12\x35\n\rengage_advice\x18\x1d \x01(\x0b\x32\x1e.deeproute.common.EngageAdvice\x12\x31\n\x0bwheel_speed\x18\x1e \x01(\x0b\x32\x1c.deeproute.canbus.WheelSpeed\x12,\n\x08surround\x18\x1f \x01(\x0b\x32\x1a.deeproute.canbus.Surround\x12.\n\x07license\x18  \x01(\x0b\x32\x19.deeproute.canbus.LicenseB\x02\x18\x01\x12/\n\nvehicle_id\x18! \x01(\x0b\x32\x1b.deeproute.common.VehicleID\"L\n\x0b\x44rivingMode\x12\n\n\x06MANUAL\x10\x00\x12\x15\n\x11LONGITUDINAL_AUTO\x10\x01\x12\x10\n\x0cLATERAL_AUTO\x10\x02\x12\x08\n\x04\x41UTO\x10\x03\"\x80\x02\n\tErrorCode\x12\x0c\n\x08NO_ERROR\x10\x00\x12\x15\n\x11\x43MD_NOT_IN_PERIOD\x10\x01\x12\x11\n\rCHASSIS_ERROR\x10\x02\x12\x1a\n\x16\x43HASSIS_ERROR_ON_STEER\x10\x06\x12\x1a\n\x16\x43HASSIS_ERROR_ON_BRAKE\x10\x07\x12\x1d\n\x19\x43HASSIS_ERROR_ON_THROTTLE\x10\x08\x12\x19\n\x15\x43HASSIS_ERROR_ON_GEAR\x10\t\x12\x17\n\x13MANUAL_INTERVENTION\x10\x03\x12\x1d\n\x19\x43HASSIS_CAN_NOT_IN_PERIOD\x10\x04\x12\x11\n\rUNKNOWN_ERROR\x10\x05\"d\n\x0cGearPosition\x12\x0b\n\x07INVALID\x10\x00\x12\x08\n\x04PARK\x10\x01\x12\x0b\n\x07REVERSE\x10\x02\x12\x0b\n\x07NEUTRAL\x10\x03\x12\t\n\x05\x44RIVE\x10\x04\x12\x07\n\x03LOW\x10\x05\x12\x0f\n\x0bUNSPECIFIED\x10\x06\"\x8c\x03\n\nChassisGPS\x12\x10\n\x08latitude\x18\x01 \x01(\x01\x12\x11\n\tlongitude\x18\x02 \x01(\x01\x12\x11\n\tgps_valid\x18\x03 \x01(\x08\x12\x0c\n\x04year\x18\x04 \x01(\x05\x12\r\n\x05month\x18\x05 \x01(\x05\x12\x0b\n\x03\x64\x61y\x18\x06 \x01(\x05\x12\r\n\x05hours\x18\x07 \x01(\x05\x12\x0f\n\x07minutes\x18\x08 \x01(\x05\x12\x0f\n\x07seconds\x18\t \x01(\x05\x12\x19\n\x11\x63ompass_direction\x18\n \x01(\x01\x12\x0c\n\x04pdop\x18\x0b \x01(\x01\x12\x14\n\x0cis_gps_fault\x18\x0c \x01(\x08\x12\x13\n\x0bis_inferred\x18\r \x01(\x08\x12\x10\n\x08\x61ltitude\x18\x0e \x01(\x01\x12\x0f\n\x07heading\x18\x0f \x01(\x01\x12\x0c\n\x04hdop\x18\x10 \x01(\x01\x12\x0c\n\x04vdop\x18\x11 \x01(\x01\x12-\n\x07quality\x18\x12 \x01(\x0e\x32\x1c.deeproute.canbus.GpsQuality\x12\x16\n\x0enum_satellites\x18\x13 \x01(\x05\x12\x11\n\tgps_speed\x18\x14 \x01(\x01\"\xc3\x07\n\nWheelSpeed\x12\x18\n\x10measurement_time\x18\x01 \x01(\x10\x12$\n\x15is_wheel_spd_rr_valid\x18\x02 \x01(\x08:\x05\x66\x61lse\x12P\n\x12wheel_direction_rr\x18\x03 \x01(\x0e\x32+.deeproute.canbus.WheelSpeed.WheelSpeedType:\x07INVALID\x12\x17\n\x0cwheel_spd_rr\x18\x04 \x01(\x01:\x01\x30\x12$\n\x15is_wheel_spd_rl_valid\x18\x05 \x01(\x08:\x05\x66\x61lse\x12P\n\x12wheel_direction_rl\x18\x06 \x01(\x0e\x32+.deeproute.canbus.WheelSpeed.WheelSpeedType:\x07INVALID\x12\x17\n\x0cwheel_spd_rl\x18\x07 \x01(\x01:\x01\x30\x12$\n\x15is_wheel_spd_fr_valid\x18\x08 \x01(\x08:\x05\x66\x61lse\x12P\n\x12wheel_direction_fr\x18\t \x01(\x0e\x32+.deeproute.canbus.WheelSpeed.WheelSpeedType:\x07INVALID\x12\x17\n\x0cwheel_spd_fr\x18\n \x01(\x01:\x01\x30\x12$\n\x15is_wheel_spd_fl_valid\x18\x0b \x01(\x08:\x05\x66\x61lse\x12P\n\x12wheel_direction_fl\x18\x0c \x01(\x0e\x32+.deeproute.canbus.WheelSpeed.WheelSpeedType:\x07INVALID\x12\x17\n\x0cwheel_spd_fl\x18\r \x01(\x01:\x01\x30\x12\x1a\n\x12sum_of_edge_fr_wss\x18\x0e \x01(\x05\x12 \n\x18sum_of_edge_fr_wss_valid\x18\x0f \x01(\x08\x12\x1a\n\x12sum_of_edge_fl_wss\x18\x10 \x01(\x05\x12 \n\x18sum_of_edge_fl_wss_valid\x18\x11 \x01(\x08\x12\x1a\n\x12sum_of_edge_rr_wss\x18\x12 \x01(\x05\x12 \n\x18sum_of_edge_rr_wss_valid\x18\x13 \x01(\x08\x12\x1a\n\x12sum_of_edge_rl_wss\x18\x14 \x01(\x05\x12 \n\x18sum_of_edge_rl_wss_valid\x18\x15 \x01(\x08\x12\x15\n\rrolling_count\x18\x16 \x01(\x05\"H\n\x0eWheelSpeedType\x12\x0b\n\x07\x46ORWARD\x10\x00\x12\x0c\n\x08\x42\x41\x43KWARD\x10\x01\x12\x0e\n\nSTANDSTILL\x10\x02\x12\x0b\n\x07INVALID\x10\x03\"v\n\x05Sonar\x12\r\n\x05range\x18\x01 \x01(\x01\x12.\n\x0btranslation\x18\x02 \x01(\x0b\x32\x19.deeproute.common.Point3D\x12.\n\x08rotation\x18\x03 \x01(\x0b\x32\x1c.deeproute.common.Quaternion\"\xe7\x04\n\x08Surround\x12 \n\x18\x63ross_traffic_alert_left\x18\x01 \x01(\x08\x12(\n cross_traffic_alert_left_enabled\x18\x02 \x01(\x08\x12\x1d\n\x15\x62lind_spot_left_alert\x18\x03 \x01(\x08\x12%\n\x1d\x62lind_spot_left_alert_enabled\x18\x04 \x01(\x08\x12!\n\x19\x63ross_traffic_alert_right\x18\x05 \x01(\x08\x12)\n!cross_traffic_alert_right_enabled\x18\x06 \x01(\x08\x12\x1e\n\x16\x62lind_spot_right_alert\x18\x07 \x01(\x08\x12&\n\x1e\x62lind_spot_right_alert_enabled\x18\x08 \x01(\x08\x12\x0f\n\x07sonar00\x18\t \x01(\x01\x12\x0f\n\x07sonar01\x18\n \x01(\x01\x12\x0f\n\x07sonar02\x18\x0b \x01(\x01\x12\x0f\n\x07sonar03\x18\x0c \x01(\x01\x12\x0f\n\x07sonar04\x18\r \x01(\x01\x12\x0f\n\x07sonar05\x18\x0e \x01(\x01\x12\x0f\n\x07sonar06\x18\x0f \x01(\x01\x12\x0f\n\x07sonar07\x18\x10 \x01(\x01\x12\x0f\n\x07sonar08\x18\x11 \x01(\x01\x12\x0f\n\x07sonar09\x18\x12 \x01(\x01\x12\x0f\n\x07sonar10\x18\x13 \x01(\x01\x12\x0f\n\x07sonar11\x18\x14 \x01(\x01\x12\x15\n\rsonar_enabled\x18\x15 \x01(\x08\x12\x13\n\x0bsonar_fault\x18\x16 \x01(\x08\x12\x13\n\x0bsonar_range\x18\x17 \x03(\x01\x12&\n\x05sonar\x18\x18 \x03(\x0b\x32\x17.deeproute.canbus.Sonar\"\x1a\n\x07License\x12\x0f\n\x03vin\x18\x01 \x01(\tB\x02\x18\x01*A\n\nGpsQuality\x12\n\n\x06\x46IX_NO\x10\x00\x12\n\n\x06\x46IX_2D\x10\x01\x12\n\n\x06\x46IX_3D\x10\x02\x12\x0f\n\x0b\x46IX_INVALID\x10\x03')

_GPSQUALITY = DESCRIPTOR.enum_types_by_name['GpsQuality']
GpsQuality = enum_type_wrapper.EnumTypeWrapper(_GPSQUALITY)
FIX_NO = 0
FIX_2D = 1
FIX_3D = 2
FIX_INVALID = 3


_CHASSIS = DESCRIPTOR.message_types_by_name['Chassis']
_CHASSISGPS = DESCRIPTOR.message_types_by_name['ChassisGPS']
_WHEELSPEED = DESCRIPTOR.message_types_by_name['WheelSpeed']
_SONAR = DESCRIPTOR.message_types_by_name['Sonar']
_SURROUND = DESCRIPTOR.message_types_by_name['Surround']
_LICENSE = DESCRIPTOR.message_types_by_name['License']
_CHASSIS_DRIVINGMODE = _CHASSIS.enum_types_by_name['DrivingMode']
_CHASSIS_ERRORCODE = _CHASSIS.enum_types_by_name['ErrorCode']
_CHASSIS_GEARPOSITION = _CHASSIS.enum_types_by_name['GearPosition']
_WHEELSPEED_WHEELSPEEDTYPE = _WHEELSPEED.enum_types_by_name['WheelSpeedType']
Chassis = _reflection.GeneratedProtocolMessageType('Chassis', (_message.Message,), {
  'DESCRIPTOR' : _CHASSIS,
  '__module__' : 'canbus.chassis_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.canbus.Chassis)
  })
_sym_db.RegisterMessage(Chassis)

ChassisGPS = _reflection.GeneratedProtocolMessageType('ChassisGPS', (_message.Message,), {
  'DESCRIPTOR' : _CHASSISGPS,
  '__module__' : 'canbus.chassis_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.canbus.ChassisGPS)
  })
_sym_db.RegisterMessage(ChassisGPS)

WheelSpeed = _reflection.GeneratedProtocolMessageType('WheelSpeed', (_message.Message,), {
  'DESCRIPTOR' : _WHEELSPEED,
  '__module__' : 'canbus.chassis_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.canbus.WheelSpeed)
  })
_sym_db.RegisterMessage(WheelSpeed)

Sonar = _reflection.GeneratedProtocolMessageType('Sonar', (_message.Message,), {
  'DESCRIPTOR' : _SONAR,
  '__module__' : 'canbus.chassis_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.canbus.Sonar)
  })
_sym_db.RegisterMessage(Sonar)

Surround = _reflection.GeneratedProtocolMessageType('Surround', (_message.Message,), {
  'DESCRIPTOR' : _SURROUND,
  '__module__' : 'canbus.chassis_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.canbus.Surround)
  })
_sym_db.RegisterMessage(Surround)

License = _reflection.GeneratedProtocolMessageType('License', (_message.Message,), {
  'DESCRIPTOR' : _LICENSE,
  '__module__' : 'canbus.chassis_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.canbus.License)
  })
_sym_db.RegisterMessage(License)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _CHASSIS.fields_by_name['high_beam_signal']._options = None
  _CHASSIS.fields_by_name['high_beam_signal']._serialized_options = b'\030\001'
  _CHASSIS.fields_by_name['low_beam_signal']._options = None
  _CHASSIS.fields_by_name['low_beam_signal']._serialized_options = b'\030\001'
  _CHASSIS.fields_by_name['left_turn_signal']._options = None
  _CHASSIS.fields_by_name['left_turn_signal']._serialized_options = b'\030\001'
  _CHASSIS.fields_by_name['right_turn_signal']._options = None
  _CHASSIS.fields_by_name['right_turn_signal']._serialized_options = b'\030\001'
  _CHASSIS.fields_by_name['horn']._options = None
  _CHASSIS.fields_by_name['horn']._serialized_options = b'\030\001'
  _CHASSIS.fields_by_name['disengage_status']._options = None
  _CHASSIS.fields_by_name['disengage_status']._serialized_options = b'\030\001'
  _CHASSIS.fields_by_name['license']._options = None
  _CHASSIS.fields_by_name['license']._serialized_options = b'\030\001'
  _LICENSE.fields_by_name['vin']._options = None
  _LICENSE.fields_by_name['vin']._serialized_options = b'\030\001'
  _GPSQUALITY._serialized_start=3867
  _GPSQUALITY._serialized_end=3932
  _CHASSIS._serialized_start=179
  _CHASSIS._serialized_end=1734
  _CHASSIS_DRIVINGMODE._serialized_start=1297
  _CHASSIS_DRIVINGMODE._serialized_end=1373
  _CHASSIS_ERRORCODE._serialized_start=1376
  _CHASSIS_ERRORCODE._serialized_end=1632
  _CHASSIS_GEARPOSITION._serialized_start=1634
  _CHASSIS_GEARPOSITION._serialized_end=1734
  _CHASSISGPS._serialized_start=1737
  _CHASSISGPS._serialized_end=2133
  _WHEELSPEED._serialized_start=2136
  _WHEELSPEED._serialized_end=3099
  _WHEELSPEED_WHEELSPEEDTYPE._serialized_start=3027
  _WHEELSPEED_WHEELSPEEDTYPE._serialized_end=3099
  _SONAR._serialized_start=3101
  _SONAR._serialized_end=3219
  _SURROUND._serialized_start=3222
  _SURROUND._serialized_end=3837
  _LICENSE._serialized_start=3839
  _LICENSE._serialized_end=3865
# @@protoc_insertion_point(module_scope)
