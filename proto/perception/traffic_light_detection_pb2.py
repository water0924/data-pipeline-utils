# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: perception/traffic_light_detection.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from proto.common import geometry_pb2 as common_dot_geometry__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n(perception/traffic_light_detection.proto\x12\x14\x64\x65\x65proute.perception\x1a\x15\x63ommon/geometry.proto\"F\n\x0fTrafficLightBox\x12\t\n\x01x\x18\x01 \x01(\x05\x12\t\n\x01y\x18\x02 \x01(\x05\x12\r\n\x05width\x18\x03 \x01(\x05\x12\x0e\n\x06height\x18\x04 \x01(\x05\"\xf9\x06\n\x0cTrafficLight\x12\x37\n\x05\x63olor\x18\x01 \x01(\x0e\x32(.deeproute.perception.TrafficLight.Color\x12\x37\n\x05shape\x18\x0c \x01(\x0e\x32(.deeproute.perception.TrafficLight.Shape\x12\x1b\n\x13traffic_light_token\x18\x02 \x01(\x05\x12\x15\n\nconfidence\x18\x03 \x01(\x01:\x01\x31\x12\x15\n\rtracking_time\x18\x04 \x01(\x01\x12\r\n\x05\x62link\x18\x05 \x01(\x08\x12\x17\n\x0flong_term_blink\x18\x0e \x01(\x08\x12\x12\n\ncountdowns\x18\r \x01(\x05\x12\x16\n\x0eremaining_time\x18\x06 \x01(\x01\x12\x0f\n\x07task_id\x18\x07 \x01(\x05\x12\x12\n\ntime_stamp\x18\x08 \x01(\x01\x12<\n\x0ctraffic_type\x18\t \x01(\x0e\x32&.deeproute.perception.TrafficLightType\x12<\n\rprojected_roi\x18\n \x01(\x0b\x32%.deeproute.perception.TrafficLightBox\x12;\n\x0c\x64\x65tected_box\x18\x0b \x01(\x0b\x32%.deeproute.perception.TrafficLightBox\x12\x1e\n\x16\x61map_has_traffic_light\x18\x0f \x01(\x08\x12\x1e\n\x16\x61map_has_realtime_info\x18\x10 \x01(\x08\x12 \n\x18\x61map_perception_conflict\x18\x11 \x01(\x08\x12>\n\x1b\x61map_traffic_light_position\x18\x12 \x01(\x0b\x32\x19.deeproute.common.Point3D\x12\x0b\n\x03odd\x18\x13 \x01(\x08\x12\x18\n\x10\x61map_count_downs\x18\x14 \x01(\x08\x12\x16\n\x0ehas_arrow_vote\x18\x15 \x01(\x08\"?\n\x05\x43olor\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x07\n\x03RED\x10\x01\x12\n\n\x06YELLOW\x10\x02\x12\t\n\x05GREEN\x10\x03\x12\t\n\x05\x42LACK\x10\x04\"X\n\x05Shape\x12\n\n\x06\x43IRCLE\x10\x00\x12\x11\n\rFORWARD_ARROW\x10\x01\x12\x0e\n\nLEFT_ARROW\x10\x02\x12\x0f\n\x0bRIGHT_ARROW\x10\x03\x12\x0f\n\x0bUTURN_ARROW\x10\x04\"\x87\x01\n\x19TrafficLightDetectionTask\x12\x0f\n\x07task_id\x18\x01 \x01(\x05\x12\x1b\n\x13traffic_light_token\x18\x02 \x03(\x05\x12<\n\x0ctraffic_type\x18\x03 \x01(\x0e\x32&.deeproute.perception.TrafficLightType\"\xcd\x02\n\x0eTrafficLight3D\x12\n\n\x02id\x18\x01 \x01(\x05\x12<\n\x0ctraffic_type\x18\x02 \x01(\x0e\x32&.deeproute.perception.TrafficLightType\x12+\n\x08position\x18\x03 \x01(\x0b\x32\x19.deeproute.common.Point3D\x12\x39\n\x05\x63olor\x18\x04 \x01(\x0e\x32*.deeproute.perception.TrafficLight3D.Color\x12\r\n\x05width\x18\x05 \x01(\x02\x12\x0e\n\x06height\x18\x06 \x01(\x02\x12\x0e\n\x06length\x18\x07 \x01(\x02\x12\x19\n\x11\x63ount_down_number\x18\x08 \x01(\x05\"?\n\x05\x43olor\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x07\n\x03RED\x10\x01\x12\n\n\x06YELLOW\x10\x02\x12\t\n\x05GREEN\x10\x03\x12\t\n\x05\x42LACK\x10\x04\"\xc9\x01\n\x14TrafficLightResponse\x12:\n\x0etraffic_lights\x18\x01 \x03(\x0b\x32\".deeproute.perception.TrafficLight\x12\x12\n\ntime_stamp\x18\x02 \x01(\x03\x12>\n\x10traffic_light_3d\x18\x03 \x03(\x0b\x32$.deeproute.perception.TrafficLight3D\x12!\n\x19virtual_traffic_lights_id\x18\x04 \x01(\x03*L\n\x10TrafficLightType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0b\n\x07\x46ORWARD\x10\x01\x12\x08\n\x04LEFT\x10\x02\x12\t\n\x05RIGHT\x10\x03\x12\t\n\x05UTURN\x10\x04')

_TRAFFICLIGHTTYPE = DESCRIPTOR.enum_types_by_name['TrafficLightType']
TrafficLightType = enum_type_wrapper.EnumTypeWrapper(_TRAFFICLIGHTTYPE)
UNKNOWN = 0
FORWARD = 1
LEFT = 2
RIGHT = 3
UTURN = 4


_TRAFFICLIGHTBOX = DESCRIPTOR.message_types_by_name['TrafficLightBox']
_TRAFFICLIGHT = DESCRIPTOR.message_types_by_name['TrafficLight']
_TRAFFICLIGHTDETECTIONTASK = DESCRIPTOR.message_types_by_name['TrafficLightDetectionTask']
_TRAFFICLIGHT3D = DESCRIPTOR.message_types_by_name['TrafficLight3D']
_TRAFFICLIGHTRESPONSE = DESCRIPTOR.message_types_by_name['TrafficLightResponse']
_TRAFFICLIGHT_COLOR = _TRAFFICLIGHT.enum_types_by_name['Color']
_TRAFFICLIGHT_SHAPE = _TRAFFICLIGHT.enum_types_by_name['Shape']
_TRAFFICLIGHT3D_COLOR = _TRAFFICLIGHT3D.enum_types_by_name['Color']
TrafficLightBox = _reflection.GeneratedProtocolMessageType('TrafficLightBox', (_message.Message,), {
  'DESCRIPTOR' : _TRAFFICLIGHTBOX,
  '__module__' : 'perception.traffic_light_detection_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.perception.TrafficLightBox)
  })
_sym_db.RegisterMessage(TrafficLightBox)

TrafficLight = _reflection.GeneratedProtocolMessageType('TrafficLight', (_message.Message,), {
  'DESCRIPTOR' : _TRAFFICLIGHT,
  '__module__' : 'perception.traffic_light_detection_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.perception.TrafficLight)
  })
_sym_db.RegisterMessage(TrafficLight)

TrafficLightDetectionTask = _reflection.GeneratedProtocolMessageType('TrafficLightDetectionTask', (_message.Message,), {
  'DESCRIPTOR' : _TRAFFICLIGHTDETECTIONTASK,
  '__module__' : 'perception.traffic_light_detection_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.perception.TrafficLightDetectionTask)
  })
_sym_db.RegisterMessage(TrafficLightDetectionTask)

TrafficLight3D = _reflection.GeneratedProtocolMessageType('TrafficLight3D', (_message.Message,), {
  'DESCRIPTOR' : _TRAFFICLIGHT3D,
  '__module__' : 'perception.traffic_light_detection_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.perception.TrafficLight3D)
  })
_sym_db.RegisterMessage(TrafficLight3D)

TrafficLightResponse = _reflection.GeneratedProtocolMessageType('TrafficLightResponse', (_message.Message,), {
  'DESCRIPTOR' : _TRAFFICLIGHTRESPONSE,
  '__module__' : 'perception.traffic_light_detection_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.perception.TrafficLightResponse)
  })
_sym_db.RegisterMessage(TrafficLightResponse)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _TRAFFICLIGHTTYPE._serialized_start=1731
  _TRAFFICLIGHTTYPE._serialized_end=1807
  _TRAFFICLIGHTBOX._serialized_start=89
  _TRAFFICLIGHTBOX._serialized_end=159
  _TRAFFICLIGHT._serialized_start=162
  _TRAFFICLIGHT._serialized_end=1051
  _TRAFFICLIGHT_COLOR._serialized_start=898
  _TRAFFICLIGHT_COLOR._serialized_end=961
  _TRAFFICLIGHT_SHAPE._serialized_start=963
  _TRAFFICLIGHT_SHAPE._serialized_end=1051
  _TRAFFICLIGHTDETECTIONTASK._serialized_start=1054
  _TRAFFICLIGHTDETECTIONTASK._serialized_end=1189
  _TRAFFICLIGHT3D._serialized_start=1192
  _TRAFFICLIGHT3D._serialized_end=1525
  _TRAFFICLIGHT3D_COLOR._serialized_start=898
  _TRAFFICLIGHT3D_COLOR._serialized_end=961
  _TRAFFICLIGHTRESPONSE._serialized_start=1528
  _TRAFFICLIGHTRESPONSE._serialized_end=1729
# @@protoc_insertion_point(module_scope)
