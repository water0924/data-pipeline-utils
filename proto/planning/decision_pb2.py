# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: planning/decision.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from proto.common import geometry_pb2 as common_dot_geometry__pb2
from proto.common import vehicle_signal_pb2 as common_dot_vehicle__signal__pb2
from proto.routing import routing_pb2 as routing_dot_routing__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x17planning/decision.proto\x12\x14\x64\x65\x65proute.taskconfig\x1a\x15\x63ommon/geometry.proto\x1a\x1b\x63ommon/vehicle_signal.proto\x1a\x15routing/routing.proto\"M\n\nTargetLane\x12\n\n\x02id\x18\x01 \x01(\t\x12\x0f\n\x07start_s\x18\x02 \x01(\x01\x12\r\n\x05\x65nd_s\x18\x03 \x01(\x01\x12\x13\n\x0bspeed_limit\x18\x04 \x01(\x01\"Z\n\x0cObjectIgnore\x12\x35\n\x04type\x18\x01 \x01(\x0e\x32\'.deeproute.taskconfig.ObjectIgnore.Type\"\x13\n\x04Type\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x01\"\xbc\x01\n\nObjectStop\x12\x39\n\x0breason_code\x18\x01 \x01(\x0e\x32$.deeproute.taskconfig.StopReasonCode\x12\x12\n\ndistance_s\x18\x02 \x01(\x01\x12.\n\nstop_point\x18\x03 \x01(\x0b\x32\x1a.deeproute.common.PointENU\x12\x14\n\x0cstop_heading\x18\x04 \x01(\x01\x12\x19\n\x11wait_for_obstacle\x18\x05 \x03(\t\"\x8e\x01\n\x0bObjectNudge\x12\x34\n\x04type\x18\x01 \x01(\x0e\x32&.deeproute.taskconfig.ObjectNudge.Type\x12\x12\n\ndistance_l\x18\x02 \x01(\x01\"5\n\x04Type\x12\x0e\n\nLEFT_NUDGE\x10\x01\x12\x0f\n\x0bRIGHT_NUDGE\x10\x02\x12\x0c\n\x08NO_NUDGE\x10\x03\"\x8e\x01\n\x0bObjectClose\x12\x34\n\x04type\x18\x01 \x01(\x0e\x32&.deeproute.taskconfig.ObjectClose.Type\x12\x12\n\ndistance_l\x18\x02 \x01(\x01\"5\n\x04Type\x12\x0e\n\nLEFT_NUDGE\x10\x01\x12\x0f\n\x0bRIGHT_NUDGE\x10\x02\x12\x0c\n\x08NO_NUDGE\x10\x03\"\x93\x01\n\x0bObjectYield\x12\x12\n\ndistance_s\x18\x01 \x01(\x01\x12/\n\x0b\x66\x65nce_point\x18\x02 \x01(\x0b\x32\x1a.deeproute.common.PointENU\x12\x15\n\rfence_heading\x18\x03 \x01(\x01\x12\x13\n\x0btime_buffer\x18\x04 \x01(\x01\x12\x13\n\x0bspeed_limit\x18\x05 \x01(\x01\"j\n\x0cObjectFollow\x12\x12\n\ndistance_s\x18\x01 \x01(\x01\x12/\n\x0b\x66\x65nce_point\x18\x02 \x01(\x0b\x32\x1a.deeproute.common.PointENU\x12\x15\n\rfence_heading\x18\x03 \x01(\x01\"\x81\x01\n\x0eObjectOvertake\x12\x12\n\ndistance_s\x18\x01 \x01(\x01\x12/\n\x0b\x66\x65nce_point\x18\x02 \x01(\x0b\x32\x1a.deeproute.common.PointENU\x12\x15\n\rfence_heading\x18\x03 \x01(\x01\x12\x13\n\x0btime_buffer\x18\x04 \x01(\x01\"f\n\x0eObjectSidePass\x12\x37\n\x04type\x18\x01 \x01(\x0e\x32).deeproute.taskconfig.ObjectSidePass.Type\"\x1b\n\x04Type\x12\x08\n\x04LEFT\x10\x01\x12\t\n\x05RIGHT\x10\x02\"\r\n\x0bObjectAvoid\"f\n\x12ObjectSoftOvertake\x12;\n\x04type\x18\x01 \x01(\x0e\x32-.deeproute.taskconfig.ObjectSoftOvertake.Type\"\x13\n\x04Type\x12\x0b\n\x07\x44\x45\x46\x41ULT\x10\x01\"\xcb\x04\n\x12ObjectDecisionType\x12\x34\n\x06ignore\x18\x01 \x01(\x0b\x32\".deeproute.taskconfig.ObjectIgnoreH\x00\x12\x30\n\x04stop\x18\x02 \x01(\x0b\x32 .deeproute.taskconfig.ObjectStopH\x00\x12\x34\n\x06\x66ollow\x18\x03 \x01(\x0b\x32\".deeproute.taskconfig.ObjectFollowH\x00\x12\x32\n\x05yield\x18\x04 \x01(\x0b\x32!.deeproute.taskconfig.ObjectYieldH\x00\x12\x38\n\x08overtake\x18\x05 \x01(\x0b\x32$.deeproute.taskconfig.ObjectOvertakeH\x00\x12\x36\n\x05nudge\x18\x06 \x01(\x0b\x32!.deeproute.taskconfig.ObjectNudgeB\x02\x18\x01H\x00\x12\x32\n\x05\x61void\x18\x07 \x01(\x0b\x32!.deeproute.taskconfig.ObjectAvoidH\x00\x12\x32\n\x05\x63lose\x18\x08 \x01(\x0b\x32!.deeproute.taskconfig.ObjectCloseH\x00\x12\x38\n\x08sidepass\x18\t \x01(\x0b\x32$.deeproute.taskconfig.ObjectSidePassH\x00\x12\x41\n\rsoft_overtake\x18\n \x01(\x0b\x32(.deeproute.taskconfig.ObjectSoftOvertakeH\x00\x42\x0c\n\nobject_tag\"v\n\x0eObjectDecision\x12\n\n\x02id\x18\x01 \x01(\t\x12\x15\n\rperception_id\x18\x02 \x01(\x05\x12\x41\n\x0fobject_decision\x18\x03 \x03(\x0b\x32(.deeproute.taskconfig.ObjectDecisionType\"I\n\x0fObjectDecisions\x12\x36\n\x08\x64\x65\x63ision\x18\x01 \x03(\x0b\x32$.deeproute.taskconfig.ObjectDecision\"\xd8\x01\n\x08MainStop\x12\x39\n\x0breason_code\x18\x01 \x01(\x0e\x32$.deeproute.taskconfig.StopReasonCode\x12\x0e\n\x06reason\x18\x02 \x01(\t\x12.\n\nstop_point\x18\x03 \x01(\x0b\x32\x1a.deeproute.common.PointENU\x12\x14\n\x0cstop_heading\x18\x04 \x01(\x01\x12;\n\x10\x63hange_lane_type\x18\x05 \x01(\x0e\x32!.deeproute.routing.ChangeLaneType\"\x18\n\x16\x45mergencyStopHardBrake\"\x1b\n\x19\x45mergencyStopCruiseToStop\"\xae\x03\n\x11MainEmergencyStop\x12G\n\x0breason_code\x18\x01 \x01(\x0e\x32\x32.deeproute.taskconfig.MainEmergencyStop.ReasonCode\x12\x0e\n\x06reason\x18\x02 \x01(\t\x12\x42\n\nhard_brake\x18\x03 \x01(\x0b\x32,.deeproute.taskconfig.EmergencyStopHardBrakeH\x00\x12I\n\x0e\x63ruise_to_stop\x18\x04 \x01(\x0b\x32/.deeproute.taskconfig.EmergencyStopCruiseToStopH\x00\"\xa8\x01\n\nReasonCode\x12\x1d\n\x19\x45STOP_REASON_INTERNAL_ERR\x10\x01\x12\x1a\n\x16\x45STOP_REASON_COLLISION\x10\x02\x12\x1d\n\x19\x45STOP_REASON_ST_FIND_PATH\x10\x03\x12!\n\x1d\x45STOP_REASON_ST_MAKE_DECISION\x10\x04\x12\x1d\n\x19\x45STOP_REASON_SENSOR_ERROR\x10\x05\x42\x06\n\x04task\"I\n\nMainCruise\x12;\n\x10\x63hange_lane_type\x18\x01 \x01(\x0e\x32!.deeproute.routing.ChangeLaneType\"\x93\x02\n\x0eMainChangeLane\x12\x37\n\x04type\x18\x01 \x01(\x0e\x32).deeproute.taskconfig.MainChangeLane.Type\x12\x36\n\x0c\x64\x65\x66\x61ult_lane\x18\x02 \x03(\x0b\x32 .deeproute.taskconfig.TargetLane\x12\x39\n\x11\x64\x65\x66\x61ult_lane_stop\x18\x03 \x01(\x0b\x32\x1e.deeproute.taskconfig.MainStop\x12\x38\n\x10target_lane_stop\x18\x04 \x01(\x0b\x32\x1e.deeproute.taskconfig.MainStop\"\x1b\n\x04Type\x12\x08\n\x04LEFT\x10\x01\x12\t\n\x05RIGHT\x10\x02\"[\n\x13MainMissionComplete\x12.\n\nstop_point\x18\x01 \x01(\x0b\x32\x1a.deeproute.common.PointENU\x12\x14\n\x0cstop_heading\x18\x02 \x01(\x01\"\x1e\n\x0cMainNotReady\x12\x0e\n\x06reason\x18\x01 \x01(\t\"\r\n\x0bMainParking\"\xe6\x03\n\x0cMainDecision\x12\x32\n\x06\x63ruise\x18\x01 \x01(\x0b\x32 .deeproute.taskconfig.MainCruiseH\x00\x12.\n\x04stop\x18\x02 \x01(\x0b\x32\x1e.deeproute.taskconfig.MainStopH\x00\x12\x38\n\x05\x65stop\x18\x03 \x01(\x0b\x32\'.deeproute.taskconfig.MainEmergencyStopH\x00\x12?\n\x0b\x63hange_lane\x18\x04 \x01(\x0b\x32$.deeproute.taskconfig.MainChangeLaneB\x02\x18\x01H\x00\x12\x45\n\x10mission_complete\x18\x06 \x01(\x0b\x32).deeproute.taskconfig.MainMissionCompleteH\x00\x12\x37\n\tnot_ready\x18\x07 \x01(\x0b\x32\".deeproute.taskconfig.MainNotReadyH\x00\x12\x34\n\x07parking\x18\x08 \x01(\x0b\x32!.deeproute.taskconfig.MainParkingH\x00\x12\x39\n\x0btarget_lane\x18\x05 \x03(\x0b\x32 .deeproute.taskconfig.TargetLaneB\x02\x18\x01\x42\x06\n\x04task\"\xc4\x01\n\x0e\x44\x65\x63isionResult\x12\x39\n\rmain_decision\x18\x01 \x01(\x0b\x32\".deeproute.taskconfig.MainDecision\x12>\n\x0fobject_decision\x18\x02 \x01(\x0b\x32%.deeproute.taskconfig.ObjectDecisions\x12\x37\n\x0evehicle_signal\x18\x03 \x01(\x0b\x32\x1f.deeproute.common.VehicleSignal*\xb7\x04\n\x0eStopReasonCode\x12\x1c\n\x18STOP_REASON_HEAD_VEHICLE\x10\x01\x12\x1b\n\x17STOP_REASON_DESTINATION\x10\x02\x12\x1a\n\x16STOP_REASON_PEDESTRIAN\x10\x03\x12\x18\n\x14STOP_REASON_OBSTACLE\x10\x04\x12\x1a\n\x16STOP_REASON_PREPARKING\x10\x05\x12\x16\n\x12STOP_REASON_SIGNAL\x10\x64\x12\x19\n\x15STOP_REASON_STOP_SIGN\x10\x65\x12\x1a\n\x16STOP_REASON_YIELD_SIGN\x10\x66\x12\x1a\n\x16STOP_REASON_CLEAR_ZONE\x10g\x12\x19\n\x15STOP_REASON_CROSSWALK\x10h\x12\x17\n\x13STOP_REASON_CREEPER\x10i\x12\x1d\n\x19STOP_REASON_REFERENCE_END\x10j\x12\x1d\n\x19STOP_REASON_YELLOW_SIGNAL\x10k\x12\x19\n\x15STOP_REASON_PULL_OVER\x10l\x12\x1f\n\x1bSTOP_REASON_SIDEPASS_SAFETY\x10m\x12$\n\x1fSTOP_REASON_PRE_OPEN_SPACE_STOP\x10\xc8\x01\x12$\n\x1fSTOP_REASON_LANE_CHANGE_URGENCY\x10\xc9\x01\x12\x1d\n\x18STOP_REASON_TOLL_STATION\x10\xca\x01\x12\x14\n\x0fSTOP_REASON_EOP\x10\xcb\x01')

_STOPREASONCODE = DESCRIPTOR.enum_types_by_name['StopReasonCode']
StopReasonCode = enum_type_wrapper.EnumTypeWrapper(_STOPREASONCODE)
STOP_REASON_HEAD_VEHICLE = 1
STOP_REASON_DESTINATION = 2
STOP_REASON_PEDESTRIAN = 3
STOP_REASON_OBSTACLE = 4
STOP_REASON_PREPARKING = 5
STOP_REASON_SIGNAL = 100
STOP_REASON_STOP_SIGN = 101
STOP_REASON_YIELD_SIGN = 102
STOP_REASON_CLEAR_ZONE = 103
STOP_REASON_CROSSWALK = 104
STOP_REASON_CREEPER = 105
STOP_REASON_REFERENCE_END = 106
STOP_REASON_YELLOW_SIGNAL = 107
STOP_REASON_PULL_OVER = 108
STOP_REASON_SIDEPASS_SAFETY = 109
STOP_REASON_PRE_OPEN_SPACE_STOP = 200
STOP_REASON_LANE_CHANGE_URGENCY = 201
STOP_REASON_TOLL_STATION = 202
STOP_REASON_EOP = 203


_TARGETLANE = DESCRIPTOR.message_types_by_name['TargetLane']
_OBJECTIGNORE = DESCRIPTOR.message_types_by_name['ObjectIgnore']
_OBJECTSTOP = DESCRIPTOR.message_types_by_name['ObjectStop']
_OBJECTNUDGE = DESCRIPTOR.message_types_by_name['ObjectNudge']
_OBJECTCLOSE = DESCRIPTOR.message_types_by_name['ObjectClose']
_OBJECTYIELD = DESCRIPTOR.message_types_by_name['ObjectYield']
_OBJECTFOLLOW = DESCRIPTOR.message_types_by_name['ObjectFollow']
_OBJECTOVERTAKE = DESCRIPTOR.message_types_by_name['ObjectOvertake']
_OBJECTSIDEPASS = DESCRIPTOR.message_types_by_name['ObjectSidePass']
_OBJECTAVOID = DESCRIPTOR.message_types_by_name['ObjectAvoid']
_OBJECTSOFTOVERTAKE = DESCRIPTOR.message_types_by_name['ObjectSoftOvertake']
_OBJECTDECISIONTYPE = DESCRIPTOR.message_types_by_name['ObjectDecisionType']
_OBJECTDECISION = DESCRIPTOR.message_types_by_name['ObjectDecision']
_OBJECTDECISIONS = DESCRIPTOR.message_types_by_name['ObjectDecisions']
_MAINSTOP = DESCRIPTOR.message_types_by_name['MainStop']
_EMERGENCYSTOPHARDBRAKE = DESCRIPTOR.message_types_by_name['EmergencyStopHardBrake']
_EMERGENCYSTOPCRUISETOSTOP = DESCRIPTOR.message_types_by_name['EmergencyStopCruiseToStop']
_MAINEMERGENCYSTOP = DESCRIPTOR.message_types_by_name['MainEmergencyStop']
_MAINCRUISE = DESCRIPTOR.message_types_by_name['MainCruise']
_MAINCHANGELANE = DESCRIPTOR.message_types_by_name['MainChangeLane']
_MAINMISSIONCOMPLETE = DESCRIPTOR.message_types_by_name['MainMissionComplete']
_MAINNOTREADY = DESCRIPTOR.message_types_by_name['MainNotReady']
_MAINPARKING = DESCRIPTOR.message_types_by_name['MainParking']
_MAINDECISION = DESCRIPTOR.message_types_by_name['MainDecision']
_DECISIONRESULT = DESCRIPTOR.message_types_by_name['DecisionResult']
_OBJECTIGNORE_TYPE = _OBJECTIGNORE.enum_types_by_name['Type']
_OBJECTNUDGE_TYPE = _OBJECTNUDGE.enum_types_by_name['Type']
_OBJECTCLOSE_TYPE = _OBJECTCLOSE.enum_types_by_name['Type']
_OBJECTSIDEPASS_TYPE = _OBJECTSIDEPASS.enum_types_by_name['Type']
_OBJECTSOFTOVERTAKE_TYPE = _OBJECTSOFTOVERTAKE.enum_types_by_name['Type']
_MAINEMERGENCYSTOP_REASONCODE = _MAINEMERGENCYSTOP.enum_types_by_name['ReasonCode']
_MAINCHANGELANE_TYPE = _MAINCHANGELANE.enum_types_by_name['Type']
TargetLane = _reflection.GeneratedProtocolMessageType('TargetLane', (_message.Message,), {
  'DESCRIPTOR' : _TARGETLANE,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.TargetLane)
  })
_sym_db.RegisterMessage(TargetLane)

ObjectIgnore = _reflection.GeneratedProtocolMessageType('ObjectIgnore', (_message.Message,), {
  'DESCRIPTOR' : _OBJECTIGNORE,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.ObjectIgnore)
  })
_sym_db.RegisterMessage(ObjectIgnore)

ObjectStop = _reflection.GeneratedProtocolMessageType('ObjectStop', (_message.Message,), {
  'DESCRIPTOR' : _OBJECTSTOP,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.ObjectStop)
  })
_sym_db.RegisterMessage(ObjectStop)

ObjectNudge = _reflection.GeneratedProtocolMessageType('ObjectNudge', (_message.Message,), {
  'DESCRIPTOR' : _OBJECTNUDGE,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.ObjectNudge)
  })
_sym_db.RegisterMessage(ObjectNudge)

ObjectClose = _reflection.GeneratedProtocolMessageType('ObjectClose', (_message.Message,), {
  'DESCRIPTOR' : _OBJECTCLOSE,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.ObjectClose)
  })
_sym_db.RegisterMessage(ObjectClose)

ObjectYield = _reflection.GeneratedProtocolMessageType('ObjectYield', (_message.Message,), {
  'DESCRIPTOR' : _OBJECTYIELD,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.ObjectYield)
  })
_sym_db.RegisterMessage(ObjectYield)

ObjectFollow = _reflection.GeneratedProtocolMessageType('ObjectFollow', (_message.Message,), {
  'DESCRIPTOR' : _OBJECTFOLLOW,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.ObjectFollow)
  })
_sym_db.RegisterMessage(ObjectFollow)

ObjectOvertake = _reflection.GeneratedProtocolMessageType('ObjectOvertake', (_message.Message,), {
  'DESCRIPTOR' : _OBJECTOVERTAKE,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.ObjectOvertake)
  })
_sym_db.RegisterMessage(ObjectOvertake)

ObjectSidePass = _reflection.GeneratedProtocolMessageType('ObjectSidePass', (_message.Message,), {
  'DESCRIPTOR' : _OBJECTSIDEPASS,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.ObjectSidePass)
  })
_sym_db.RegisterMessage(ObjectSidePass)

ObjectAvoid = _reflection.GeneratedProtocolMessageType('ObjectAvoid', (_message.Message,), {
  'DESCRIPTOR' : _OBJECTAVOID,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.ObjectAvoid)
  })
_sym_db.RegisterMessage(ObjectAvoid)

ObjectSoftOvertake = _reflection.GeneratedProtocolMessageType('ObjectSoftOvertake', (_message.Message,), {
  'DESCRIPTOR' : _OBJECTSOFTOVERTAKE,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.ObjectSoftOvertake)
  })
_sym_db.RegisterMessage(ObjectSoftOvertake)

ObjectDecisionType = _reflection.GeneratedProtocolMessageType('ObjectDecisionType', (_message.Message,), {
  'DESCRIPTOR' : _OBJECTDECISIONTYPE,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.ObjectDecisionType)
  })
_sym_db.RegisterMessage(ObjectDecisionType)

ObjectDecision = _reflection.GeneratedProtocolMessageType('ObjectDecision', (_message.Message,), {
  'DESCRIPTOR' : _OBJECTDECISION,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.ObjectDecision)
  })
_sym_db.RegisterMessage(ObjectDecision)

ObjectDecisions = _reflection.GeneratedProtocolMessageType('ObjectDecisions', (_message.Message,), {
  'DESCRIPTOR' : _OBJECTDECISIONS,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.ObjectDecisions)
  })
_sym_db.RegisterMessage(ObjectDecisions)

MainStop = _reflection.GeneratedProtocolMessageType('MainStop', (_message.Message,), {
  'DESCRIPTOR' : _MAINSTOP,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.MainStop)
  })
_sym_db.RegisterMessage(MainStop)

EmergencyStopHardBrake = _reflection.GeneratedProtocolMessageType('EmergencyStopHardBrake', (_message.Message,), {
  'DESCRIPTOR' : _EMERGENCYSTOPHARDBRAKE,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.EmergencyStopHardBrake)
  })
_sym_db.RegisterMessage(EmergencyStopHardBrake)

EmergencyStopCruiseToStop = _reflection.GeneratedProtocolMessageType('EmergencyStopCruiseToStop', (_message.Message,), {
  'DESCRIPTOR' : _EMERGENCYSTOPCRUISETOSTOP,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.EmergencyStopCruiseToStop)
  })
_sym_db.RegisterMessage(EmergencyStopCruiseToStop)

MainEmergencyStop = _reflection.GeneratedProtocolMessageType('MainEmergencyStop', (_message.Message,), {
  'DESCRIPTOR' : _MAINEMERGENCYSTOP,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.MainEmergencyStop)
  })
_sym_db.RegisterMessage(MainEmergencyStop)

MainCruise = _reflection.GeneratedProtocolMessageType('MainCruise', (_message.Message,), {
  'DESCRIPTOR' : _MAINCRUISE,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.MainCruise)
  })
_sym_db.RegisterMessage(MainCruise)

MainChangeLane = _reflection.GeneratedProtocolMessageType('MainChangeLane', (_message.Message,), {
  'DESCRIPTOR' : _MAINCHANGELANE,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.MainChangeLane)
  })
_sym_db.RegisterMessage(MainChangeLane)

MainMissionComplete = _reflection.GeneratedProtocolMessageType('MainMissionComplete', (_message.Message,), {
  'DESCRIPTOR' : _MAINMISSIONCOMPLETE,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.MainMissionComplete)
  })
_sym_db.RegisterMessage(MainMissionComplete)

MainNotReady = _reflection.GeneratedProtocolMessageType('MainNotReady', (_message.Message,), {
  'DESCRIPTOR' : _MAINNOTREADY,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.MainNotReady)
  })
_sym_db.RegisterMessage(MainNotReady)

MainParking = _reflection.GeneratedProtocolMessageType('MainParking', (_message.Message,), {
  'DESCRIPTOR' : _MAINPARKING,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.MainParking)
  })
_sym_db.RegisterMessage(MainParking)

MainDecision = _reflection.GeneratedProtocolMessageType('MainDecision', (_message.Message,), {
  'DESCRIPTOR' : _MAINDECISION,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.MainDecision)
  })
_sym_db.RegisterMessage(MainDecision)

DecisionResult = _reflection.GeneratedProtocolMessageType('DecisionResult', (_message.Message,), {
  'DESCRIPTOR' : _DECISIONRESULT,
  '__module__' : 'planning.decision_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.taskconfig.DecisionResult)
  })
_sym_db.RegisterMessage(DecisionResult)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _OBJECTDECISIONTYPE.fields_by_name['nudge']._options = None
  _OBJECTDECISIONTYPE.fields_by_name['nudge']._serialized_options = b'\030\001'
  _MAINDECISION.fields_by_name['change_lane']._options = None
  _MAINDECISION.fields_by_name['change_lane']._serialized_options = b'\030\001'
  _MAINDECISION.fields_by_name['target_lane']._options = None
  _MAINDECISION.fields_by_name['target_lane']._serialized_options = b'\030\001'
  _STOPREASONCODE._serialized_start=4063
  _STOPREASONCODE._serialized_end=4630
  _TARGETLANE._serialized_start=124
  _TARGETLANE._serialized_end=201
  _OBJECTIGNORE._serialized_start=203
  _OBJECTIGNORE._serialized_end=293
  _OBJECTIGNORE_TYPE._serialized_start=274
  _OBJECTIGNORE_TYPE._serialized_end=293
  _OBJECTSTOP._serialized_start=296
  _OBJECTSTOP._serialized_end=484
  _OBJECTNUDGE._serialized_start=487
  _OBJECTNUDGE._serialized_end=629
  _OBJECTNUDGE_TYPE._serialized_start=576
  _OBJECTNUDGE_TYPE._serialized_end=629
  _OBJECTCLOSE._serialized_start=632
  _OBJECTCLOSE._serialized_end=774
  _OBJECTCLOSE_TYPE._serialized_start=576
  _OBJECTCLOSE_TYPE._serialized_end=629
  _OBJECTYIELD._serialized_start=777
  _OBJECTYIELD._serialized_end=924
  _OBJECTFOLLOW._serialized_start=926
  _OBJECTFOLLOW._serialized_end=1032
  _OBJECTOVERTAKE._serialized_start=1035
  _OBJECTOVERTAKE._serialized_end=1164
  _OBJECTSIDEPASS._serialized_start=1166
  _OBJECTSIDEPASS._serialized_end=1268
  _OBJECTSIDEPASS_TYPE._serialized_start=1241
  _OBJECTSIDEPASS_TYPE._serialized_end=1268
  _OBJECTAVOID._serialized_start=1270
  _OBJECTAVOID._serialized_end=1283
  _OBJECTSOFTOVERTAKE._serialized_start=1285
  _OBJECTSOFTOVERTAKE._serialized_end=1387
  _OBJECTSOFTOVERTAKE_TYPE._serialized_start=274
  _OBJECTSOFTOVERTAKE_TYPE._serialized_end=293
  _OBJECTDECISIONTYPE._serialized_start=1390
  _OBJECTDECISIONTYPE._serialized_end=1977
  _OBJECTDECISION._serialized_start=1979
  _OBJECTDECISION._serialized_end=2097
  _OBJECTDECISIONS._serialized_start=2099
  _OBJECTDECISIONS._serialized_end=2172
  _MAINSTOP._serialized_start=2175
  _MAINSTOP._serialized_end=2391
  _EMERGENCYSTOPHARDBRAKE._serialized_start=2393
  _EMERGENCYSTOPHARDBRAKE._serialized_end=2417
  _EMERGENCYSTOPCRUISETOSTOP._serialized_start=2419
  _EMERGENCYSTOPCRUISETOSTOP._serialized_end=2446
  _MAINEMERGENCYSTOP._serialized_start=2449
  _MAINEMERGENCYSTOP._serialized_end=2879
  _MAINEMERGENCYSTOP_REASONCODE._serialized_start=2703
  _MAINEMERGENCYSTOP_REASONCODE._serialized_end=2871
  _MAINCRUISE._serialized_start=2881
  _MAINCRUISE._serialized_end=2954
  _MAINCHANGELANE._serialized_start=2957
  _MAINCHANGELANE._serialized_end=3232
  _MAINCHANGELANE_TYPE._serialized_start=1241
  _MAINCHANGELANE_TYPE._serialized_end=1268
  _MAINMISSIONCOMPLETE._serialized_start=3234
  _MAINMISSIONCOMPLETE._serialized_end=3325
  _MAINNOTREADY._serialized_start=3327
  _MAINNOTREADY._serialized_end=3357
  _MAINPARKING._serialized_start=3359
  _MAINPARKING._serialized_end=3372
  _MAINDECISION._serialized_start=3375
  _MAINDECISION._serialized_end=3861
  _DECISIONRESULT._serialized_start=3864
  _DECISIONRESULT._serialized_end=4060
# @@protoc_insertion_point(module_scope)
