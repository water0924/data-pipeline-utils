# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: localization/localization_internal_messages.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from proto.common import geometry_pb2 as common_dot_geometry__pb2
from proto.drivers import pointcloud2_pb2 as drivers_dot_pointcloud2__pb2
from proto.perception import deeproute_perception_ras_map_pb2 as perception_dot_deeproute__perception__ras__map__pb2
from proto.localization import havp_map_pb2 as localization_dot_havp__map__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n1localization/localization_internal_messages.proto\x12\x1e\x64\x65\x65proute.localization.message\x1a\x15\x63ommon/geometry.proto\x1a\x19\x64rivers/pointcloud2.proto\x1a-perception/deeproute_perception_ras_map.proto\x1a\x1blocalization/havp_map.proto\"\xd4\x04\n\x14LidarMatchingMessage\x12\x18\n\x10measurement_time\x18\x01 \x01(\x03\x12\x16\n\x0ereference_time\x18\x02 \x01(\x03\x12\x43\n\rodometry_mode\x18\x03 \x01(\x0e\x32,.deeproute.localization.message.OdometryMode\x12\x35\n\ndelta_pose\x18\x04 \x01(\x0b\x32!.deeproute.common.Transformation3\x12\x1f\n\x13position_covariance\x18\x05 \x03(\x02\x42\x02\x10\x01\x12\x1f\n\x13\x61ttitude_covariance\x18\x06 \x03(\x02\x42\x02\x10\x01\x12;\n\x10pose_for_sensing\x18\x07 \x01(\x0b\x32!.deeproute.common.Transformation3\x12\x15\n\roverlap_ratio\x18\x08 \x01(\x01\x12\x15\n\ris_degenerate\x18\t \x01(\x08\x12\x33\n\x08map_pose\x18\n \x01(\x0b\x32!.deeproute.common.Transformation3\x12\x39\n\x0ereference_pose\x18\x0b \x01(\x0b\x32!.deeproute.common.Transformation3\x12\x1f\n\x17lidar_mapping_init_time\x18\x0c \x01(\x03\x12\x1b\n\x13matching_mean_error\x18\r \x01(\x01\x12\x14\n\x0cis_converged\x18\x0e \x01(\x08\x12\x1d\n\x15is_available_for_odom\x18\x0f \x01(\x08\"g\n\x14KeyframeUpdateStatus\x12\x18\n\x10measurement_time\x18\x01 \x01(\x03\x12\x17\n\x0fupdate_keyframe\x18\x02 \x01(\x08\x12\x1c\n\x14update_keyframe_time\x18\x03 \x01(\x03\"\xf1\x01\n\x11MapMatchingStatus\x12\x18\n\x10measurement_time\x18\x01 \x01(\x03\x12M\n\x1emap_to_odometry_transformation\x18\x02 \x01(\x0b\x32!.deeproute.common.Transformation3B\x02\x18\x01\x12H\n\x1dmap_to_vehicle_transformation\x18\x03 \x01(\x0b\x32!.deeproute.common.Transformation3\x12\x13\n\x0b\x65go_lane_id\x18\x04 \x01(\x03\x12\x14\n\x0c\x65go_floor_id\x18\x05 \x01(\x03\"\xca\x01\n\x10LidarMappingInfo\x12\x18\n\x10measurement_time\x18\x01 \x01(\x03\x12\x31\n\tlocal_map\x18\x02 \x01(\x0b\x32\x1e.deeproute.drivers.PointCloud2\x12H\n\x1dtransformation_map_to_sensing\x18\x03 \x01(\x0b\x32!.deeproute.common.Transformation3\x12\x1f\n\x17lidar_mapping_init_time\x18\x04 \x01(\x03\"\xdd\x02\n\x11GlobalRoutingInfo\x12\x18\n\x10measurement_time\x18\x01 \x01(\x03\x12.\n\x0bglobal_path\x18\x02 \x03(\x0b\x32\x19.deeproute.common.Point3D\x12\x1b\n\x13speed_limit_current\x18\x03 \x01(\x01\x12\x1e\n\x16route_remaining_length\x18\x04 \x01(\x01\x12\x34\n\x11\x64\x65stination_point\x18\x05 \x01(\x0b\x32\x19.deeproute.common.Point3D\x12@\n\x14target_parking_space\x18\x06 \x01(\x0b\x32\".deeproute.perception.ParkingSpace\x12I\n\x10map_trajectories\x18\x07 \x03(\x0b\x32/.deeproute.localization.havp_map.HAVPTrajectory*;\n\x0cOdometryMode\x12\x0c\n\x08ODOMETRY\x10\x01\x12\x07\n\x03LIO\x10\x02\x12\x14\n\x10MAP_REGISTRATION\x10\x03')

_ODOMETRYMODE = DESCRIPTOR.enum_types_by_name['OdometryMode']
OdometryMode = enum_type_wrapper.EnumTypeWrapper(_ODOMETRYMODE)
ODOMETRY = 1
LIO = 2
MAP_REGISTRATION = 3


_LIDARMATCHINGMESSAGE = DESCRIPTOR.message_types_by_name['LidarMatchingMessage']
_KEYFRAMEUPDATESTATUS = DESCRIPTOR.message_types_by_name['KeyframeUpdateStatus']
_MAPMATCHINGSTATUS = DESCRIPTOR.message_types_by_name['MapMatchingStatus']
_LIDARMAPPINGINFO = DESCRIPTOR.message_types_by_name['LidarMappingInfo']
_GLOBALROUTINGINFO = DESCRIPTOR.message_types_by_name['GlobalRoutingInfo']
LidarMatchingMessage = _reflection.GeneratedProtocolMessageType('LidarMatchingMessage', (_message.Message,), {
  'DESCRIPTOR' : _LIDARMATCHINGMESSAGE,
  '__module__' : 'localization.localization_internal_messages_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.localization.message.LidarMatchingMessage)
  })
_sym_db.RegisterMessage(LidarMatchingMessage)

KeyframeUpdateStatus = _reflection.GeneratedProtocolMessageType('KeyframeUpdateStatus', (_message.Message,), {
  'DESCRIPTOR' : _KEYFRAMEUPDATESTATUS,
  '__module__' : 'localization.localization_internal_messages_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.localization.message.KeyframeUpdateStatus)
  })
_sym_db.RegisterMessage(KeyframeUpdateStatus)

MapMatchingStatus = _reflection.GeneratedProtocolMessageType('MapMatchingStatus', (_message.Message,), {
  'DESCRIPTOR' : _MAPMATCHINGSTATUS,
  '__module__' : 'localization.localization_internal_messages_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.localization.message.MapMatchingStatus)
  })
_sym_db.RegisterMessage(MapMatchingStatus)

LidarMappingInfo = _reflection.GeneratedProtocolMessageType('LidarMappingInfo', (_message.Message,), {
  'DESCRIPTOR' : _LIDARMAPPINGINFO,
  '__module__' : 'localization.localization_internal_messages_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.localization.message.LidarMappingInfo)
  })
_sym_db.RegisterMessage(LidarMappingInfo)

GlobalRoutingInfo = _reflection.GeneratedProtocolMessageType('GlobalRoutingInfo', (_message.Message,), {
  'DESCRIPTOR' : _GLOBALROUTINGINFO,
  '__module__' : 'localization.localization_internal_messages_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.localization.message.GlobalRoutingInfo)
  })
_sym_db.RegisterMessage(GlobalRoutingInfo)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _LIDARMATCHINGMESSAGE.fields_by_name['position_covariance']._options = None
  _LIDARMATCHINGMESSAGE.fields_by_name['position_covariance']._serialized_options = b'\020\001'
  _LIDARMATCHINGMESSAGE.fields_by_name['attitude_covariance']._options = None
  _LIDARMATCHINGMESSAGE.fields_by_name['attitude_covariance']._serialized_options = b'\020\001'
  _MAPMATCHINGSTATUS.fields_by_name['map_to_odometry_transformation']._options = None
  _MAPMATCHINGSTATUS.fields_by_name['map_to_odometry_transformation']._serialized_options = b'\030\001'
  _ODOMETRYMODE._serialized_start=1716
  _ODOMETRYMODE._serialized_end=1775
  _LIDARMATCHINGMESSAGE._serialized_start=212
  _LIDARMATCHINGMESSAGE._serialized_end=808
  _KEYFRAMEUPDATESTATUS._serialized_start=810
  _KEYFRAMEUPDATESTATUS._serialized_end=913
  _MAPMATCHINGSTATUS._serialized_start=916
  _MAPMATCHINGSTATUS._serialized_end=1157
  _LIDARMAPPINGINFO._serialized_start=1160
  _LIDARMAPPINGINFO._serialized_end=1362
  _GLOBALROUTINGINFO._serialized_start=1365
  _GLOBALROUTINGINFO._serialized_end=1714
# @@protoc_insertion_point(module_scope)
