# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto.idl import localization_service_pb2 as idl_dot_localization__service__pb2


class LocalizationServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Init = channel.unary_unary(
                '/deeproute.idl.localization_service.LocalizationService/Init',
                request_serializer=idl_dot_localization__service__pb2.LocalizationInitRequest.SerializeToString,
                response_deserializer=idl_dot_localization__service__pb2.LocalizationInitResponse.FromString,
                )
        self.Proc = channel.unary_unary(
                '/deeproute.idl.localization_service.LocalizationService/Proc',
                request_serializer=idl_dot_localization__service__pb2.LocalizationProcRequest.SerializeToString,
                response_deserializer=idl_dot_localization__service__pb2.LocalizationProcResponse.FromString,
                )


class LocalizationServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Init(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Proc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_LocalizationServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Init': grpc.unary_unary_rpc_method_handler(
                    servicer.Init,
                    request_deserializer=idl_dot_localization__service__pb2.LocalizationInitRequest.FromString,
                    response_serializer=idl_dot_localization__service__pb2.LocalizationInitResponse.SerializeToString,
            ),
            'Proc': grpc.unary_unary_rpc_method_handler(
                    servicer.Proc,
                    request_deserializer=idl_dot_localization__service__pb2.LocalizationProcRequest.FromString,
                    response_serializer=idl_dot_localization__service__pb2.LocalizationProcResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'deeproute.idl.localization_service.LocalizationService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class LocalizationService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.idl.localization_service.LocalizationService/Init',
            idl_dot_localization__service__pb2.LocalizationInitRequest.SerializeToString,
            idl_dot_localization__service__pb2.LocalizationInitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Proc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.idl.localization_service.LocalizationService/Proc',
            idl_dot_localization__service__pb2.LocalizationProcRequest.SerializeToString,
            idl_dot_localization__service__pb2.LocalizationProcResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class RtkPoseForwardServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Init = channel.unary_unary(
                '/deeproute.idl.localization_service.RtkPoseForwardService/Init',
                request_serializer=idl_dot_localization__service__pb2.RtkPoseForwardInitRequest.SerializeToString,
                response_deserializer=idl_dot_localization__service__pb2.RtkPoseForwardInitResponse.FromString,
                )
        self.Proc = channel.unary_unary(
                '/deeproute.idl.localization_service.RtkPoseForwardService/Proc',
                request_serializer=idl_dot_localization__service__pb2.RtkPoseForwardProcRequest.SerializeToString,
                response_deserializer=idl_dot_localization__service__pb2.RtkPoseForwardProcResponse.FromString,
                )


class RtkPoseForwardServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Init(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Proc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RtkPoseForwardServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Init': grpc.unary_unary_rpc_method_handler(
                    servicer.Init,
                    request_deserializer=idl_dot_localization__service__pb2.RtkPoseForwardInitRequest.FromString,
                    response_serializer=idl_dot_localization__service__pb2.RtkPoseForwardInitResponse.SerializeToString,
            ),
            'Proc': grpc.unary_unary_rpc_method_handler(
                    servicer.Proc,
                    request_deserializer=idl_dot_localization__service__pb2.RtkPoseForwardProcRequest.FromString,
                    response_serializer=idl_dot_localization__service__pb2.RtkPoseForwardProcResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'deeproute.idl.localization_service.RtkPoseForwardService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class RtkPoseForwardService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.idl.localization_service.RtkPoseForwardService/Init',
            idl_dot_localization__service__pb2.RtkPoseForwardInitRequest.SerializeToString,
            idl_dot_localization__service__pb2.RtkPoseForwardInitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Proc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.idl.localization_service.RtkPoseForwardService/Proc',
            idl_dot_localization__service__pb2.RtkPoseForwardProcRequest.SerializeToString,
            idl_dot_localization__service__pb2.RtkPoseForwardProcResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class InsOnlineServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Init = channel.unary_unary(
                '/deeproute.idl.localization_service.InsOnlineService/Init',
                request_serializer=idl_dot_localization__service__pb2.InsOnlineInitRequest.SerializeToString,
                response_deserializer=idl_dot_localization__service__pb2.InsOnlineInitResponse.FromString,
                )
        self.Proc = channel.unary_unary(
                '/deeproute.idl.localization_service.InsOnlineService/Proc',
                request_serializer=idl_dot_localization__service__pb2.InsOnlineProcRequest.SerializeToString,
                response_deserializer=idl_dot_localization__service__pb2.InsOnlineProcResponse.FromString,
                )


class InsOnlineServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Init(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Proc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_InsOnlineServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Init': grpc.unary_unary_rpc_method_handler(
                    servicer.Init,
                    request_deserializer=idl_dot_localization__service__pb2.InsOnlineInitRequest.FromString,
                    response_serializer=idl_dot_localization__service__pb2.InsOnlineInitResponse.SerializeToString,
            ),
            'Proc': grpc.unary_unary_rpc_method_handler(
                    servicer.Proc,
                    request_deserializer=idl_dot_localization__service__pb2.InsOnlineProcRequest.FromString,
                    response_serializer=idl_dot_localization__service__pb2.InsOnlineProcResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'deeproute.idl.localization_service.InsOnlineService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class InsOnlineService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.idl.localization_service.InsOnlineService/Init',
            idl_dot_localization__service__pb2.InsOnlineInitRequest.SerializeToString,
            idl_dot_localization__service__pb2.InsOnlineInitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Proc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.idl.localization_service.InsOnlineService/Proc',
            idl_dot_localization__service__pb2.InsOnlineProcRequest.SerializeToString,
            idl_dot_localization__service__pb2.InsOnlineProcResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class ParkingEntryDetectionServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Init = channel.unary_unary(
                '/deeproute.idl.localization_service.ParkingEntryDetectionService/Init',
                request_serializer=idl_dot_localization__service__pb2.ParkingEntryDetectionInitRequest.SerializeToString,
                response_deserializer=idl_dot_localization__service__pb2.ParkingEntryDetectionInitResponse.FromString,
                )
        self.Proc = channel.unary_unary(
                '/deeproute.idl.localization_service.ParkingEntryDetectionService/Proc',
                request_serializer=idl_dot_localization__service__pb2.ParkingEntryDetectionProcRequest.SerializeToString,
                response_deserializer=idl_dot_localization__service__pb2.ParkingEntryDetectionProcResponse.FromString,
                )


class ParkingEntryDetectionServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Init(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Proc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ParkingEntryDetectionServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Init': grpc.unary_unary_rpc_method_handler(
                    servicer.Init,
                    request_deserializer=idl_dot_localization__service__pb2.ParkingEntryDetectionInitRequest.FromString,
                    response_serializer=idl_dot_localization__service__pb2.ParkingEntryDetectionInitResponse.SerializeToString,
            ),
            'Proc': grpc.unary_unary_rpc_method_handler(
                    servicer.Proc,
                    request_deserializer=idl_dot_localization__service__pb2.ParkingEntryDetectionProcRequest.FromString,
                    response_serializer=idl_dot_localization__service__pb2.ParkingEntryDetectionProcResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'deeproute.idl.localization_service.ParkingEntryDetectionService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class ParkingEntryDetectionService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.idl.localization_service.ParkingEntryDetectionService/Init',
            idl_dot_localization__service__pb2.ParkingEntryDetectionInitRequest.SerializeToString,
            idl_dot_localization__service__pb2.ParkingEntryDetectionInitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Proc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.idl.localization_service.ParkingEntryDetectionService/Proc',
            idl_dot_localization__service__pb2.ParkingEntryDetectionProcRequest.SerializeToString,
            idl_dot_localization__service__pb2.ParkingEntryDetectionProcResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class VpaMappingServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Init = channel.unary_unary(
                '/deeproute.idl.localization_service.VpaMappingService/Init',
                request_serializer=idl_dot_localization__service__pb2.VpaMappingInitRequest.SerializeToString,
                response_deserializer=idl_dot_localization__service__pb2.VpaMappingInitResponse.FromString,
                )
        self.Proc = channel.unary_unary(
                '/deeproute.idl.localization_service.VpaMappingService/Proc',
                request_serializer=idl_dot_localization__service__pb2.VpaMappingProcRequest.SerializeToString,
                response_deserializer=idl_dot_localization__service__pb2.VpaMappingProcResponse.FromString,
                )


class VpaMappingServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Init(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Proc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_VpaMappingServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Init': grpc.unary_unary_rpc_method_handler(
                    servicer.Init,
                    request_deserializer=idl_dot_localization__service__pb2.VpaMappingInitRequest.FromString,
                    response_serializer=idl_dot_localization__service__pb2.VpaMappingInitResponse.SerializeToString,
            ),
            'Proc': grpc.unary_unary_rpc_method_handler(
                    servicer.Proc,
                    request_deserializer=idl_dot_localization__service__pb2.VpaMappingProcRequest.FromString,
                    response_serializer=idl_dot_localization__service__pb2.VpaMappingProcResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'deeproute.idl.localization_service.VpaMappingService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class VpaMappingService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.idl.localization_service.VpaMappingService/Init',
            idl_dot_localization__service__pb2.VpaMappingInitRequest.SerializeToString,
            idl_dot_localization__service__pb2.VpaMappingInitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Proc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.idl.localization_service.VpaMappingService/Proc',
            idl_dot_localization__service__pb2.VpaMappingProcRequest.SerializeToString,
            idl_dot_localization__service__pb2.VpaMappingProcResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)


class OnboardMapLocServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.Init = channel.unary_unary(
                '/deeproute.idl.localization_service.OnboardMapLocService/Init',
                request_serializer=idl_dot_localization__service__pb2.OnboardMapLocInitRequest.SerializeToString,
                response_deserializer=idl_dot_localization__service__pb2.OnboardMapLocInitResponse.FromString,
                )
        self.Proc = channel.unary_unary(
                '/deeproute.idl.localization_service.OnboardMapLocService/Proc',
                request_serializer=idl_dot_localization__service__pb2.OnboardMapLocProcRequest.SerializeToString,
                response_deserializer=idl_dot_localization__service__pb2.OnboardMapLocProcResponse.FromString,
                )


class OnboardMapLocServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def Init(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Proc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_OnboardMapLocServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'Init': grpc.unary_unary_rpc_method_handler(
                    servicer.Init,
                    request_deserializer=idl_dot_localization__service__pb2.OnboardMapLocInitRequest.FromString,
                    response_serializer=idl_dot_localization__service__pb2.OnboardMapLocInitResponse.SerializeToString,
            ),
            'Proc': grpc.unary_unary_rpc_method_handler(
                    servicer.Proc,
                    request_deserializer=idl_dot_localization__service__pb2.OnboardMapLocProcRequest.FromString,
                    response_serializer=idl_dot_localization__service__pb2.OnboardMapLocProcResponse.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'deeproute.idl.localization_service.OnboardMapLocService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class OnboardMapLocService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def Init(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.idl.localization_service.OnboardMapLocService/Init',
            idl_dot_localization__service__pb2.OnboardMapLocInitRequest.SerializeToString,
            idl_dot_localization__service__pb2.OnboardMapLocInitResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def Proc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.idl.localization_service.OnboardMapLocService/Proc',
            idl_dot_localization__service__pb2.OnboardMapLocProcRequest.SerializeToString,
            idl_dot_localization__service__pb2.OnboardMapLocProcResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
