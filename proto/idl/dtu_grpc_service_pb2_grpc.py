# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from proto.idl import dtu_grpc_service_pb2 as idl_dot_dtu__grpc__service__pb2


class DtuServiceStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.SendCommand = channel.unary_unary(
                '/deeproute.grpc.dtu.DtuService/SendCommand',
                request_serializer=idl_dot_dtu__grpc__service__pb2.SendCommandRequest.SerializeToString,
                response_deserializer=idl_dot_dtu__grpc__service__pb2.SendCommandResponse.FromString,
                )
        self.UpdateCommandExecStatus = channel.unary_unary(
                '/deeproute.grpc.dtu.DtuService/UpdateCommandExecStatus',
                request_serializer=idl_dot_dtu__grpc__service__pb2.UpdateCommandExecStatusRequest.SerializeToString,
                response_deserializer=idl_dot_dtu__grpc__service__pb2.UpdateCommandExecStatusResponse.FromString,
                )
        self.ReportEvent = channel.unary_unary(
                '/deeproute.grpc.dtu.DtuService/ReportEvent',
                request_serializer=idl_dot_dtu__grpc__service__pb2.ReportEventRequest.SerializeToString,
                response_deserializer=idl_dot_dtu__grpc__service__pb2.ReportEventResponse.FromString,
                )
        self.UpdateRealTimeData = channel.unary_unary(
                '/deeproute.grpc.dtu.DtuService/UpdateRealTimeData',
                request_serializer=idl_dot_dtu__grpc__service__pb2.UpdateRealTimeDataRequest.SerializeToString,
                response_deserializer=idl_dot_dtu__grpc__service__pb2.UpdateRealTimeDataResponse.FromString,
                )
        self.GetDtuCommand = channel.unary_unary(
                '/deeproute.grpc.dtu.DtuService/GetDtuCommand',
                request_serializer=idl_dot_dtu__grpc__service__pb2.GetDtuCommandRequest.SerializeToString,
                response_deserializer=idl_dot_dtu__grpc__service__pb2.GetDtuCommandResponse.FromString,
                )
        self.SendApiCommand = channel.unary_unary(
                '/deeproute.grpc.dtu.DtuService/SendApiCommand',
                request_serializer=idl_dot_dtu__grpc__service__pb2.SendApiCommandRequest.SerializeToString,
                response_deserializer=idl_dot_dtu__grpc__service__pb2.SendApiCommandResponse.FromString,
                )
        self.GetOperationStatus = channel.unary_unary(
                '/deeproute.grpc.dtu.DtuService/GetOperationStatus',
                request_serializer=idl_dot_dtu__grpc__service__pb2.GetOperationStatusRequest.SerializeToString,
                response_deserializer=idl_dot_dtu__grpc__service__pb2.GetOperationStatusResponse.FromString,
                )
        self.GetSmartBusinessData = channel.unary_unary(
                '/deeproute.grpc.dtu.DtuService/GetSmartBusinessData',
                request_serializer=idl_dot_dtu__grpc__service__pb2.GetSmartBusinessRequest.SerializeToString,
                response_deserializer=idl_dot_dtu__grpc__service__pb2.GetSmartBusinessResponse.FromString,
                )
        self.GetRearWarningCommand = channel.unary_unary(
                '/deeproute.grpc.dtu.DtuService/GetRearWarningCommand',
                request_serializer=idl_dot_dtu__grpc__service__pb2.GetRearWarningCommandRequest.SerializeToString,
                response_deserializer=idl_dot_dtu__grpc__service__pb2.GetRearWarningCommandResponse.FromString,
                )
        self.GetRoutingResponse = channel.unary_unary(
                '/deeproute.grpc.dtu.DtuService/GetRoutingResponse',
                request_serializer=idl_dot_dtu__grpc__service__pb2.GetRoutingResponseRequest.SerializeToString,
                response_deserializer=idl_dot_dtu__grpc__service__pb2.GetRoutingResponseResponse.FromString,
                )
        self.GetRunTimeData = channel.unary_unary(
                '/deeproute.grpc.dtu.DtuService/GetRunTimeData',
                request_serializer=idl_dot_dtu__grpc__service__pb2.GetRunTimeDataRequest.SerializeToString,
                response_deserializer=idl_dot_dtu__grpc__service__pb2.GetRunTimeDataResponse.FromString,
                )
        self.GetLasInternalState = channel.unary_unary(
                '/deeproute.grpc.dtu.DtuService/GetLasInternalState',
                request_serializer=idl_dot_dtu__grpc__service__pb2.GetLasInternalStateRequest.SerializeToString,
                response_deserializer=idl_dot_dtu__grpc__service__pb2.GetLasInternalStateResponse.FromString,
                )
        self.ProcGrpc = channel.unary_unary(
                '/deeproute.grpc.dtu.DtuService/ProcGrpc',
                request_serializer=idl_dot_dtu__grpc__service__pb2.ProcReceive.SerializeToString,
                response_deserializer=idl_dot_dtu__grpc__service__pb2.ProcPublish.FromString,
                )


class DtuServiceServicer(object):
    """Missing associated documentation comment in .proto file."""

    def SendCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateCommandExecStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ReportEvent(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def UpdateRealTimeData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDtuCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def SendApiCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetOperationStatus(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetSmartBusinessData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRearWarningCommand(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRoutingResponse(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRunTimeData(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetLasInternalState(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ProcGrpc(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_DtuServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'SendCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.SendCommand,
                    request_deserializer=idl_dot_dtu__grpc__service__pb2.SendCommandRequest.FromString,
                    response_serializer=idl_dot_dtu__grpc__service__pb2.SendCommandResponse.SerializeToString,
            ),
            'UpdateCommandExecStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateCommandExecStatus,
                    request_deserializer=idl_dot_dtu__grpc__service__pb2.UpdateCommandExecStatusRequest.FromString,
                    response_serializer=idl_dot_dtu__grpc__service__pb2.UpdateCommandExecStatusResponse.SerializeToString,
            ),
            'ReportEvent': grpc.unary_unary_rpc_method_handler(
                    servicer.ReportEvent,
                    request_deserializer=idl_dot_dtu__grpc__service__pb2.ReportEventRequest.FromString,
                    response_serializer=idl_dot_dtu__grpc__service__pb2.ReportEventResponse.SerializeToString,
            ),
            'UpdateRealTimeData': grpc.unary_unary_rpc_method_handler(
                    servicer.UpdateRealTimeData,
                    request_deserializer=idl_dot_dtu__grpc__service__pb2.UpdateRealTimeDataRequest.FromString,
                    response_serializer=idl_dot_dtu__grpc__service__pb2.UpdateRealTimeDataResponse.SerializeToString,
            ),
            'GetDtuCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDtuCommand,
                    request_deserializer=idl_dot_dtu__grpc__service__pb2.GetDtuCommandRequest.FromString,
                    response_serializer=idl_dot_dtu__grpc__service__pb2.GetDtuCommandResponse.SerializeToString,
            ),
            'SendApiCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.SendApiCommand,
                    request_deserializer=idl_dot_dtu__grpc__service__pb2.SendApiCommandRequest.FromString,
                    response_serializer=idl_dot_dtu__grpc__service__pb2.SendApiCommandResponse.SerializeToString,
            ),
            'GetOperationStatus': grpc.unary_unary_rpc_method_handler(
                    servicer.GetOperationStatus,
                    request_deserializer=idl_dot_dtu__grpc__service__pb2.GetOperationStatusRequest.FromString,
                    response_serializer=idl_dot_dtu__grpc__service__pb2.GetOperationStatusResponse.SerializeToString,
            ),
            'GetSmartBusinessData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetSmartBusinessData,
                    request_deserializer=idl_dot_dtu__grpc__service__pb2.GetSmartBusinessRequest.FromString,
                    response_serializer=idl_dot_dtu__grpc__service__pb2.GetSmartBusinessResponse.SerializeToString,
            ),
            'GetRearWarningCommand': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRearWarningCommand,
                    request_deserializer=idl_dot_dtu__grpc__service__pb2.GetRearWarningCommandRequest.FromString,
                    response_serializer=idl_dot_dtu__grpc__service__pb2.GetRearWarningCommandResponse.SerializeToString,
            ),
            'GetRoutingResponse': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRoutingResponse,
                    request_deserializer=idl_dot_dtu__grpc__service__pb2.GetRoutingResponseRequest.FromString,
                    response_serializer=idl_dot_dtu__grpc__service__pb2.GetRoutingResponseResponse.SerializeToString,
            ),
            'GetRunTimeData': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRunTimeData,
                    request_deserializer=idl_dot_dtu__grpc__service__pb2.GetRunTimeDataRequest.FromString,
                    response_serializer=idl_dot_dtu__grpc__service__pb2.GetRunTimeDataResponse.SerializeToString,
            ),
            'GetLasInternalState': grpc.unary_unary_rpc_method_handler(
                    servicer.GetLasInternalState,
                    request_deserializer=idl_dot_dtu__grpc__service__pb2.GetLasInternalStateRequest.FromString,
                    response_serializer=idl_dot_dtu__grpc__service__pb2.GetLasInternalStateResponse.SerializeToString,
            ),
            'ProcGrpc': grpc.unary_unary_rpc_method_handler(
                    servicer.ProcGrpc,
                    request_deserializer=idl_dot_dtu__grpc__service__pb2.ProcReceive.FromString,
                    response_serializer=idl_dot_dtu__grpc__service__pb2.ProcPublish.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'deeproute.grpc.dtu.DtuService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))


 # This class is part of an EXPERIMENTAL API.
class DtuService(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def SendCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.grpc.dtu.DtuService/SendCommand',
            idl_dot_dtu__grpc__service__pb2.SendCommandRequest.SerializeToString,
            idl_dot_dtu__grpc__service__pb2.SendCommandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateCommandExecStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.grpc.dtu.DtuService/UpdateCommandExecStatus',
            idl_dot_dtu__grpc__service__pb2.UpdateCommandExecStatusRequest.SerializeToString,
            idl_dot_dtu__grpc__service__pb2.UpdateCommandExecStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ReportEvent(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.grpc.dtu.DtuService/ReportEvent',
            idl_dot_dtu__grpc__service__pb2.ReportEventRequest.SerializeToString,
            idl_dot_dtu__grpc__service__pb2.ReportEventResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def UpdateRealTimeData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.grpc.dtu.DtuService/UpdateRealTimeData',
            idl_dot_dtu__grpc__service__pb2.UpdateRealTimeDataRequest.SerializeToString,
            idl_dot_dtu__grpc__service__pb2.UpdateRealTimeDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetDtuCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.grpc.dtu.DtuService/GetDtuCommand',
            idl_dot_dtu__grpc__service__pb2.GetDtuCommandRequest.SerializeToString,
            idl_dot_dtu__grpc__service__pb2.GetDtuCommandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def SendApiCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.grpc.dtu.DtuService/SendApiCommand',
            idl_dot_dtu__grpc__service__pb2.SendApiCommandRequest.SerializeToString,
            idl_dot_dtu__grpc__service__pb2.SendApiCommandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetOperationStatus(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.grpc.dtu.DtuService/GetOperationStatus',
            idl_dot_dtu__grpc__service__pb2.GetOperationStatusRequest.SerializeToString,
            idl_dot_dtu__grpc__service__pb2.GetOperationStatusResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetSmartBusinessData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.grpc.dtu.DtuService/GetSmartBusinessData',
            idl_dot_dtu__grpc__service__pb2.GetSmartBusinessRequest.SerializeToString,
            idl_dot_dtu__grpc__service__pb2.GetSmartBusinessResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRearWarningCommand(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.grpc.dtu.DtuService/GetRearWarningCommand',
            idl_dot_dtu__grpc__service__pb2.GetRearWarningCommandRequest.SerializeToString,
            idl_dot_dtu__grpc__service__pb2.GetRearWarningCommandResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRoutingResponse(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.grpc.dtu.DtuService/GetRoutingResponse',
            idl_dot_dtu__grpc__service__pb2.GetRoutingResponseRequest.SerializeToString,
            idl_dot_dtu__grpc__service__pb2.GetRoutingResponseResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetRunTimeData(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.grpc.dtu.DtuService/GetRunTimeData',
            idl_dot_dtu__grpc__service__pb2.GetRunTimeDataRequest.SerializeToString,
            idl_dot_dtu__grpc__service__pb2.GetRunTimeDataResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def GetLasInternalState(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.grpc.dtu.DtuService/GetLasInternalState',
            idl_dot_dtu__grpc__service__pb2.GetLasInternalStateRequest.SerializeToString,
            idl_dot_dtu__grpc__service__pb2.GetLasInternalStateResponse.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)

    @staticmethod
    def ProcGrpc(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(request, target, '/deeproute.grpc.dtu.DtuService/ProcGrpc',
            idl_dot_dtu__grpc__service__pb2.ProcReceive.SerializeToString,
            idl_dot_dtu__grpc__service__pb2.ProcPublish.FromString,
            options, channel_credentials,
            insecure, call_credentials, compression, wait_for_ready, timeout, metadata)
