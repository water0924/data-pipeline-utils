# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: gwm/havp/havp_vehicle.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from proto.gwm.havp import havp_common_pb2 as gwm_dot_havp_dot_havp__common__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1bgwm/havp/havp_vehicle.proto\x12\x04havp\x1a\x1agwm/havp/havp_common.proto\"\xca\x01\n\x0e\x41VPVehicleData\x12\x11\n\ttimestamp\x18\x01 \x01(\x01\x12\x16\n\x03\x61pa\x18\x02 \x01(\x0b\x32\t.havp.APA\x12\'\n\x0chavp_mapping\x18\x03 \x01(\x0b\x32\x11.havp.HAVPMapping\x12%\n\x0bhavp_cruise\x18\x04 \x01(\x0b\x32\x10.havp.HAVPCruise\x12\x18\n\x04rads\x18\x05 \x01(\x0b\x32\n.havp.RADS\x12#\n\nsvp_cruise\x18\x06 \x01(\x0b\x32\x0f.havp.SVPCruise\"\xe2\x01\n\x03\x41PA\x12\x1a\n\x12left_path_distance\x18\x01 \x01(\x02\x12\x16\n\x03pas\x18\x02 \x01(\x0b\x32\t.havp.PAS\x12)\n\rparking_space\x18\x03 \x03(\x0b\x32\x12.havp.ParkingSpace\x12\x30\n\tobstacles\x18\x04 \x03(\x0b\x32\x1d.havp.ObjectDetectionObstacle\x12(\n\x13planning_trajectory\x18\x05 \x03(\x0b\x32\x0b.havp.Point\x12 \n\x08location\x18\x06 \x01(\x0b\x32\x0e.havp.Location\"\xca\x02\n\x0bHAVPMapping\x12 \n\x08location\x18\x01 \x01(\x0b\x32\x0e.havp.Location\x12\x16\n\x03pas\x18\x02 \x01(\x0b\x32\t.havp.PAS\x12\x1c\n\x14total_learn_distance\x18\x03 \x01(\x05\x12\x17\n\x0froad_bump_times\x18\x04 \x01(\x05\x12)\n\rparking_space\x18\x05 \x03(\x0b\x32\x12.havp.ParkingSpace\x12\x30\n\tobstacles\x18\x06 \x03(\x0b\x32\x1d.havp.ObjectDetectionObstacle\x12\'\n\x12mapping_trajectory\x18\x07 \x03(\x0b\x32\x0b.havp.Point\x12\x1a\n\x12left_path_distance\x18\x08 \x01(\x02\x12(\n\x13planning_trajectory\x18\t \x03(\x0b\x32\x0b.havp.Point\"\x97\x03\n\nHAVPCruise\x12 \n\x08location\x18\x01 \x01(\x0b\x32\x0e.havp.Location\x12\x16\n\x03pas\x18\x02 \x01(\x0b\x32\t.havp.PAS\x12\x15\n\rdistance_left\x18\x03 \x01(\x05\x12\x0b\n\x03odm\x18\x04 \x01(\x05\x12\x1b\n\x13\x61round_person_times\x18\x05 \x01(\x05\x12\x1d\n\x15\x61round_obstacle_times\x18\x06 \x01(\x05\x12\x30\n\tobstacles\x18\x07 \x03(\x0b\x32\x1d.havp.ObjectDetectionObstacle\x12(\n\x13planning_trajectory\x18\x08 \x03(\x0b\x32\x0b.havp.Point\x12\x33\n+is_display_the_Upstairs_and_Downstairs_page\x18\t \x01(\x05\x12)\n\rparking_space\x18\n \x03(\x0b\x32\x12.havp.ParkingSpace\x12\x17\n\x0froad_bump_times\x18\x0b \x01(\x05\x12\x1a\n\x12left_path_distance\x18\r \x01(\x02\"\x96\x03\n\tSVPCruise\x12 \n\x08location\x18\x01 \x01(\x0b\x32\x0e.havp.Location\x12\x16\n\x03pas\x18\x02 \x01(\x0b\x32\t.havp.PAS\x12\x15\n\rdistance_left\x18\x03 \x01(\x05\x12\x0b\n\x03odm\x18\x04 \x01(\x05\x12\x1b\n\x13\x61round_person_times\x18\x05 \x01(\x05\x12\x1d\n\x15\x61round_obstacle_times\x18\x06 \x01(\x05\x12\x30\n\tobstacles\x18\x07 \x03(\x0b\x32\x1d.havp.ObjectDetectionObstacle\x12(\n\x13planning_trajectory\x18\x08 \x03(\x0b\x32\x0b.havp.Point\x12\x33\n+is_display_the_Upstairs_and_Downstairs_page\x18\t \x01(\x05\x12)\n\rparking_space\x18\n \x03(\x0b\x32\x12.havp.ParkingSpace\x12\x17\n\x0froad_bump_times\x18\x0b \x01(\x05\x12\x1a\n\x12left_path_distance\x18\r \x01(\x02\"\xde\x01\n\x04RADS\x12 \n\x08location\x18\x01 \x01(\x0b\x32\x0e.havp.Location\x12\x16\n\x03pas\x18\x02 \x01(\x0b\x32\t.havp.PAS\x12\x15\n\rdistance_left\x18\x03 \x01(\x02\x12(\n\x13planning_trajectory\x18\x04 \x03(\x0b\x32\x0b.havp.Point\x12)\n\rparking_space\x18\x05 \x03(\x0b\x32\x12.havp.ParkingSpace\x12\x30\n\tobstacles\x18\x06 \x03(\x0b\x32\x1d.havp.ObjectDetectionObstacleb\x06proto3')



_AVPVEHICLEDATA = DESCRIPTOR.message_types_by_name['AVPVehicleData']
_APA = DESCRIPTOR.message_types_by_name['APA']
_HAVPMAPPING = DESCRIPTOR.message_types_by_name['HAVPMapping']
_HAVPCRUISE = DESCRIPTOR.message_types_by_name['HAVPCruise']
_SVPCRUISE = DESCRIPTOR.message_types_by_name['SVPCruise']
_RADS = DESCRIPTOR.message_types_by_name['RADS']
AVPVehicleData = _reflection.GeneratedProtocolMessageType('AVPVehicleData', (_message.Message,), {
  'DESCRIPTOR' : _AVPVEHICLEDATA,
  '__module__' : 'gwm.havp.havp_vehicle_pb2'
  # @@protoc_insertion_point(class_scope:havp.AVPVehicleData)
  })
_sym_db.RegisterMessage(AVPVehicleData)

APA = _reflection.GeneratedProtocolMessageType('APA', (_message.Message,), {
  'DESCRIPTOR' : _APA,
  '__module__' : 'gwm.havp.havp_vehicle_pb2'
  # @@protoc_insertion_point(class_scope:havp.APA)
  })
_sym_db.RegisterMessage(APA)

HAVPMapping = _reflection.GeneratedProtocolMessageType('HAVPMapping', (_message.Message,), {
  'DESCRIPTOR' : _HAVPMAPPING,
  '__module__' : 'gwm.havp.havp_vehicle_pb2'
  # @@protoc_insertion_point(class_scope:havp.HAVPMapping)
  })
_sym_db.RegisterMessage(HAVPMapping)

HAVPCruise = _reflection.GeneratedProtocolMessageType('HAVPCruise', (_message.Message,), {
  'DESCRIPTOR' : _HAVPCRUISE,
  '__module__' : 'gwm.havp.havp_vehicle_pb2'
  # @@protoc_insertion_point(class_scope:havp.HAVPCruise)
  })
_sym_db.RegisterMessage(HAVPCruise)

SVPCruise = _reflection.GeneratedProtocolMessageType('SVPCruise', (_message.Message,), {
  'DESCRIPTOR' : _SVPCRUISE,
  '__module__' : 'gwm.havp.havp_vehicle_pb2'
  # @@protoc_insertion_point(class_scope:havp.SVPCruise)
  })
_sym_db.RegisterMessage(SVPCruise)

RADS = _reflection.GeneratedProtocolMessageType('RADS', (_message.Message,), {
  'DESCRIPTOR' : _RADS,
  '__module__' : 'gwm.havp.havp_vehicle_pb2'
  # @@protoc_insertion_point(class_scope:havp.RADS)
  })
_sym_db.RegisterMessage(RADS)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _AVPVEHICLEDATA._serialized_start=66
  _AVPVEHICLEDATA._serialized_end=268
  _APA._serialized_start=271
  _APA._serialized_end=497
  _HAVPMAPPING._serialized_start=500
  _HAVPMAPPING._serialized_end=830
  _HAVPCRUISE._serialized_start=833
  _HAVPCRUISE._serialized_end=1240
  _SVPCRUISE._serialized_start=1243
  _SVPCRUISE._serialized_end=1649
  _RADS._serialized_start=1652
  _RADS._serialized_end=1874
# @@protoc_insertion_point(module_scope)
