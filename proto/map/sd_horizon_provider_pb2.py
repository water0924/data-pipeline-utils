# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: map/sd_horizon_provider.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from proto.common import geometry_pb2 as common_dot_geometry__pb2
from proto.map import sd_map_pb2 as map_dot_sd__map__pb2
from proto.map import map_common_pb2 as map_dot_map__common__pb2
from proto.routing import navinfo_routing_pb2 as routing_dot_navinfo__routing__pb2
from proto.drapi import gwm_navigation_pb2 as drapi_dot_gwm__navigation__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1dmap/sd_horizon_provider.proto\x12\rdeeproute.map\x1a\x15\x63ommon/geometry.proto\x1a\x10map/sd_map.proto\x1a\x14map/map_common.proto\x1a\x1drouting/navinfo_routing.proto\x1a\x1a\x64rapi/gwm_navigation.proto\"\x80\x02\n\x12\x41mapNavigationInfo\x12\x0f\n\x07path_id\x18\x01 \x01(\x04\x12\x14\n\x0c\x63urr_link_id\x18\x02 \x01(\x05\x12\x14\n\x0c\x63urr_step_id\x18\x03 \x01(\x05\x12\x1d\n\x15\x64istance_to_next_link\x18\x04 \x01(\x05\x12\x1e\n\x16\x61map_has_traffic_light\x18\x05 \x01(\x05\x12\x36\n\rtraffic_light\x18\x06 \x01(\x0b\x32\x1f.dr.gwm.navigation.TrafficLight\x12\x36\n\x13traffic_position_2d\x18\x07 \x01(\x0b\x32\x19.deeproute.common.Point3D\"D\n\x11SdHorizonLinkData\x12/\n\x0cshape_points\x18\x01 \x03(\x0b\x32\x19.deeproute.common.Point2D\"\x9c\x04\n\x0cSdHorizonMap\x12>\n\x14sd_horizon_link_data\x18\x01 \x03(\x0b\x32 .deeproute.map.SdHorizonLinkData\x12\x37\n\x13sd_horizon_map_data\x18\x02 \x03(\x0b\x32\x1a.deeproute.sd_map.LinkData\x12%\n\x1d\x63urrent_link_index_of_horizon\x18\x07 \x01(\r\x12?\n\x1dhorizon_routing_response_data\x18\x03 \x01(\x0b\x32\x18.deeproute.navinfo.Route\x12*\n\x07positon\x18\x04 \x01(\x0b\x32\x19.deeproute.common.Point3D\x12/\n\x0c\x65uler_angles\x18\x05 \x01(\x0b\x32\x19.deeproute.common.Point3D\x12\x18\n\x10time_measurement\x18\x06 \x01(\x03\x12\x38\n\ramap_nav_info\x18\x08 \x01(\x0b\x32!.deeproute.map.AmapNavigationInfo\x12/\n\x0csd_road_info\x18\t \x01(\x0b\x32\x19.deeproute.map.SdRoadInfo\x12.\n&current_link_index_of_routing_response\x18\n \x01(\r\x12\x19\n\x0bis_complete\x18\x0b \x01(\x08:\x04true\"O\n\x0cTrafficLight\x12-\n\tgps_point\x18\x06 \x01(\x0b\x32\x1a.deeproute.common.PointLLH\x12\x10\n\x08\x64istance\x18\t \x01(\x01\"\xf8\x04\n\x10RealTimeGuidance\x12\x0f\n\x07path_id\x18\x01 \x01(\x04\x12\x33\n\x10step_main_action\x18\x02 \x01(\x0e\x32\x19.deeproute.map.MainAction\x12=\n\x15step_assistant_action\x18\x03 \x01(\x0e\x32\x1e.deeproute.map.AssistantAction\x12\x1d\n\x15\x64istance_to_next_step\x18\x04 \x01(\x05\x12\x30\n\x0clane_actions\x18\x0b \x01(\x0b\x32\x1a.deeproute.map.LaneActions\x12.\n\x0bmain_action\x18\x0c \x01(\x0e\x32\x19.deeproute.map.MainAction\x12\x38\n\x10\x61ssistant_action\x18\r \x01(\x0e\x32\x1e.deeproute.map.AssistantAction\x12@\n\x18lane_actions_approaching\x18\x0e \x03(\x0b\x32\x1a.deeproute.map.LaneActionsB\x02\x18\x01\x12:\n\x13\x61\x63tions_approaching\x18\x0f \x03(\x0b\x32\x1d.deeproute.map.ActionApproach\x12\x34\n\x0etraffic_status\x18\x15 \x01(\x0e\x32\x1c.deeproute.map.TrafficStatus\x12\x32\n\rtraffic_light\x18\x1f \x01(\x0b\x32\x1b.deeproute.map.TrafficLight\x12<\n\x11\x66usion_map_source\x18) \x01(\x0b\x32!.deeproute.sd_map.FusionMapConfig\"Z\n\x0b\x46usionSdMap\x12\x18\n\x10time_measurement\x18\x01 \x01(\x03\x12\x31\n\x08guidance\x18\x0b \x01(\x0b\x32\x1f.deeproute.map.RealTimeGuidance')



_AMAPNAVIGATIONINFO = DESCRIPTOR.message_types_by_name['AmapNavigationInfo']
_SDHORIZONLINKDATA = DESCRIPTOR.message_types_by_name['SdHorizonLinkData']
_SDHORIZONMAP = DESCRIPTOR.message_types_by_name['SdHorizonMap']
_TRAFFICLIGHT = DESCRIPTOR.message_types_by_name['TrafficLight']
_REALTIMEGUIDANCE = DESCRIPTOR.message_types_by_name['RealTimeGuidance']
_FUSIONSDMAP = DESCRIPTOR.message_types_by_name['FusionSdMap']
AmapNavigationInfo = _reflection.GeneratedProtocolMessageType('AmapNavigationInfo', (_message.Message,), {
  'DESCRIPTOR' : _AMAPNAVIGATIONINFO,
  '__module__' : 'map.sd_horizon_provider_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.AmapNavigationInfo)
  })
_sym_db.RegisterMessage(AmapNavigationInfo)

SdHorizonLinkData = _reflection.GeneratedProtocolMessageType('SdHorizonLinkData', (_message.Message,), {
  'DESCRIPTOR' : _SDHORIZONLINKDATA,
  '__module__' : 'map.sd_horizon_provider_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.SdHorizonLinkData)
  })
_sym_db.RegisterMessage(SdHorizonLinkData)

SdHorizonMap = _reflection.GeneratedProtocolMessageType('SdHorizonMap', (_message.Message,), {
  'DESCRIPTOR' : _SDHORIZONMAP,
  '__module__' : 'map.sd_horizon_provider_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.SdHorizonMap)
  })
_sym_db.RegisterMessage(SdHorizonMap)

TrafficLight = _reflection.GeneratedProtocolMessageType('TrafficLight', (_message.Message,), {
  'DESCRIPTOR' : _TRAFFICLIGHT,
  '__module__' : 'map.sd_horizon_provider_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.TrafficLight)
  })
_sym_db.RegisterMessage(TrafficLight)

RealTimeGuidance = _reflection.GeneratedProtocolMessageType('RealTimeGuidance', (_message.Message,), {
  'DESCRIPTOR' : _REALTIMEGUIDANCE,
  '__module__' : 'map.sd_horizon_provider_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.RealTimeGuidance)
  })
_sym_db.RegisterMessage(RealTimeGuidance)

FusionSdMap = _reflection.GeneratedProtocolMessageType('FusionSdMap', (_message.Message,), {
  'DESCRIPTOR' : _FUSIONSDMAP,
  '__module__' : 'map.sd_horizon_provider_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.FusionSdMap)
  })
_sym_db.RegisterMessage(FusionSdMap)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _REALTIMEGUIDANCE.fields_by_name['lane_actions_approaching']._options = None
  _REALTIMEGUIDANCE.fields_by_name['lane_actions_approaching']._serialized_options = b'\030\001'
  _AMAPNAVIGATIONINFO._serialized_start=171
  _AMAPNAVIGATIONINFO._serialized_end=427
  _SDHORIZONLINKDATA._serialized_start=429
  _SDHORIZONLINKDATA._serialized_end=497
  _SDHORIZONMAP._serialized_start=500
  _SDHORIZONMAP._serialized_end=1040
  _TRAFFICLIGHT._serialized_start=1042
  _TRAFFICLIGHT._serialized_end=1121
  _REALTIMEGUIDANCE._serialized_start=1124
  _REALTIMEGUIDANCE._serialized_end=1756
  _FUSIONSDMAP._serialized_start=1758
  _FUSIONSDMAP._serialized_end=1848
# @@protoc_insertion_point(module_scope)
