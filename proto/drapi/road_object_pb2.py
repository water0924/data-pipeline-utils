# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: drapi/road_object.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from proto.drapi import base_pb2 as drapi_dot_base__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x17\x64rapi/road_object.proto\x12\rdr.roadobject\x1a\x10\x64rapi/base.proto\"\xd7\x01\n\x0ePerceptionInfo\x12\x37\n\x10traffic_light_3d\x18\x01 \x03(\x0b\x32\x1d.dr.roadobject.TrafficLight3D\x12:\n\x11perception_target\x18\x02 \x03(\x0b\x32\x1f.dr.roadobject.PerceptionTarget\x12\x36\n\x0f\x63ritical_object\x18\x03 \x03(\x0b\x32\x1d.dr.roadobject.CriticalObject\x12\x18\n\x10time_measurement\x18\x04 \x01(\x03\"\x9b\x02\n\x0eTrafficLight3D\x12\n\n\x02id\x18\x01 \x01(\x05\x12\x35\n\x0ctraffic_type\x18\x02 \x01(\x0e\x32\x1f.dr.roadobject.TrafficLightType\x12\"\n\x08position\x18\x03 \x01(\x0b\x32\x10.dr.base.Point3D\x12\x32\n\x05\x63olor\x18\x04 \x01(\x0e\x32#.dr.roadobject.TrafficLight3D.Color\x12\r\n\x05width\x18\x05 \x01(\x02\x12\x0e\n\x06height\x18\x06 \x01(\x02\x12\x0e\n\x06length\x18\x07 \x01(\x02\"?\n\x05\x43olor\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x07\n\x03RED\x10\x01\x12\n\n\x06YELLOW\x10\x02\x12\t\n\x05GREEN\x10\x03\x12\t\n\x05\x42LACK\x10\x04\"\xc6\x02\n\x10PerceptionTarget\x12\n\n\x02id\x18\x01 \x01(\x05\x12.\n\x0btarget_type\x18\x02 \x01(\x0e\x32\x19.dr.roadobject.TargetType\x12\x34\n\x0e\x66reespace_type\x18\x03 \x01(\x0e\x32\x1c.dr.roadobject.FreespaceType\x12(\n\x03pos\x18\x04 \x01(\x0b\x32\x1b.dr.base.Point3DWithHeading\x12\x0e\n\x06length\x18\x05 \x01(\x01\x12\r\n\x05width\x18\x06 \x01(\x01\x12\x0e\n\x06height\x18\x07 \x01(\x01\x12\r\n\x05speed\x18\x08 \x01(\x01\x12\x30\n\x0clight_status\x18\t \x01(\x0b\x32\x1a.dr.roadobject.LightStatus\x12&\n\x0cpolygon_area\x18\n \x01(\x0b\x32\x10.dr.base.Polygon\"\xd8\x01\n\x0e\x43riticalObject\x12\n\n\x02id\x18\x01 \x01(\x05\x12=\n\x0bobject_type\x18\x02 \x01(\x0e\x32(.dr.roadobject.CriticalObject.ObjectType\"{\n\nObjectType\x12\x0f\n\x0bUNKNOWN_OBJ\x10\x00\x12\x15\n\x11PERCEPTION_OBJECT\x10\x01\x12\r\n\tLANE_EDGE\x10\x02\x12\x0e\n\nHARD_BRAKE\x10\x03\x12\n\n\x06\x46OLLOW\x10\x04\x12\x0b\n\x07ILC_OBJ\x10\x05\x12\r\n\tNUDGE_OBJ\x10\x06\"\x84\x01\n\x0bLightStatus\x12\x17\n\x0f\x62rake_switch_on\x18\x01 \x01(\x08\x12\x1b\n\x13left_turn_switch_on\x18\x02 \x01(\x08\x12\x1c\n\x14right_turn_switch_on\x18\x03 \x01(\x08\x12!\n\x19left_right_turn_switch_on\x18\x04 \x01(\x08*L\n\x10TrafficLightType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0b\n\x07\x46ORWARD\x10\x01\x12\x08\n\x04LEFT\x10\x02\x12\t\n\x05RIGHT\x10\x03\x12\t\n\x05UTURN\x10\x04*\xd8\x01\n\nTargetType\x12\x17\n\x13TARGET_TYPE_UNKNOWN\x10\x00\x12\x13\n\x0fUNKNOWN_MOVABLE\x10\x01\x12\x15\n\x11UNKNOWN_UNMOVABLE\x10\x02\x12\x0e\n\nPEDESTRIAN\x10\x03\x12\x0b\n\x07\x42ICYCLE\x10\x04\x12\x0b\n\x07VEHICLE\x10\x05\x12\t\n\x05TRUCK\x10\x06\x12\x10\n\x0cTRAFFIC_CONE\x10\x07\x12\x13\n\x0fOCCUPANCY_CELLS\x10\x08\x12\x15\n\x11INVISIBLE_SECTORS\x10\t\x12\x12\n\x0ePARK_FREESPACE\x10\n*d\n\x0cTargetSource\x12\x19\n\x15TARGET_SOURCE_UNKNOWN\x10\x00\x12\t\n\x05LIDAR\x10\x01\x12\x07\n\x03RSU\x10\x02\x12\n\n\x06\x43\x41MERA\x10\x03\x12\x19\n\x15MILLIMETER_WAVE_RADAR\x10\x04*\x97\x01\n\rFreespaceType\x12\x14\n\x10\x46S_OTHERS_STATIC\x10\x00\x12\x14\n\x10\x46S_OTHERS_MOTION\x10\x01\x12\x0b\n\x07\x46S_WALL\x10\x02\x12\x0c\n\x08\x46S_CHOCK\x10\x03\x12\x0e\n\nFS_LOCK_ON\x10\x04\x12\x0f\n\x0b\x46S_LOCK_OFF\x10\x05\x12\x10\n\x0c\x46S_SPEEDBUMP\x10\x06\x12\x0c\n\x08\x46S_FENCE\x10\x07\x62\x06proto3')

_TRAFFICLIGHTTYPE = DESCRIPTOR.enum_types_by_name['TrafficLightType']
TrafficLightType = enum_type_wrapper.EnumTypeWrapper(_TRAFFICLIGHTTYPE)
_TARGETTYPE = DESCRIPTOR.enum_types_by_name['TargetType']
TargetType = enum_type_wrapper.EnumTypeWrapper(_TARGETTYPE)
_TARGETSOURCE = DESCRIPTOR.enum_types_by_name['TargetSource']
TargetSource = enum_type_wrapper.EnumTypeWrapper(_TARGETSOURCE)
_FREESPACETYPE = DESCRIPTOR.enum_types_by_name['FreespaceType']
FreespaceType = enum_type_wrapper.EnumTypeWrapper(_FREESPACETYPE)
UNKNOWN = 0
FORWARD = 1
LEFT = 2
RIGHT = 3
UTURN = 4
TARGET_TYPE_UNKNOWN = 0
UNKNOWN_MOVABLE = 1
UNKNOWN_UNMOVABLE = 2
PEDESTRIAN = 3
BICYCLE = 4
VEHICLE = 5
TRUCK = 6
TRAFFIC_CONE = 7
OCCUPANCY_CELLS = 8
INVISIBLE_SECTORS = 9
PARK_FREESPACE = 10
TARGET_SOURCE_UNKNOWN = 0
LIDAR = 1
RSU = 2
CAMERA = 3
MILLIMETER_WAVE_RADAR = 4
FS_OTHERS_STATIC = 0
FS_OTHERS_MOTION = 1
FS_WALL = 2
FS_CHOCK = 3
FS_LOCK_ON = 4
FS_LOCK_OFF = 5
FS_SPEEDBUMP = 6
FS_FENCE = 7


_PERCEPTIONINFO = DESCRIPTOR.message_types_by_name['PerceptionInfo']
_TRAFFICLIGHT3D = DESCRIPTOR.message_types_by_name['TrafficLight3D']
_PERCEPTIONTARGET = DESCRIPTOR.message_types_by_name['PerceptionTarget']
_CRITICALOBJECT = DESCRIPTOR.message_types_by_name['CriticalObject']
_LIGHTSTATUS = DESCRIPTOR.message_types_by_name['LightStatus']
_TRAFFICLIGHT3D_COLOR = _TRAFFICLIGHT3D.enum_types_by_name['Color']
_CRITICALOBJECT_OBJECTTYPE = _CRITICALOBJECT.enum_types_by_name['ObjectType']
PerceptionInfo = _reflection.GeneratedProtocolMessageType('PerceptionInfo', (_message.Message,), {
  'DESCRIPTOR' : _PERCEPTIONINFO,
  '__module__' : 'drapi.road_object_pb2'
  # @@protoc_insertion_point(class_scope:dr.roadobject.PerceptionInfo)
  })
_sym_db.RegisterMessage(PerceptionInfo)

TrafficLight3D = _reflection.GeneratedProtocolMessageType('TrafficLight3D', (_message.Message,), {
  'DESCRIPTOR' : _TRAFFICLIGHT3D,
  '__module__' : 'drapi.road_object_pb2'
  # @@protoc_insertion_point(class_scope:dr.roadobject.TrafficLight3D)
  })
_sym_db.RegisterMessage(TrafficLight3D)

PerceptionTarget = _reflection.GeneratedProtocolMessageType('PerceptionTarget', (_message.Message,), {
  'DESCRIPTOR' : _PERCEPTIONTARGET,
  '__module__' : 'drapi.road_object_pb2'
  # @@protoc_insertion_point(class_scope:dr.roadobject.PerceptionTarget)
  })
_sym_db.RegisterMessage(PerceptionTarget)

CriticalObject = _reflection.GeneratedProtocolMessageType('CriticalObject', (_message.Message,), {
  'DESCRIPTOR' : _CRITICALOBJECT,
  '__module__' : 'drapi.road_object_pb2'
  # @@protoc_insertion_point(class_scope:dr.roadobject.CriticalObject)
  })
_sym_db.RegisterMessage(CriticalObject)

LightStatus = _reflection.GeneratedProtocolMessageType('LightStatus', (_message.Message,), {
  'DESCRIPTOR' : _LIGHTSTATUS,
  '__module__' : 'drapi.road_object_pb2'
  # @@protoc_insertion_point(class_scope:dr.roadobject.LightStatus)
  })
_sym_db.RegisterMessage(LightStatus)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _TRAFFICLIGHTTYPE._serialized_start=1247
  _TRAFFICLIGHTTYPE._serialized_end=1323
  _TARGETTYPE._serialized_start=1326
  _TARGETTYPE._serialized_end=1542
  _TARGETSOURCE._serialized_start=1544
  _TARGETSOURCE._serialized_end=1644
  _FREESPACETYPE._serialized_start=1647
  _FREESPACETYPE._serialized_end=1798
  _PERCEPTIONINFO._serialized_start=61
  _PERCEPTIONINFO._serialized_end=276
  _TRAFFICLIGHT3D._serialized_start=279
  _TRAFFICLIGHT3D._serialized_end=562
  _TRAFFICLIGHT3D_COLOR._serialized_start=499
  _TRAFFICLIGHT3D_COLOR._serialized_end=562
  _PERCEPTIONTARGET._serialized_start=565
  _PERCEPTIONTARGET._serialized_end=891
  _CRITICALOBJECT._serialized_start=894
  _CRITICALOBJECT._serialized_end=1110
  _CRITICALOBJECT_OBJECTTYPE._serialized_start=987
  _CRITICALOBJECT_OBJECTTYPE._serialized_end=1110
  _LIGHTSTATUS._serialized_start=1113
  _LIGHTSTATUS._serialized_end=1245
# @@protoc_insertion_point(module_scope)
