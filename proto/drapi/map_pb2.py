# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: drapi/map.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from proto.drapi import base_pb2 as drapi_dot_base__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x0f\x64rapi/map.proto\x12\x06\x64r.map\x1a\x10\x64rapi/base.proto\"\xf6\x01\n\x06RASMap\x12\x1b\n\x05lanes\x18\x01 \x03(\x0b\x32\x0c.dr.map.Lane\x12&\n\x08\x62oundary\x18\x02 \x03(\x0b\x32\x14.dr.map.LaneBoundary\x12\x1a\n\x04\x61rea\x18\x03 \x03(\x0b\x32\x0c.dr.map.Area\x12\x1e\n\x04\x65\x64ge\x18\x04 \x03(\x0b\x32\x10.dr.map.RoadEdge\x12#\n\tstop_line\x18\x05 \x03(\x0b\x32\x10.dr.map.StopLine\x12\x18\n\x10time_measurement\x18\x07 \x01(\x04\x12,\n\rparking_space\x18\x08 \x03(\x0b\x32\x15.dr.base.ParkingSpace\"\x91\x03\n\x0cLaneBoundary\x12\x0f\n\x07virtual\x18\x01 \x01(\x08\x12\n\n\x02id\x18\x02 \x01(\x05\x12\x37\n\x13lane_boundary_color\x18\x03 \x01(\x0e\x32\x1a.dr.map.LaneBoundary.Color\x12\x37\n\x13lane_boundary_shape\x18\x04 \x01(\x0e\x32\x1a.dr.map.LaneBoundary.Shape\x12#\n\x08\x62oundary\x18\x05 \x01(\x0b\x32\x11.dr.base.Polyline\x12\x11\n\tis_stable\x18\x06 \x01(\x08\"3\n\x05\x43olor\x12\x08\n\x04NONE\x10\x00\x12\n\n\x06YELLOW\x10\x01\x12\t\n\x05WHITE\x10\x02\x12\t\n\x05GREEN\x10\x03\"\x84\x01\n\x05Shape\x12\x11\n\rSHAPE_UNKNOWN\x10\x00\x12\t\n\x05SOLID\x10\x01\x12\x08\n\x04\x44\x41SH\x10\x02\x12\x10\n\x0c\x44OUBLE_SOLID\x10\x03\x12\x0f\n\x0b\x44OUBLE_DASH\x10\x04\x12\x17\n\x13\x44OUBLE_LDASH_RSOLID\x10\x05\x12\x17\n\x13\x44OUBLE_LSOLID_RDASH\x10\x06\"\xbc\x02\n\x04Lane\x12\x0f\n\x07virtual\x18\x01 \x01(\x08\x12\n\n\x02id\x18\x02 \x01(\x05\x12\x18\n\x10left_boundary_id\x18\x03 \x01(\x05\x12\x19\n\x11right_boundary_id\x18\x04 \x01(\x05\x12%\n\ncenterline\x18\x05 \x01(\x0b\x32\x11.dr.base.Polyline\x12\x16\n\x0epredecessor_id\x18\x06 \x03(\x05\x12\x14\n\x0csuccessor_id\x18\x07 \x03(\x05\x12\x18\n\x10left_neighbor_id\x18\x08 \x01(\x05\x12 \n\x18is_left_neighbor_reverse\x18\t \x01(\x08\x12\x19\n\x11right_neighbor_id\x18\n \x01(\x05\x12!\n\x19is_right_neighbor_reverse\x18\x0b \x01(\x08\x12\x13\n\x0bis_ego_lane\x18\x0c \x01(\x08\";\n\x08RoadEdge\x12\n\n\x02id\x18\x01 \x01(\x05\x12#\n\x08polyline\x18\x02 \x01(\x0b\x32\x11.dr.base.Polyline\"\xa1\x01\n\x04\x41rea\x12\n\n\x02id\x18\x01 \x01(\x05\x12!\n\x07polygon\x18\x02 \x01(\x0b\x32\x10.dr.base.Polygon\x12\x1f\n\x04type\x18\x03 \x01(\x0e\x32\x11.dr.map.Area.Type\"I\n\x04Type\x12\x10\n\x0cTYPE_UNKNOWN\x10\x00\x12\r\n\tCROSSWALK\x10\x01\x12\x10\n\x0cTOLL_STATION\x10\x02\x12\x0e\n\nCLEAR_ZONE\x10\x03\"\xa3\x01\n\x08StopLine\x12\n\n\x02id\x18\x01 \x01(\x05\x12#\n\x08polyline\x18\x02 \x01(\x0b\x32\x11.dr.base.Polyline\x12\x12\n\noverlap_id\x18\x03 \x03(\x05\x12#\n\x04type\x18\x04 \x01(\x0e\x32\x15.dr.map.StopLine.Type\"-\n\x04Type\x12\x06\n\x02TL\x10\x00\x12\x08\n\x04HOLD\x10\x01\x12\x08\n\x04STOP\x10\x02\x12\t\n\x05YIELD\x10\x03\x62\x06proto3')



_RASMAP = DESCRIPTOR.message_types_by_name['RASMap']
_LANEBOUNDARY = DESCRIPTOR.message_types_by_name['LaneBoundary']
_LANE = DESCRIPTOR.message_types_by_name['Lane']
_ROADEDGE = DESCRIPTOR.message_types_by_name['RoadEdge']
_AREA = DESCRIPTOR.message_types_by_name['Area']
_STOPLINE = DESCRIPTOR.message_types_by_name['StopLine']
_LANEBOUNDARY_COLOR = _LANEBOUNDARY.enum_types_by_name['Color']
_LANEBOUNDARY_SHAPE = _LANEBOUNDARY.enum_types_by_name['Shape']
_AREA_TYPE = _AREA.enum_types_by_name['Type']
_STOPLINE_TYPE = _STOPLINE.enum_types_by_name['Type']
RASMap = _reflection.GeneratedProtocolMessageType('RASMap', (_message.Message,), {
  'DESCRIPTOR' : _RASMAP,
  '__module__' : 'drapi.map_pb2'
  # @@protoc_insertion_point(class_scope:dr.map.RASMap)
  })
_sym_db.RegisterMessage(RASMap)

LaneBoundary = _reflection.GeneratedProtocolMessageType('LaneBoundary', (_message.Message,), {
  'DESCRIPTOR' : _LANEBOUNDARY,
  '__module__' : 'drapi.map_pb2'
  # @@protoc_insertion_point(class_scope:dr.map.LaneBoundary)
  })
_sym_db.RegisterMessage(LaneBoundary)

Lane = _reflection.GeneratedProtocolMessageType('Lane', (_message.Message,), {
  'DESCRIPTOR' : _LANE,
  '__module__' : 'drapi.map_pb2'
  # @@protoc_insertion_point(class_scope:dr.map.Lane)
  })
_sym_db.RegisterMessage(Lane)

RoadEdge = _reflection.GeneratedProtocolMessageType('RoadEdge', (_message.Message,), {
  'DESCRIPTOR' : _ROADEDGE,
  '__module__' : 'drapi.map_pb2'
  # @@protoc_insertion_point(class_scope:dr.map.RoadEdge)
  })
_sym_db.RegisterMessage(RoadEdge)

Area = _reflection.GeneratedProtocolMessageType('Area', (_message.Message,), {
  'DESCRIPTOR' : _AREA,
  '__module__' : 'drapi.map_pb2'
  # @@protoc_insertion_point(class_scope:dr.map.Area)
  })
_sym_db.RegisterMessage(Area)

StopLine = _reflection.GeneratedProtocolMessageType('StopLine', (_message.Message,), {
  'DESCRIPTOR' : _STOPLINE,
  '__module__' : 'drapi.map_pb2'
  # @@protoc_insertion_point(class_scope:dr.map.StopLine)
  })
_sym_db.RegisterMessage(StopLine)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _RASMAP._serialized_start=46
  _RASMAP._serialized_end=292
  _LANEBOUNDARY._serialized_start=295
  _LANEBOUNDARY._serialized_end=696
  _LANEBOUNDARY_COLOR._serialized_start=510
  _LANEBOUNDARY_COLOR._serialized_end=561
  _LANEBOUNDARY_SHAPE._serialized_start=564
  _LANEBOUNDARY_SHAPE._serialized_end=696
  _LANE._serialized_start=699
  _LANE._serialized_end=1015
  _ROADEDGE._serialized_start=1017
  _ROADEDGE._serialized_end=1076
  _AREA._serialized_start=1079
  _AREA._serialized_end=1240
  _AREA_TYPE._serialized_start=1167
  _AREA_TYPE._serialized_end=1240
  _STOPLINE._serialized_start=1243
  _STOPLINE._serialized_end=1406
  _STOPLINE_TYPE._serialized_start=1361
  _STOPLINE_TYPE._serialized_end=1406
# @@protoc_insertion_point(module_scope)
