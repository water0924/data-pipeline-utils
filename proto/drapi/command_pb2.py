# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: drapi/command.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from proto.drapi import business_info_pb2 as drapi_dot_business__info__pb2
from proto.drapi import base_pb2 as drapi_dot_base__pb2
from proto.drapi import local_config_pb2 as drapi_dot_local__config__pb2
from proto.drapi import operation_status_pb2 as drapi_dot_operation__status__pb2
from proto.dsm import dsm_pb2 as dsm_dot_dsm__pb2
from google.protobuf import any_pb2 as google_dot_protobuf_dot_any__pb2
from proto.drapi import gwm_hut_notification_pb2 as drapi_dot_gwm__hut__notification__pb2
from proto.localization import havp_map_pb2 as localization_dot_havp__map__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x13\x64rapi/command.proto\x12\ndr.command\x1a\x19\x64rapi/business_info.proto\x1a\x10\x64rapi/base.proto\x1a\x18\x64rapi/local_config.proto\x1a\x1c\x64rapi/operation_status.proto\x1a\rdsm/dsm.proto\x1a\x19google/protobuf/any.proto\x1a drapi/gwm_hut_notification.proto\x1a\x1blocalization/havp_map.proto\"\xc8!\n\x07\x43ommand\x12\n\n\x02id\x18\x01 \x01(\t\x12\x31\n\rupdate_config\x18\x64 \x01(\x0b\x32\x18.dr.command.UpdateConfigH\x00\x12,\n\nenable_acc\x18\xe8\x07 \x01(\x0b\x32\x15.dr.command.EnableACCH\x00\x12-\n\x0bget_acc_tcc\x18\xe9\x07 \x01(\x0b\x32\x15.dr.command.GetACCTTCH\x00\x12<\n\x13get_acc_speed_limit\x18\xea\x07 \x01(\x0b\x32\x1c.dr.command.GetACCSpeedLimitH\x00\x12=\n\x13\x64riving_active_exit\x18\xeb\x07 \x01(\x0b\x32\x1d.dr.command.DrivingActiveExitH\x00\x12)\n\x07set_ttc\x18\xcc\x08 \x01(\x0b\x32\x15.dr.command.SetACCTTCH\x00\x12,\n\nenable_ica\x18\xd0\x0f \x01(\x0b\x32\x15.dr.command.EnableICAH\x00\x12.\n\x0b\x63hange_lane\x18\xd5\x0f \x01(\x0b\x32\x16.dr.command.ChangeLaneH\x00\x12=\n\x13\x63hange_auto_upgrade\x18\xd6\x0f \x01(\x0b\x32\x1d.dr.command.ChangeAutoUpgradeH\x00\x12,\n\nenable_nca\x18\xb8\x17 \x01(\x0b\x32\x15.dr.command.EnableNCAH\x00\x12\x38\n\x10start_navigation\x18\xba\x17 \x01(\x0b\x32\x1b.dr.command.StartNavigationH\x00\x12:\n\x11\x63\x61ncel_navigation\x18\xbb\x17 \x01(\x0b\x32\x1c.dr.command.CancelNavigationH\x00\x12(\n\x08get_path\x18\x9c\x18 \x01(\x0b\x32\x13.dr.command.GetPathH\x00\x12/\n\x0cget_cur_path\x18\x9d\x18 \x01(\x0b\x32\x16.dr.command.GetCurPathH\x00\x12\x34\n\x0fget_cur_path_id\x18\x9e\x18 \x01(\x0b\x32\x18.dr.command.GetCurPathIdH\x00\x12,\n\nenable_ldw\x18\xa0\x1f \x01(\x0b\x32\x15.dr.command.EnableLDWH\x00\x12,\n\nenable_rdp\x18\x94# \x01(\x0b\x32\x15.dr.command.EnableRDPH\x00\x12,\n\nactive_apa\x18\x88\' \x01(\x0b\x32\x15.dr.command.ActiveAPAH\x00\x12\x41\n\x12image_pixel_to_pos\x18\x89\' \x01(\x0b\x32\".dr.command.RequestImagePixelToPosH\x00\x12)\n\x07parking\x18\x8a\' \x01(\x0b\x32\x15.dr.command.APAParkInH\x00\x12.\n\x0bout_parking\x18\x8b\' \x01(\x0b\x32\x16.dr.command.APAParkOutH\x00\x12<\n\x13update_apa_settings\x18\x8d\' \x01(\x0b\x32\x1c.dr.command.UpdateApaSettingH\x00\x12\x44\n\x17\x61pa_parking_switch_mode\x18\x90\' \x01(\x0b\x32 .dr.command.APAParkingSwitchModeH\x00\x12\x41\n\x12\x61pa_parking_update\x18\x91\' \x01(\x0b\x32\".dr.command.APAParkingUpdateStatusH\x00\x12@\n\x15\x61pa_get_active_source\x18\x92\' \x01(\x0b\x32\x1e.dr.command.APAGetActiveSourceH\x00\x12P\n\x1d\x61pa_get_realtime_parkingspace\x18\x93\' \x01(\x0b\x32&.dr.command.APAGetRealtimeParkingSpaceH\x00\x12L\n\x1b\x61pa_select_avm_parkingspace\x18\x94\' \x01(\x0b\x32$.dr.command.APASelectAVMParkingSpaceH\x00\x12L\n\x1b\x61pa_app_select_parkingspace\x18\x95\' \x01(\x0b\x32$.dr.command.APAAPPSelectParkingSpaceH\x00\x12\x44\n\x17\x61pa_suggest_out_parking\x18\x96\' \x01(\x0b\x32 .dr.command.APASuggestOutParkingH\x00\x12<\n\x13\x61pa_active_out_park\x18\x97\' \x01(\x0b\x32\x1c.dr.command.APAActiveParkOutH\x00\x12\x46\n\x18\x61pa_skip_countdown_clock\x18\x98\' \x01(\x0b\x32!.dr.command.APASkipCountDownClockH\x00\x12\x46\n\x18\x61pa_enter_custom_parking\x18\x99\' \x01(\x0b\x32!.dr.command.APAEnterCustomParkingH\x00\x12\x46\n\x18\x61pa_leave_custom_parking\x18\x9a\' \x01(\x0b\x32!.dr.command.APALeaveCustomParkingH\x00\x12S\n\x1f\x61pa_select_custom_parking_space\x18\x9b\' \x01(\x0b\x32\'.dr.command.APASelectCustomParkingSpaceH\x00\x12;\n\x12gw_parking_command\x18\xed\' \x01(\x0b\x32\x1c.dr.command.GWParkingCommandH\x00\x12\x37\n\x10smart_lp_command\x18\xee\' \x01(\x0b\x32\x1a.dr.command.SmartLPCommandH\x00\x12;\n\x12gl_parking_command\x18\xef\' \x01(\x0b\x32\x1c.dr.command.GLParkingCommandH\x00\x12.\n\x0bvpa_routing\x18\xf1. \x01(\x0b\x32\x16.dr.command.VPARoutingH\x00\x12\x30\n\x0cvpa_learning\x18\xf2. \x01(\x0b\x32\x17.dr.command.VPALearningH\x00\x12\x44\n\x17vpa_routing_switch_mode\x18\xf3. \x01(\x0b\x32 .dr.command.VPARoutingSwitchModeH\x00\x12\x31\n\x0cvpa_get_info\x18\xf4. \x01(\x0b\x32\x18.dr.command.VPAGetInfoRQH\x00\x12<\n\x13vpa_routing_get_map\x18\xf5. \x01(\x0b\x32\x1c.dr.command.VPARoutingGetMapH\x00\x12-\n\x0b\x62tn_ena_req\x18\xf6. \x01(\x0b\x32\x15.dr.command.BtnEnaReqH\x00\x12,\n\nenable_hma\x18\xd8\x36 \x01(\x0b\x32\x15.dr.command.EnableHMAH\x00\x12,\n\nenable_bsd\x18\xbc\x37 \x01(\x0b\x32\x15.dr.command.EnableBSDH\x00\x12,\n\nenable_lca\x18\xa0\x38 \x01(\x0b\x32\x15.dr.command.EnableLCAH\x00\x12,\n\nenable_dow\x18\x84\x39 \x01(\x0b\x32\x15.dr.command.EnableDOWH\x00\x12.\n\x0b\x65nable_rcta\x18\xe8\x39 \x01(\x0b\x32\x16.dr.command.EnableRCTAH\x00\x12,\n\nenable_rcw\x18\xcc: \x01(\x0b\x32\x15.dr.command.EnableRCWH\x00\x12.\n\x0b\x65nable_rctb\x18\xb0; \x01(\x0b\x32\x16.dr.command.EnableRCTBH\x00\x12,\n\nenable_avm\x18\x95< \x01(\x0b\x32\x15.dr.command.EnableAVMH\x00\x12\x30\n\nswitch_avm\x18\x96< \x01(\x0b\x32\x19.dr.command.SwitchAVMViewH\x00\x12\x32\n\x0cparking_shot\x18\x97< \x01(\x0b\x32\x19.dr.command.ParkedShotingH\x00\x12\x37\n\x10get_avm_settings\x18\x98< \x01(\x0b\x32\x1a.dr.command.GetAVMSettingsH\x00\x12,\n\nenable_aeb\x18\xf8< \x01(\x0b\x32\x15.dr.command.EnableAEBH\x00\x12:\n\x11start_calibration\x18\xdc= \x01(\x0b\x32\x1c.dr.command.StartCalibrationH\x00\x12,\n\nenable_elk\x18\xc0> \x01(\x0b\x32\x15.dr.command.EnableELKH\x00\x12(\n\x08lss_mute\x18\xc1> \x01(\x0b\x32\x13.dr.command.LSSMuteH\x00\x12+\n\tpdc_curve\x18\xa4? \x01(\x0b\x32\x15.dr.command.PDCUpdateH\x00\x12,\n\nrpa_parkin\x18\x89@ \x01(\x0b\x32\x15.dr.command.RPAParkInH\x00\x12.\n\x0brpa_parkout\x18\x8a@ \x01(\x0b\x32\x16.dr.command.RPAParkOutH\x00\x12\x38\n\x0frpa_park_update\x18\x8b@ \x01(\x0b\x32\x1c.dr.command.RPAParkingUpdateH\x00\x12\x38\n\x0fstraight_in_out\x18\x8c@ \x01(\x0b\x32\x1c.dr.command.RPAStraightInOutH\x00\x12\x35\n\rrpa_heartbeat\x18\x8d@ \x01(\x0b\x32\x1b.dr.command.RPAAppHeartbeatH\x00\x12(\n\x08rpa_init\x18\x8e@ \x01(\x0b\x32\x13.dr.command.RPAInitH\x00\x12*\n\trpa_close\x18\x8f@ \x01(\x0b\x32\x14.dr.command.RPACloseH\x00\x12*\n\trpa_check\x18\x90@ \x01(\x0b\x32\x14.dr.command.RPACheckH\x00\x12\x44\n\x17rpa_suggest_out_parking\x18\x91@ \x01(\x0b\x32 .dr.command.RPASuggestOutParkingH\x00\x12&\n\x07tjp_cmd\x18\xed@ \x01(\x0b\x32\x12.dr.command.TJPCmdH\x00\x12\x39\n\x0fsentry_mode_cmd\x18\x9f\x41 \x01(\x0b\x32\x1d.dr.command.SentryModeCommandH\x00\x12H\n\x19sentry_mode_get_statistic\x18\xa0\x41 \x01(\x0b\x32\".dr.command.SentryModeGetStatisticH\x00\x12\'\n\x0b\x64sm_trigger\x18\xd0\x41 \x01(\x0b\x32\x0f.dr.dsm.TriggerH\x00\x12\x33\n\x0c\x64\x65\x66\x61ult_mode\x18\xd1\x41 \x01(\x0b\x32\x1a.dr.command.SetDefaultModeH\x00\x12\x1c\n\x11get_tracking_data\x18\xd2\x41 \x01(\x08H\x00\x12>\n\x17select_parking_function\x18\xb4\x42 \x01(\x0b\x32\x1a.dr.command.SelPrkgFctnCmdH\x00\x12=\n\x18\x63ontinue_parking_request\x18\xb5\x42 \x01(\x0b\x32\x18.dr.command.ContnPrkgReqH\x00\x12,\n\nenable_tsr\x18\x98\x43 \x01(\x0b\x32\x15.dr.command.EnableTSRH\x00\x12,\n\nenable_slw\x18\x99\x43 \x01(\x0b\x32\x15.dr.command.EnableSLWH\x00\x42\x05\n\x03\x63md\"\x9b\r\n\tCommandRP\x12\n\n\x02id\x18\x01 \x01(\t\x12&\n\nerror_code\x18\x02 \x01(\x0e\x32\x12.dr.base.ErrorCode\x12+\n\x07\x61\x63\x63_tcc\x18\xe8\x07 \x01(\x0b\x32\x17.dr.command.GetACCTTCRPH\x00\x12:\n\x0f\x61\x63\x63_speed_limit\x18\xe9\x07 \x01(\x0b\x32\x1e.dr.command.GetACCSpeedLimitRPH\x00\x12/\n\rpath_response\x18\x9c\x18 \x01(\x0b\x32\x15.dr.command.GetPathRPH\x00\x12\x36\n\x11\x63ur_path_response\x18\x9d\x18 \x01(\x0b\x32\x18.dr.command.GetCurPathRPH\x00\x12;\n\x14\x63ur_path_id_response\x18\x9e\x18 \x01(\x0b\x32\x1a.dr.command.GetCurPathIdRPH\x00\x12\x34\n\x03pos\x18\x8b\' \x01(\x0b\x32$.dr.command.RequestImagePixelToPosRPH\x00\x12\x30\n\x0e\x61pa_parkin_res\x18\x8c\' \x01(\x0b\x32\x15.dr.command.APAParkRPH\x00\x12K\n\x19\x61pa_realtime_parkingspace\x18\x8d\' \x01(\x0b\x32%.dr.command.APARealtimeParkingSpaceRPH\x00\x12\x45\n\x14\x61pa_avm_parkingspace\x18\x8e\' \x01(\x0b\x32$.dr.command.APASelectAVMParkingSpaceH\x00\x12\x46\n\x17\x61pa_suggest_out_parking\x18\x8f\' \x01(\x0b\x32\".dr.command.APASuggestOutParkingRPH\x00\x12\x33\n\x0evpa_routing_rp\x18\xf2. \x01(\x0b\x32\x18.dr.command.VPARoutingRPH\x00\x12-\n\x08vpa_info\x18\xf3. \x01(\x0b\x32\x18.dr.command.VPAGetInfoRPH\x00\x12\x43\n\x18vpa_routing_get_map_info\x18\xf4. \x01(\x0b\x32\x1e.dr.command.VPARoutingGetMapRPH\x00\x12\x35\n\x0fvpa_learning_rp\x18\xf5. \x01(\x0b\x32\x19.dr.command.VPALearningRPH\x00\x12\x32\n\x0e\x62tn_ena_req_rp\x18\xf6. \x01(\x0b\x32\x17.dr.command.BtnEnaReqRPH\x00\x12.\n\navm_status\x18\x94< \x01(\x0b\x32\x17.dr.command.EnableAVMRPH\x00\x12\x37\n\x0f\x61vm_view_status\x18\x95< \x01(\x0b\x32\x1b.dr.command.SwitchAVMViewRPH\x00\x12?\n\x17\x61vm_parking_shot_status\x18\x96< \x01(\x0b\x32\x1b.dr.command.ParkedShotingRPH\x00\x12=\n\x14\x63urrent_avm_settings\x18\x97< \x01(\x0b\x32\x1c.dr.command.GetAVMSettingsRPH\x00\x12?\n\x14start_calibration_rp\x18\x98< \x01(\x0b\x32\x1e.dr.command.StartCalibrationRPH\x00\x12\x46\n\x17rpa_suggest_out_parking\x18\x99< \x01(\x0b\x32\".dr.command.RPASuggestOutParkingRPH\x00\x12\x31\n\x10tracking_data_rp\x18\xa4? \x01(\x0b\x32\x14.dr.dsm.TrackingDataH\x00\x12G\n\x15sentry_mode_statistic\x18\xd7? \x01(\x0b\x32%.dr.business_info.SentryModeStatisticH\x00\x12\x32\n\x0b\x63urr_config\x18\x88@ \x01(\x0b\x32\x1a.dr.localconfig.UserConfigH\x00\x12@\n\x0b\x66\x61il_reason\x18\xa8\x46 \x01(\x0b\x32*.dr.operationstatus.CommonStatusFailReason\x12#\n\x06module\x18\x8dG \x01(\x0e\x32\x12.dr.command.Module\x12\x35\n\x0fmap_engine_code\x18\x8eG \x01(\x0e\x32\x19.dr.command.MapEngineCodeH\x01\x12\x17\n\x0emodule_err_msg\x18\x8fG \x01(\tB\x07\n\x05\x63mdrpB\x11\n\x0fModuleErrorCode\"?\n\x0cUpdateConfig\x12/\n\x0buser_config\x18\x01 \x01(\x0b\x32\x1a.dr.localconfig.UserConfig\"\x1b\n\tEnableACC\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\"\x0b\n\tGetACCTTC\";\n\x0bGetACCTTCRP\x12,\n\x03ttc\x18\x01 \x01(\x0e\x32\x1f.dr.business_info.FollowTimeGap\"\x18\n\tSetACCTTC\x12\x0b\n\x03ttc\x18\x01 \x01(\x01\"\x12\n\x10GetACCSpeedLimit\")\n\x12GetACCSpeedLimitRP\x12\x13\n\x0bspeed_limit\x18\x01 \x01(\x05\"\x1b\n\tEnableICA\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\"n\n\nChangeLane\x12-\n\x06\x61\x63tion\x18\x01 \x01(\x0e\x32\x1d.dr.command.ChangeLane.Action\"1\n\x06\x41\x63tion\x12\x08\n\x04NONE\x10\x00\x12\r\n\tTURN_LEFT\x10\x01\x12\x0e\n\nTURN_RIGHT\x10\x02\"\x82\x01\n\x11\x43hangeAutoUpgrade\x12\x34\n\x06\x61\x63tion\x18\x01 \x01(\x0e\x32$.dr.command.ChangeAutoUpgrade.Action\"7\n\x06\x41\x63tion\x12\x08\n\x04NONE\x10\x00\x12\x0f\n\x0b\x44OWN_TO_ICA\x10\x01\x12\x12\n\x0eUPGRADE_TO_NCA\x10\x02\"\x1b\n\tEnableNCA\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\"\xe9\x02\n\x07GetPath\x12!\n\x06points\x18\x01 \x03(\x0b\x32\x11.dr.base.PointLLH\x12/\n\x06option\x18\x02 \x01(\x0b\x32\x1f.dr.business_info.RoutingOption\x12O\n\x1aroute_planning_data_source\x18\x03 \x01(\x0e\x32+.dr.command.GetPath.RoutePlanningDataSource\x12\x14\n\x0cmax_path_num\x18\x06 \x01(\x05\x12-\n\x0f\x61map_extra_info\x18\x07 \x01(\x0b\x32\x14.google.protobuf.Any\x12\x38\n\x12retry_on_net_error\x18\x08 \x01(\x0e\x32\x1c.dr.localconfig.SwitchStatus\":\n\x17RoutePlanningDataSource\x12\x10\n\x0cTENCENT_DATA\x10\x00\x12\r\n\tNAVI_DATA\x10\x01\"D\n\tGetPathRP\x12\x37\n\x0erouting_result\x18\x01 \x01(\x0b\x32\x1f.dr.business_info.RoutingResult\"\x0c\n\nGetCurPath\"4\n\x0cGetCurPathRP\x12$\n\x04path\x18\x01 \x01(\x0b\x32\x16.dr.business_info.Path\"\x0e\n\x0cGetCurPathId\"5\n\x0eGetCurPathIdRP\x12\x0f\n\x07path_id\x18\x01 \x01(\x05\x12\x12\n\npath_id_64\x18\x02 \x01(\x04\"\x82\x01\n\x0fStartNavigation\x12!\n\x06points\x18\x01 \x03(\x0b\x32\x11.dr.base.PointLLH\x12\x0f\n\x07path_id\x18\x02 \x01(\x05\x12\'\n\x0croute_points\x18\x03 \x03(\x0b\x32\x11.dr.base.PointLLH\x12\x12\n\npath_id_64\x18\x04 \x01(\x04\"7\n\x10\x43\x61ncelNavigation\x12\x0f\n\x07path_id\x18\x03 \x01(\x05\x12\x12\n\npath_id_64\x18\x04 \x01(\x04\"\x1b\n\tEnableLDW\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\"\x1b\n\tEnableRDP\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\"\x1b\n\tActiveAPA\x12\x0e\n\x06\x61\x63tive\x18\x01 \x01(\x08\"\x1b\n\tEnableVPA\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\"n\n\x14\x41PAParkingSwitchMode\x12\x33\n\x04type\x18\x01 \x01(\x0e\x32%.dr.command.APAParkingSwitchMode.Mode\"!\n\x04Mode\x12\x0b\n\x07PARK_IN\x10\x00\x12\x0c\n\x08PARK_OUT\x10\x01\"\x1b\n\tActiveVPA\x12\x0e\n\x06\x61\x63tive\x18\x01 \x01(\x08\"\x92\x01\n\x16\x41PAParkingUpdateStatus\x12\x43\n\toperation\x18\x01 \x01(\x0e\x32\x30.dr.command.APAParkingUpdateStatus.OperationType\"3\n\rOperationType\x12\t\n\x05PAUSE\x10\x00\x12\x0b\n\x07RECOVER\x10\x01\x12\n\n\x06\x43\x41NCEL\x10\x02\"\x1c\n\x1a\x41PAGetRealtimeParkingSpace\"I\n\x19\x41PARealtimeParkingSpaceRP\x12,\n\rparking_space\x18\x01 \x01(\x0b\x32\x15.dr.base.ParkingSpace\"i\n\x18\x41PAAPPSelectParkingSpace\x12,\n\rparking_space\x18\x01 \x01(\x0b\x32\x15.dr.base.ParkingSpace\x12\x1f\n\x17non_empty_parking_space\x18\x02 \x01(\x08\"\x16\n\x14\x41PASuggestOutParking\"c\n\x16\x41PASuggestOutParkingRP\x12I\n\x18suggest_out_parking_info\x18\x01 \x01(\x0b\x32\'.dr.business_info.SuggestOutParkingInfo\"\x12\n\x10\x41PAActiveParkOut\"\x17\n\x15\x41PASkipCountDownClock\"\x17\n\x15\x41PAEnterCustomParking\"\x17\n\x15\x41PALeaveCustomParking\"\x1d\n\x1b\x41PASelectCustomParkingSpace\"\xa6\x01\n\x0bVPALearning\x12>\n\x0eoperation_type\x18\x01 \x01(\x0e\x32&.dr.command.VPALearning.LearningOpType\"W\n\x0eLearningOpType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x18\n\x14START_ROUTE_LEARNING\x10\x01\x12\x0e\n\nSAVE_ROUTE\x10\x02\x12\x0e\n\nDROP_ROUTE\x10\x03\"\x84\x01\n\x14VPARoutingSwitchMode\x12\x33\n\x04mode\x18\x01 \x01(\x0e\x32%.dr.command.VPARoutingSwitchMode.Mode\"7\n\x04Mode\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0f\n\x0bVPA_ROUTING\x10\x01\x12\x11\n\rVPA_SEARCHINE\x10\x02\"\x8f\x01\n\nVPARouting\x12<\n\x0eoperation_type\x18\x01 \x01(\x0e\x32$.dr.command.VPARouting.RougintOpType\"C\n\rRougintOpType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x11\n\rSTART_ROUTING\x10\x01\x12\x12\n\x0e\x43\x41NCEL_ROUTING\x10\x02\"<\n\x0cVPARoutingRP\x12,\n\rparking_space\x18\x01 \x01(\x0b\x32\x15.dr.base.ParkingSpace\"\x0e\n\x0cVPAGetInfoRQ\"=\n\x0cVPAGetInfoRP\x12-\n\x07summary\x18\x01 \x01(\x0b\x32\x1c.dr.business_info.VPASummary\"\x12\n\x10VPARoutingGetMap\"\xaa\x01\n\x12VPARoutingGetMapRP\x12\x1e\n\x16vpa_estimated_distance\x18\x01 \x01(\r\x12\x1a\n\x12vpa_estimated_time\x18\x02 \x01(\r\x12\x14\n\x0csemantic_map\x18\x03 \x01(\x0c\x12\x42\n\x08map_info\x18\x04 \x01(\x0b\x32\x30.deeproute.localization.havp_map.HAVPMapMetaData\"]\n\rVPALearningRP\x12\x1d\n\x15vpa_learning_distance\x18\x01 \x01(\r\x12\x17\n\x0fvpa_speed_bumps\x18\x02 \x01(\r\x12\x14\n\x0csemantic_map\x18\x03 \x01(\x0c\"Q\n\tEnableAVM\x12\x0e\n\x06\x61\x63tive\x18\x01 \x01(\x08\x12\x34\n\x0b\x65nable_mode\x18\x02 \x01(\x0e\x32\x1f.dr.business_info.AVMEnableMode\"?\n\x0b\x45nableAVMRP\x12\x30\n\x06status\x18\x01 \x01(\x0b\x32 .dr.business_info.AVMSettingInfo\"\xf0\x01\n\rSwitchAVMView\x12\x19\n\x11\x62ird_view_enabled\x18\x01 \x01(\x08\x12\x19\n\x11round_view_enable\x18\x02 \x01(\x08\x12\x37\n\tavm2dview\x18\x03 \x01(\x0e\x32\".dr.business_info.AVM2DViewSettingH\x00\x12\x30\n\tavm3dview\x18\x04 \x01(\x0b\x32\x1b.dr.business_info.AVM3DViewH\x00\x12\x36\n\x0c\x61vmwheelview\x18\x05 \x01(\x0e\x32\x1e.dr.business_info.AVMWheelViewH\x00\x42\x06\n\x04View\"C\n\x0fSwitchAVMViewRP\x12\x30\n\x06status\x18\x01 \x01(\x0b\x32 .dr.business_info.AVMSettingInfo\"\x1f\n\rParkedShoting\x12\x0e\n\x06\x61\x63tive\x18\x01 \x01(\x08\"C\n\x0fParkedShotingRP\x12\x30\n\x06status\x18\x01 \x01(\x0b\x32 .dr.business_info.AVMSettingInfo\"\x10\n\x0eGetAVMSettings\"D\n\x10GetAVMSettingsRP\x12\x30\n\x06status\x18\x01 \x01(\x0b\x32 .dr.business_info.AVMSettingInfo\"+\n\tPDCUpdate\x12\x1e\n\x16request_pdc_curve_data\x18\x01 \x01(\x08\"\x1b\n\tEnableHMA\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\"\x1b\n\tEnableBSD\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\"\x1b\n\tEnableLCA\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\"\x1b\n\tEnableDOW\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\"\x1c\n\nEnableRCTA\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\"\x1b\n\tEnableRCW\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\"\x1c\n\nEnableRCTB\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\" \n\x10UpdateApaSetting\x12\x0c\n\x04mute\x18\x01 \x01(\x08\"N\n\tAPAParkIn\x12,\n\rparking_space\x18\x01 \x01(\x0b\x32\x15.dr.base.ParkingSpace\x12\x13\n\x0bvpa_task_id\x18\x02 \x01(\t\"B\n\nAPAParkOut\x12\x34\n\tdirection\x18\x01 \x01(\x0e\x32!.dr.business_info.APAOutDirection\"@\n\tAPAParkRP\x12\x33\n\x06reason\x18\x01 \x01(\x0b\x32#.dr.operationstatus.APAStatusReason\"\xd5\x01\n\x12\x41PAGetActiveSource\x12@\n\x08vpa_info\x18\x01 \x01(\x0b\x32,.dr.command.APAGetActiveSource.VPAActiveInfoH\x00\x12@\n\x08\x61pa_info\x18\x02 \x01(\x0b\x32,.dr.command.APAGetActiveSource.APAActiveInfoH\x00\x1a \n\rVPAActiveInfo\x12\x0f\n\x07task_id\x18\x01 \x01(\t\x1a\x0f\n\rAPAActiveInfoB\x08\n\x06source\"V\n\x16RequestImagePixelToPos\x12<\n\x0b\x63oordinates\x18\x01 \x03(\x0b\x32\'.dr.business_info.ImagePixelCoordinates\"P\n\x18RequestImagePixelToPosRP\x12\x34\n\x07objects\x18\x01 \x03(\x0b\x32#.dr.business_info.TransformedObject\";\n\x18\x41PASelectAVMParkingSpace\x12\x1f\n\x05point\x18\x01 \x01(\x0b\x32\x10.dr.base.Point2D\"J\n\x1a\x41PASelectAVMParkingSpaceRP\x12,\n\rparking_space\x18\x01 \x01(\x0b\x32\x15.dr.base.ParkingSpace\"\n\n\x08RPACheck\"\x0b\n\tRPAParkIn\"\x9b\x01\n\x10RPAParkingUpdate\x12=\n\toperation\x18\x01 \x01(\x0e\x32*.dr.command.RPAParkingUpdate.OperationType\"H\n\rOperationType\x12\x0b\n\x07OP_NONE\x10\x00\x12\x0c\n\x08OP_PAUSE\x10\x01\x12\r\n\tOP_CANCEL\x10\x02\x12\r\n\tOP_RESUME\x10\x03\"B\n\nRPAParkOut\x12\x34\n\tdirection\x18\x01 \x01(\x0e\x32!.dr.business_info.APAOutDirection\"c\n\x16RPASuggestOutParkingRP\x12I\n\x18suggest_out_parking_info\x18\x01 \x01(\x0b\x32\'.dr.business_info.SuggestOutParkingInfo\"\xad\x02\n\x10RPAStraightInOut\x12\x39\n\tdirection\x18\x01 \x01(\x0e\x32&.dr.command.RPAStraightInOut.Direction\x12=\n\toperation\x18\x02 \x01(\x0e\x32*.dr.command.RPAStraightInOut.OperationType\"G\n\tDirection\x12\x0f\n\x0b\x44IR_UNKNOWN\x10\x00\x12\x13\n\x0f\x44IR_STRAIGHT_IN\x10\x01\x12\x14\n\x10\x44IR_STRAIGHT_OUT\x10\x02\"V\n\rOperationType\x12\x0b\n\x07OP_NONE\x10\x00\x12\x0c\n\x08OP_START\x10\x01\x12\x0c\n\x08OP_PAUSE\x10\x02\x12\r\n\tOP_CANCEL\x10\x03\x12\r\n\tOP_RESUME\x10\x04\"4\n\x0fRPAAppHeartbeat\x12!\n\x04type\x18\x01 \x01(\x0e\x32\x13.dr.command.RPAType\",\n\x07RPAInit\x12!\n\x04type\x18\x01 \x01(\x0e\x32\x13.dr.command.RPAType\"\n\n\x08RPAClose\"\x16\n\x14RPASuggestOutParking\"\x1b\n\tEnableAEB\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\"\xa4\x02\n\x10StartCalibration\x12\x42\n\x0eoperation_type\x18\x01 \x01(\x0e\x32*.dr.command.StartCalibration.OperationType\x12\x35\n\ncalib_mode\x18\x02 \x01(\x0e\x32!.dr.business_info.CalibrationMode\x12@\n\x10\x63\x61libration_info\x18\x03 \x03(\x0b\x32&.dr.business_info.CalibrationBoardInfo\x12 \n\x18is_rear_axle_positioning\x18\x04 \x01(\x08\"1\n\rOperationType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\t\n\x05START\x10\x01\x12\x08\n\x04STOP\x10\x02\"\x14\n\x12StartCalibrationRP\"\x1b\n\tEnableELK\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\"\t\n\x07LSSMute\"\xf6\x01\n\x06TJPCmd\x12(\n\x04type\x18\x01 \x01(\x0e\x32\x1a.dr.command.TJPCmd.CmdType\"\xc1\x01\n\x07\x43mdType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x1a\n\x16REMIND_READY_TO_ACTIVE\x10\x01\x12\x13\n\x0fREMIND_TAKEOVER\x10\x02\x12\x17\n\x13SPEED_LIMIT_LEVEL_1\x10\x03\x12\x17\n\x13SPEED_LIMIT_LEVEL_2\x10\x04\x12\x17\n\x13SPEED_LIMIT_LEVEL_3\x10\x05\x12\x0f\n\x0bSIGNAL_LAMP\x10\x06\x12\n\n\x06TUNNEL\x10\x07\x12\x10\n\x0cTOLL_STATION\x10\x08\"^\n\x0eSetDefaultMode\x12$\n\rdefault_state\x18\x01 \x01(\x0e\x32\r.dr.dsm.State\x12&\n\x0c\x64\x65\x66\x61ult_mode\x18\x02 \x01(\x0e\x32\x10.dr.dsm.SubState\"\xa3\x01\n\x0eSelPrkgFctnCmd\x12\x30\n\x04type\x18\x01 \x01(\x0e\x32\".dr.command.SelPrkgFctnCmd.CmdType\"_\n\x07\x43mdType\x12\r\n\tNO_SELECT\x10\x00\x12\x0f\n\x0b\x41PA_PARKING\x10\x01\x12\x0f\n\x0bP2P_PARKING\x10\x02\x12\x13\n\x0f\x45XPLORE_FORWARD\x10\x03\x12\x0e\n\nDRIVE_BACK\x10\x04\"\x8f\x01\n\x0c\x43ontnPrkgReq\x12.\n\x04type\x18\x01 \x01(\x0e\x32 .dr.command.ContnPrkgReq.CmdType\"O\n\x07\x43mdType\x12\r\n\tNO_SELECT\x10\x00\x12\x14\n\x10\x43ONTINUE_PARKING\x10\x01\x12\x12\n\x0e\x43\x41NCEL_PARKING\x10\x02\x12\x0b\n\x07INVALID\x10\x03\"\xc7\n\n\tBtnEnaReq\x12+\n\x03\x63md\x18\x01 \x01(\x0e\x32\x1c.dr.command.BtnEnaReq.ReqCmdH\x00\x12\x42\n\x11\x65nter_routing_req\x18\x02 \x01(\x0b\x32%.dr.command.BtnEnaReq.EnterRoutingReqH\x00\x12K\n\x16select_target_slot_req\x18\x03 \x01(\x0b\x32).dr.command.BtnEnaReq.SelectTargetSlotReqH\x00\x12;\n\x0ego_to_here_req\x18\x04 \x01(\x0b\x32!.dr.command.BtnEnaReq.GoToHereReqH\x00\x12G\n\x14update_slot_info_req\x18\x05 \x01(\x0b\x32\'.dr.command.BtnEnaReq.UpdateSlotInfoReqH\x00\x12\x45\n\x13update_map_info_req\x18\x06 \x01(\x0b\x32&.dr.command.BtnEnaReq.UpdateMapInfoReqH\x00\x12?\n\x10get_map_info_req\x18\x07 \x01(\x0b\x32#.dr.command.BtnEnaReq.GetMapInfoReqH\x00\x1a\x11\n\x0f\x45nterRoutingReq\x1a\x36\n\x13SelectTargetSlotReq\x12\x1f\n\x17target_parking_space_id\x18\x01 \x01(\r\x1a.\n\x0bGoToHereReq\x12\x1f\n\x17target_parking_space_id\x18\x01 \x01(\r\x1a\xca\x01\n\x11UpdateSlotInfoReq\x12=\n\x0eoperation_type\x18\x01 \x01(\x0e\x32%.dr.notification.gwmhut.OperatingType\x12W\n\x19parking_space_info_change\x18\x02 \x01(\x0b\x32\x34.deeproute.localization.havp_map.ParkingSpaceUsrInfo\x12\x1d\n\x15\x64\x65\x66\x61ult_parking_space\x18\x03 \x01(\x08\x1a\x9c\x01\n\x10UpdateMapInfoReq\x12=\n\x0eoperation_type\x18\x01 \x01(\x0e\x32%.dr.notification.gwmhut.OperatingType\x12I\n\x0fmap_info_change\x18\x02 \x01(\x0b\x32\x30.deeproute.localization.havp_map.HAVPMapMetaData\x1a@\n\rGetMapInfoReq\x12\x18\n\x10get_all_map_info\x18\x01 \x01(\x08\x12\x15\n\rtarget_map_id\x18\x02 \x01(\r\"\xb9\x02\n\x06ReqCmd\x12\x08\n\x04NONE\x10\x00\x12\x18\n\x14\x43ONTINUE_SEARCH_SLOT\x10\x01\x12\x11\n\rACTIVE_SIGNAL\x10\x02\x12\x11\n\rSTART_HAVP_VR\x10\x03\x12\x14\n\x10\x43ONFRIM_MAPBUILT\x10\x04\x12\n\n\x06\x43\x41NCEL\x10\x05\x12\x19\n\x15\x43ONFRIM_START_PARKING\x10\x06\x12\x19\n\x15SEARCH_SLOT_ALONG_WAY\x10\x07\x12\x12\n\x0eHAVP_COMPLETED\x10\x08\x12\x07\n\x03TRY\x10\t\x12\x16\n\x12LEARNING_COMPLETED\x10\n\x12\x12\n\x0e\x43ONTINUE_LEARN\x10\x0b\x12\x10\n\x0cSTART_SVP_VR\x10\x0c\x12\x17\n\x12\x43\x41NCEL_PRE_MAPPING\x10\xa1\x01\x12\x19\n\x14\x43ONTINUE_PRE_MAPPING\x10\xa2\x01\x42\t\n\x07HAVPCMD\"\xfe\x02\n\x0b\x42tnEnaReqRP\x12\x30\n\x05popup\x18\x01 \x01(\x0b\x32!.dr.notification.gwmhut.PopupDisp\x12\x36\n\x0bmap_info_rp\x18\x02 \x01(\x0b\x32!.dr.command.BtnEnaReqRP.MapInfoRP\x12J\n\x16parking_spaces_info_rp\x18\x03 \x01(\x0b\x32*.dr.command.BtnEnaReqRP.ParkingSpaceInfoRP\x1aP\n\tMapInfoRP\x12\x43\n\tmaps_info\x18\x01 \x03(\x0b\x32\x30.deeproute.localization.havp_map.HAVPMapMetaData\x1ag\n\x12ParkingSpaceInfoRP\x12Q\n\x13parking_spaces_info\x18\x01 \x03(\x0b\x32\x34.deeproute.localization.havp_map.ParkingSpaceUsrInfo\"\xe1\x12\n\x10GWParkingCommand\x12H\n\x11sel_prkg_fctn_cmd\x18\x01 \x01(\x0b\x32+.dr.command.GWParkingCommand.SelPrkgFctnCmdH\x00\x12\x43\n\x0e\x63ontn_prkg_req\x18\x02 \x01(\x0b\x32).dr.command.GWParkingCommand.ContnPrkgReqH\x00\x12?\n\x0cpas_work_cmd\x18\x03 \x01(\x0b\x32\'.dr.command.GWParkingCommand.PASWorkCmdH\x00\x12K\n\x13sel_prk_out_dir_req\x18\x04 \x01(\x0b\x32,.dr.command.GWParkingCommand.SelPrkOutDirReqH\x00\x12=\n\x0bprk_mod_req\x18\x05 \x01(\x0b\x32&.dr.command.GWParkingCommand.PrkModreqH\x00\x12?\n\x0c\x62\x61\x63k_req_aps\x18\x06 \x01(\x0b\x32\'.dr.command.GWParkingCommand.BackReqAPSH\x00\x12H\n\x11prkg_ctrl_mod_req\x18\x07 \x01(\x0b\x32+.dr.command.GWParkingCommand.PrkgCtrlModReqH\x00\x12\x42\n\x0e\x61ps_swt_req_vr\x18\x08 \x01(\x0b\x32(.dr.command.GWParkingCommand.APSSwtReqVRH\x00\x12=\n\x0bslot_num_vr\x18\t \x01(\x0b\x32&.dr.command.GWParkingCommand.SlotNumVRH\x00\x1a\x88\x02\n\x0eSelPrkgFctnCmd\x12<\n\x03\x63md\x18\x01 \x01(\x0e\x32/.dr.command.GWParkingCommand.SelPrkgFctnCmd.Cmd\"\xb7\x01\n\x03\x43md\x12\r\n\tNO_SELECT\x10\x00\x12\x16\n\x12SELECT_APA_PARKING\x10\x01\x12\x16\n\x12SELECT_P2P_PARKING\x10\x02\x12\x1a\n\x16SELECT_EXPLORE_FORWARD\x10\x03\x12\x15\n\x11SELECT_DRIVE_BACK\x10\x04\x12\x17\n\x13SELECT_HAVP_PARKING\x10\x05\x12\x17\n\x13SELECT_PAVP_PARKING\x10\x06\x12\x0c\n\x08RESERVED\x10\x07\x1a\x80\x02\n\x0c\x43ontnPrkgReq\x12:\n\x03\x63md\x18\x01 \x01(\x0e\x32-.dr.command.GWParkingCommand.ContnPrkgReq.Cmd\x12>\n\x05valid\x18\x02 \x01(\x0e\x32/.dr.command.GWParkingCommand.ContnPrkgReq.Valid\"S\n\x03\x43md\x12\r\n\tNO_SELECT\x10\x00\x12\x1b\n\x17SELECT_CONTINUE_PARKING\x10\x01\x12\x12\n\x0e\x43\x41NCEL_PARKING\x10\x02\x12\x0c\n\x08RESERVED\x10\x03\"\x1f\n\x05Valid\x12\t\n\x05VALID\x10\x00\x12\x0b\n\x07INVALID\x10\x01\x1a^\n\nPASWorkCmd\x12\x38\n\x03\x63md\x18\x01 \x01(\x0e\x32+.dr.command.GWParkingCommand.PASWorkCmd.Cmd\"\x16\n\x03\x43md\x12\x07\n\x03OFF\x10\x00\x12\x06\n\x02ON\x10\x01\x1a\x9b\x03\n\x0fSelPrkOutDirReq\x12=\n\x03\x63md\x18\x01 \x01(\x0e\x32\x30.dr.command.GWParkingCommand.SelPrkOutDirReq.Cmd\"\xc8\x02\n\x03\x43md\x12\x10\n\x0cNO_SELECTION\x10\x00\x12$\n PARK_OUT_FRONT_VERTICAL_HEAD_OUT\x10\x01\x12#\n\x1fPARK_OUT_REAR_VERTICAL_TAIL_OUT\x10\x02\x12#\n\x1fPARK_OUT_LEFT_PARALLEL_LEFT_OUT\x10\x03\x12%\n!PARK_OUT_RIGHT_PARALLEL_RIGHT_OUT\x10\x04\x12#\n\x1fPARK_OUT_LEFT_VERTICAL_LEFT_OUT\x10\x05\x12%\n!PARK_OUT_RIGHT_VERTICAL_RIGHT_OUT\x10\x06\x12\x0c\n\x08RESERVED\x10\x07\x12\x0e\n\nFRONT_LEFT\x10\x08\x12\x0f\n\x0b\x46RONT_RIGHT\x10\t\x12\r\n\tBACK_LEFT\x10\n\x12\x0e\n\nBACK_RIGHT\x10\x0b\x1a\xa8\x01\n\tPrkModreq\x12\x37\n\x03\x63md\x18\x01 \x01(\x0e\x32*.dr.command.GWParkingCommand.PrkModreq.Cmd\"b\n\x03\x43md\x12\r\n\tNO_SELECT\x10\x00\x12\x13\n\x0fHEAD_PARKING_IN\x10\x01\x12\x13\n\x0fTAIL_PARKING_IN\x10\x02\x12\x10\n\x0cRESERVED_0x3\x10\x03\x12\x10\n\x0cRESERVED_0x4\x10\x04\x1a\xfd\x01\n\x0ePrkgCtrlModReq\x12<\n\x03\x63md\x18\x01 \x01(\x0e\x32/.dr.command.GWParkingCommand.PrkgCtrlModReq.Cmd\x12@\n\x05valid\x18\x02 \x01(\x0e\x32\x31.dr.command.GWParkingCommand.PrkgCtrlModReq.Valid\"J\n\x03\x43md\x12\r\n\tNO_ACTION\x10\x00\x12\x12\n\x0ePARKING_IN_CAR\x10\x01\x12\x12\n\x0eREMOTE_PARKING\x10\x02\x12\x0c\n\x08RESERVED\x10\x03\"\x1f\n\x05Valid\x12\t\n\x05VALID\x10\x00\x12\x0b\n\x07INVALID\x10\x01\x1aj\n\nBackReqAPS\x12\x38\n\x03\x63md\x18\x01 \x01(\x0e\x32+.dr.command.GWParkingCommand.BackReqAPS.Cmd\"\"\n\x03\x43md\x12\x0e\n\nNO_REQUEST\x10\x00\x12\x0b\n\x07REQUEST\x10\x01\x1a}\n\x0b\x41PSSwtReqVR\x12\x39\n\x03\x63md\x18\x01 \x01(\x0e\x32,.dr.command.GWParkingCommand.APSSwtReqVR.Cmd\"3\n\x03\x43md\x12\r\n\tNO_ACTION\x10\x00\x12\x07\n\x03OFF\x10\x01\x12\x06\n\x02ON\x10\x02\x12\x0c\n\x08RESERVED\x10\x03\x1a\x39\n\tSlotNumVR\x12,\n\rparking_space\x18\x01 \x01(\x0b\x32\x15.dr.base.ParkingSpaceB\x06\n\x04type\"\xba\x03\n\x0eSmartLPCommand\x12\x1d\n\x13lp_function_confirm\x18\x01 \x01(\x08H\x00\x12\x1a\n\x10lp_function_exit\x18\x02 \x01(\x08H\x00\x12\x1c\n\x12lp_function_cancel\x18\x03 \x01(\x08H\x00\x12\x1b\n\x11lp_learning_start\x18\x04 \x01(\x08H\x00\x12\x1c\n\x12lp_function_return\x18\x05 \x01(\x08H\x00\x12\x18\n\x0elp_path_manage\x18\x06 \x01(\x08H\x00\x12\x1d\n\x13lp_selected_slot_id\x18\x07 \x01(\x05H\x00\x12\x1e\n\x14lp_learning_complete\x18\x08 \x01(\x08H\x00\x12\x18\n\x0elp_parking_try\x18\t \x01(\x08H\x00\x12\x1a\n\x10lp_function_park\x18\n \x01(\x08H\x00\x12\x30\n\ndelete_map\x18\x0b \x01(\x0b\x32\x1a.dr.command.ParkingMapInfoH\x00\x12\x19\n\x0flp_recover_park\x18\x0c \x01(\x08H\x00\x12\x16\n\x0clp_start_apa\x18\r \x01(\x08H\x00\x12\x15\n\x0blp_exit_apa\x18\x0e \x01(\x08H\x00\x42\t\n\x07\x43ommand\"\xb2\x02\n\x10GLParkingCommand\x12\x36\n\x16\x64rvr_assc_sys_btn_push\x18\x01 \x01(\x0b\x32\x14.google.protobuf.AnyH\x00\x12\x34\n\x14prkg_intrpt_reld_btn\x18\x02 \x01(\x0b\x32\x14.google.protobuf.AnyH\x00\x12\x36\n\x16\x64rvr_assc_sys_park_mod\x18\x03 \x01(\x0b\x32\x14.google.protobuf.AnyH\x00\x12\x37\n\x17prkg_in_or_out_and_cncl\x18\x04 \x01(\x0b\x32\x14.google.protobuf.AnyH\x00\x12\x34\n\x14\x61ut_prkg_slot_nr_req\x18\x05 \x01(\x0b\x32\x14.google.protobuf.AnyH\x00\x42\t\n\x07\x43ommand\"\x1c\n\x0eParkingMapInfo\x12\n\n\x02id\x18\x01 \x01(\x05\"\x8f\x01\n\x11SentryModeCommand\x12\x33\n\x04type\x18\x01 \x01(\x0e\x32%.dr.command.SentryModeCommand.CmdType\"E\n\x07\x43mdType\x12\r\n\tNO_SELECT\x10\x00\x12\x15\n\x11START_SENTRY_MODE\x10\x01\x12\x14\n\x10STOP_SENTRY_MODE\x10\x02\"\x18\n\x16SentryModeGetStatistic\"\x1b\n\tEnableTSR\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\"\x1b\n\tEnableSLW\x12\x0e\n\x06\x65nable\x18\x01 \x01(\x08\"q\n\x11\x44rivingActiveExit\x12\x12\n\ndriving_on\x18\x01 \x01(\x08\x12\x13\n\x0b\x64riving_off\x18\x02 \x01(\x08\x12\x33\n\x0etarget_feature\x18\x03 \x01(\x0e\x32\x1b.dr.operationstatus.Feature*\x98\x03\n\x06Module\x12\x12\n\x0eUNKNOWN_MODULE\x10\x00\x12\x10\n\x0cSENSOR_LIDAR\x10\x01\x12\x0e\n\nSENSOR_USS\x10\x02\x12\x0e\n\nSENSOR_INS\x10\x03\x12\x10\n\x0cSENSOR_RADAR\x10\x04\x12\x0e\n\nMAP_ENGINE\x10\x05\x12\x10\n\x0cLOCK_ON_ROAD\x10\x06\x12\x0e\n\nINS_ONLINE\x10\x07\x12\x10\n\x0cLOCALIZATION\x10\x08\x12\x0e\n\nPERCEPTION\x10\t\x12\x0c\n\x08PLANNING\x10\n\x12\n\n\x06\x43\x41NBUS\x10\x0b\x12\x07\n\x03\x42LC\x10\x0c\x12\n\n\x06SAFETY\x10\r\x12\x0b\n\x07STARTER\x10\x0e\x12\x12\n\x0ePERF_COLLECTOR\x10\x0f\x12\n\n\x06\x43HURCH\x10\x10\x12\n\n\x06SENTRY\x10\x11\x12\x11\n\rSENSOR_CAMERA\x10\x12\x12\x11\n\rLOCAL_ROUTING\x10\x13\x12\x0b\n\x07\x43ONTROL\x10\x14\x12\x0b\n\x07ROUTING\x10\x15\x12\x1b\n\x17PARKING_ENTRY_DETECTION\x10\x16\x12\x14\n\x10RTK_POSE_FORWARD\x10\x17\x12\x07\n\x03\x44SM\x10\x18*\xc4\x01\n\rMapEngineCode\x12\x0b\n\x07SUCCESS\x10\x00\x12\x0c\n\x08INTERNAL\x10\x01\x12\r\n\tNOT_FOUND\x10\x02\x12\x14\n\x10INVALID_ARGUMENT\x10\x03\x12\x0f\n\x0bUNAVAILABLE\x10\x04\x12\x10\n\x0cOUT_OF_RANGE\x10\x05\x12$\n NETWORK_ADDRESS_RESOLUTION_ERROR\x10\x06\x12\x15\n\x11\x44\x45\x41\x44LINE_EXCEEDED\x10\x07\x12\x13\n\x0fROUTING_UNKNOWN\x10\x08*M\n\x07RPAType\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0e\n\nPARKING_IN\x10\x01\x12\x0f\n\x0bPARKING_OUT\x10\x02\x12\x14\n\x10STARAIGHT_IN_OUT\x10\x03\x62\x06proto3')

_MODULE = DESCRIPTOR.enum_types_by_name['Module']
Module = enum_type_wrapper.EnumTypeWrapper(_MODULE)
_MAPENGINECODE = DESCRIPTOR.enum_types_by_name['MapEngineCode']
MapEngineCode = enum_type_wrapper.EnumTypeWrapper(_MAPENGINECODE)
_RPATYPE = DESCRIPTOR.enum_types_by_name['RPAType']
RPAType = enum_type_wrapper.EnumTypeWrapper(_RPATYPE)
UNKNOWN_MODULE = 0
SENSOR_LIDAR = 1
SENSOR_USS = 2
SENSOR_INS = 3
SENSOR_RADAR = 4
MAP_ENGINE = 5
LOCK_ON_ROAD = 6
INS_ONLINE = 7
LOCALIZATION = 8
PERCEPTION = 9
PLANNING = 10
CANBUS = 11
BLC = 12
SAFETY = 13
STARTER = 14
PERF_COLLECTOR = 15
CHURCH = 16
SENTRY = 17
SENSOR_CAMERA = 18
LOCAL_ROUTING = 19
CONTROL = 20
ROUTING = 21
PARKING_ENTRY_DETECTION = 22
RTK_POSE_FORWARD = 23
DSM = 24
SUCCESS = 0
INTERNAL = 1
NOT_FOUND = 2
INVALID_ARGUMENT = 3
UNAVAILABLE = 4
OUT_OF_RANGE = 5
NETWORK_ADDRESS_RESOLUTION_ERROR = 6
DEADLINE_EXCEEDED = 7
ROUTING_UNKNOWN = 8
UNKNOWN = 0
PARKING_IN = 1
PARKING_OUT = 2
STARAIGHT_IN_OUT = 3


_COMMAND = DESCRIPTOR.message_types_by_name['Command']
_COMMANDRP = DESCRIPTOR.message_types_by_name['CommandRP']
_UPDATECONFIG = DESCRIPTOR.message_types_by_name['UpdateConfig']
_ENABLEACC = DESCRIPTOR.message_types_by_name['EnableACC']
_GETACCTTC = DESCRIPTOR.message_types_by_name['GetACCTTC']
_GETACCTTCRP = DESCRIPTOR.message_types_by_name['GetACCTTCRP']
_SETACCTTC = DESCRIPTOR.message_types_by_name['SetACCTTC']
_GETACCSPEEDLIMIT = DESCRIPTOR.message_types_by_name['GetACCSpeedLimit']
_GETACCSPEEDLIMITRP = DESCRIPTOR.message_types_by_name['GetACCSpeedLimitRP']
_ENABLEICA = DESCRIPTOR.message_types_by_name['EnableICA']
_CHANGELANE = DESCRIPTOR.message_types_by_name['ChangeLane']
_CHANGEAUTOUPGRADE = DESCRIPTOR.message_types_by_name['ChangeAutoUpgrade']
_ENABLENCA = DESCRIPTOR.message_types_by_name['EnableNCA']
_GETPATH = DESCRIPTOR.message_types_by_name['GetPath']
_GETPATHRP = DESCRIPTOR.message_types_by_name['GetPathRP']
_GETCURPATH = DESCRIPTOR.message_types_by_name['GetCurPath']
_GETCURPATHRP = DESCRIPTOR.message_types_by_name['GetCurPathRP']
_GETCURPATHID = DESCRIPTOR.message_types_by_name['GetCurPathId']
_GETCURPATHIDRP = DESCRIPTOR.message_types_by_name['GetCurPathIdRP']
_STARTNAVIGATION = DESCRIPTOR.message_types_by_name['StartNavigation']
_CANCELNAVIGATION = DESCRIPTOR.message_types_by_name['CancelNavigation']
_ENABLELDW = DESCRIPTOR.message_types_by_name['EnableLDW']
_ENABLERDP = DESCRIPTOR.message_types_by_name['EnableRDP']
_ACTIVEAPA = DESCRIPTOR.message_types_by_name['ActiveAPA']
_ENABLEVPA = DESCRIPTOR.message_types_by_name['EnableVPA']
_APAPARKINGSWITCHMODE = DESCRIPTOR.message_types_by_name['APAParkingSwitchMode']
_ACTIVEVPA = DESCRIPTOR.message_types_by_name['ActiveVPA']
_APAPARKINGUPDATESTATUS = DESCRIPTOR.message_types_by_name['APAParkingUpdateStatus']
_APAGETREALTIMEPARKINGSPACE = DESCRIPTOR.message_types_by_name['APAGetRealtimeParkingSpace']
_APAREALTIMEPARKINGSPACERP = DESCRIPTOR.message_types_by_name['APARealtimeParkingSpaceRP']
_APAAPPSELECTPARKINGSPACE = DESCRIPTOR.message_types_by_name['APAAPPSelectParkingSpace']
_APASUGGESTOUTPARKING = DESCRIPTOR.message_types_by_name['APASuggestOutParking']
_APASUGGESTOUTPARKINGRP = DESCRIPTOR.message_types_by_name['APASuggestOutParkingRP']
_APAACTIVEPARKOUT = DESCRIPTOR.message_types_by_name['APAActiveParkOut']
_APASKIPCOUNTDOWNCLOCK = DESCRIPTOR.message_types_by_name['APASkipCountDownClock']
_APAENTERCUSTOMPARKING = DESCRIPTOR.message_types_by_name['APAEnterCustomParking']
_APALEAVECUSTOMPARKING = DESCRIPTOR.message_types_by_name['APALeaveCustomParking']
_APASELECTCUSTOMPARKINGSPACE = DESCRIPTOR.message_types_by_name['APASelectCustomParkingSpace']
_VPALEARNING = DESCRIPTOR.message_types_by_name['VPALearning']
_VPAROUTINGSWITCHMODE = DESCRIPTOR.message_types_by_name['VPARoutingSwitchMode']
_VPAROUTING = DESCRIPTOR.message_types_by_name['VPARouting']
_VPAROUTINGRP = DESCRIPTOR.message_types_by_name['VPARoutingRP']
_VPAGETINFORQ = DESCRIPTOR.message_types_by_name['VPAGetInfoRQ']
_VPAGETINFORP = DESCRIPTOR.message_types_by_name['VPAGetInfoRP']
_VPAROUTINGGETMAP = DESCRIPTOR.message_types_by_name['VPARoutingGetMap']
_VPAROUTINGGETMAPRP = DESCRIPTOR.message_types_by_name['VPARoutingGetMapRP']
_VPALEARNINGRP = DESCRIPTOR.message_types_by_name['VPALearningRP']
_ENABLEAVM = DESCRIPTOR.message_types_by_name['EnableAVM']
_ENABLEAVMRP = DESCRIPTOR.message_types_by_name['EnableAVMRP']
_SWITCHAVMVIEW = DESCRIPTOR.message_types_by_name['SwitchAVMView']
_SWITCHAVMVIEWRP = DESCRIPTOR.message_types_by_name['SwitchAVMViewRP']
_PARKEDSHOTING = DESCRIPTOR.message_types_by_name['ParkedShoting']
_PARKEDSHOTINGRP = DESCRIPTOR.message_types_by_name['ParkedShotingRP']
_GETAVMSETTINGS = DESCRIPTOR.message_types_by_name['GetAVMSettings']
_GETAVMSETTINGSRP = DESCRIPTOR.message_types_by_name['GetAVMSettingsRP']
_PDCUPDATE = DESCRIPTOR.message_types_by_name['PDCUpdate']
_ENABLEHMA = DESCRIPTOR.message_types_by_name['EnableHMA']
_ENABLEBSD = DESCRIPTOR.message_types_by_name['EnableBSD']
_ENABLELCA = DESCRIPTOR.message_types_by_name['EnableLCA']
_ENABLEDOW = DESCRIPTOR.message_types_by_name['EnableDOW']
_ENABLERCTA = DESCRIPTOR.message_types_by_name['EnableRCTA']
_ENABLERCW = DESCRIPTOR.message_types_by_name['EnableRCW']
_ENABLERCTB = DESCRIPTOR.message_types_by_name['EnableRCTB']
_UPDATEAPASETTING = DESCRIPTOR.message_types_by_name['UpdateApaSetting']
_APAPARKIN = DESCRIPTOR.message_types_by_name['APAParkIn']
_APAPARKOUT = DESCRIPTOR.message_types_by_name['APAParkOut']
_APAPARKRP = DESCRIPTOR.message_types_by_name['APAParkRP']
_APAGETACTIVESOURCE = DESCRIPTOR.message_types_by_name['APAGetActiveSource']
_APAGETACTIVESOURCE_VPAACTIVEINFO = _APAGETACTIVESOURCE.nested_types_by_name['VPAActiveInfo']
_APAGETACTIVESOURCE_APAACTIVEINFO = _APAGETACTIVESOURCE.nested_types_by_name['APAActiveInfo']
_REQUESTIMAGEPIXELTOPOS = DESCRIPTOR.message_types_by_name['RequestImagePixelToPos']
_REQUESTIMAGEPIXELTOPOSRP = DESCRIPTOR.message_types_by_name['RequestImagePixelToPosRP']
_APASELECTAVMPARKINGSPACE = DESCRIPTOR.message_types_by_name['APASelectAVMParkingSpace']
_APASELECTAVMPARKINGSPACERP = DESCRIPTOR.message_types_by_name['APASelectAVMParkingSpaceRP']
_RPACHECK = DESCRIPTOR.message_types_by_name['RPACheck']
_RPAPARKIN = DESCRIPTOR.message_types_by_name['RPAParkIn']
_RPAPARKINGUPDATE = DESCRIPTOR.message_types_by_name['RPAParkingUpdate']
_RPAPARKOUT = DESCRIPTOR.message_types_by_name['RPAParkOut']
_RPASUGGESTOUTPARKINGRP = DESCRIPTOR.message_types_by_name['RPASuggestOutParkingRP']
_RPASTRAIGHTINOUT = DESCRIPTOR.message_types_by_name['RPAStraightInOut']
_RPAAPPHEARTBEAT = DESCRIPTOR.message_types_by_name['RPAAppHeartbeat']
_RPAINIT = DESCRIPTOR.message_types_by_name['RPAInit']
_RPACLOSE = DESCRIPTOR.message_types_by_name['RPAClose']
_RPASUGGESTOUTPARKING = DESCRIPTOR.message_types_by_name['RPASuggestOutParking']
_ENABLEAEB = DESCRIPTOR.message_types_by_name['EnableAEB']
_STARTCALIBRATION = DESCRIPTOR.message_types_by_name['StartCalibration']
_STARTCALIBRATIONRP = DESCRIPTOR.message_types_by_name['StartCalibrationRP']
_ENABLEELK = DESCRIPTOR.message_types_by_name['EnableELK']
_LSSMUTE = DESCRIPTOR.message_types_by_name['LSSMute']
_TJPCMD = DESCRIPTOR.message_types_by_name['TJPCmd']
_SETDEFAULTMODE = DESCRIPTOR.message_types_by_name['SetDefaultMode']
_SELPRKGFCTNCMD = DESCRIPTOR.message_types_by_name['SelPrkgFctnCmd']
_CONTNPRKGREQ = DESCRIPTOR.message_types_by_name['ContnPrkgReq']
_BTNENAREQ = DESCRIPTOR.message_types_by_name['BtnEnaReq']
_BTNENAREQ_ENTERROUTINGREQ = _BTNENAREQ.nested_types_by_name['EnterRoutingReq']
_BTNENAREQ_SELECTTARGETSLOTREQ = _BTNENAREQ.nested_types_by_name['SelectTargetSlotReq']
_BTNENAREQ_GOTOHEREREQ = _BTNENAREQ.nested_types_by_name['GoToHereReq']
_BTNENAREQ_UPDATESLOTINFOREQ = _BTNENAREQ.nested_types_by_name['UpdateSlotInfoReq']
_BTNENAREQ_UPDATEMAPINFOREQ = _BTNENAREQ.nested_types_by_name['UpdateMapInfoReq']
_BTNENAREQ_GETMAPINFOREQ = _BTNENAREQ.nested_types_by_name['GetMapInfoReq']
_BTNENAREQRP = DESCRIPTOR.message_types_by_name['BtnEnaReqRP']
_BTNENAREQRP_MAPINFORP = _BTNENAREQRP.nested_types_by_name['MapInfoRP']
_BTNENAREQRP_PARKINGSPACEINFORP = _BTNENAREQRP.nested_types_by_name['ParkingSpaceInfoRP']
_GWPARKINGCOMMAND = DESCRIPTOR.message_types_by_name['GWParkingCommand']
_GWPARKINGCOMMAND_SELPRKGFCTNCMD = _GWPARKINGCOMMAND.nested_types_by_name['SelPrkgFctnCmd']
_GWPARKINGCOMMAND_CONTNPRKGREQ = _GWPARKINGCOMMAND.nested_types_by_name['ContnPrkgReq']
_GWPARKINGCOMMAND_PASWORKCMD = _GWPARKINGCOMMAND.nested_types_by_name['PASWorkCmd']
_GWPARKINGCOMMAND_SELPRKOUTDIRREQ = _GWPARKINGCOMMAND.nested_types_by_name['SelPrkOutDirReq']
_GWPARKINGCOMMAND_PRKMODREQ = _GWPARKINGCOMMAND.nested_types_by_name['PrkModreq']
_GWPARKINGCOMMAND_PRKGCTRLMODREQ = _GWPARKINGCOMMAND.nested_types_by_name['PrkgCtrlModReq']
_GWPARKINGCOMMAND_BACKREQAPS = _GWPARKINGCOMMAND.nested_types_by_name['BackReqAPS']
_GWPARKINGCOMMAND_APSSWTREQVR = _GWPARKINGCOMMAND.nested_types_by_name['APSSwtReqVR']
_GWPARKINGCOMMAND_SLOTNUMVR = _GWPARKINGCOMMAND.nested_types_by_name['SlotNumVR']
_SMARTLPCOMMAND = DESCRIPTOR.message_types_by_name['SmartLPCommand']
_GLPARKINGCOMMAND = DESCRIPTOR.message_types_by_name['GLParkingCommand']
_PARKINGMAPINFO = DESCRIPTOR.message_types_by_name['ParkingMapInfo']
_SENTRYMODECOMMAND = DESCRIPTOR.message_types_by_name['SentryModeCommand']
_SENTRYMODEGETSTATISTIC = DESCRIPTOR.message_types_by_name['SentryModeGetStatistic']
_ENABLETSR = DESCRIPTOR.message_types_by_name['EnableTSR']
_ENABLESLW = DESCRIPTOR.message_types_by_name['EnableSLW']
_DRIVINGACTIVEEXIT = DESCRIPTOR.message_types_by_name['DrivingActiveExit']
_CHANGELANE_ACTION = _CHANGELANE.enum_types_by_name['Action']
_CHANGEAUTOUPGRADE_ACTION = _CHANGEAUTOUPGRADE.enum_types_by_name['Action']
_GETPATH_ROUTEPLANNINGDATASOURCE = _GETPATH.enum_types_by_name['RoutePlanningDataSource']
_APAPARKINGSWITCHMODE_MODE = _APAPARKINGSWITCHMODE.enum_types_by_name['Mode']
_APAPARKINGUPDATESTATUS_OPERATIONTYPE = _APAPARKINGUPDATESTATUS.enum_types_by_name['OperationType']
_VPALEARNING_LEARNINGOPTYPE = _VPALEARNING.enum_types_by_name['LearningOpType']
_VPAROUTINGSWITCHMODE_MODE = _VPAROUTINGSWITCHMODE.enum_types_by_name['Mode']
_VPAROUTING_ROUGINTOPTYPE = _VPAROUTING.enum_types_by_name['RougintOpType']
_RPAPARKINGUPDATE_OPERATIONTYPE = _RPAPARKINGUPDATE.enum_types_by_name['OperationType']
_RPASTRAIGHTINOUT_DIRECTION = _RPASTRAIGHTINOUT.enum_types_by_name['Direction']
_RPASTRAIGHTINOUT_OPERATIONTYPE = _RPASTRAIGHTINOUT.enum_types_by_name['OperationType']
_STARTCALIBRATION_OPERATIONTYPE = _STARTCALIBRATION.enum_types_by_name['OperationType']
_TJPCMD_CMDTYPE = _TJPCMD.enum_types_by_name['CmdType']
_SELPRKGFCTNCMD_CMDTYPE = _SELPRKGFCTNCMD.enum_types_by_name['CmdType']
_CONTNPRKGREQ_CMDTYPE = _CONTNPRKGREQ.enum_types_by_name['CmdType']
_BTNENAREQ_REQCMD = _BTNENAREQ.enum_types_by_name['ReqCmd']
_GWPARKINGCOMMAND_SELPRKGFCTNCMD_CMD = _GWPARKINGCOMMAND_SELPRKGFCTNCMD.enum_types_by_name['Cmd']
_GWPARKINGCOMMAND_CONTNPRKGREQ_CMD = _GWPARKINGCOMMAND_CONTNPRKGREQ.enum_types_by_name['Cmd']
_GWPARKINGCOMMAND_CONTNPRKGREQ_VALID = _GWPARKINGCOMMAND_CONTNPRKGREQ.enum_types_by_name['Valid']
_GWPARKINGCOMMAND_PASWORKCMD_CMD = _GWPARKINGCOMMAND_PASWORKCMD.enum_types_by_name['Cmd']
_GWPARKINGCOMMAND_SELPRKOUTDIRREQ_CMD = _GWPARKINGCOMMAND_SELPRKOUTDIRREQ.enum_types_by_name['Cmd']
_GWPARKINGCOMMAND_PRKMODREQ_CMD = _GWPARKINGCOMMAND_PRKMODREQ.enum_types_by_name['Cmd']
_GWPARKINGCOMMAND_PRKGCTRLMODREQ_CMD = _GWPARKINGCOMMAND_PRKGCTRLMODREQ.enum_types_by_name['Cmd']
_GWPARKINGCOMMAND_PRKGCTRLMODREQ_VALID = _GWPARKINGCOMMAND_PRKGCTRLMODREQ.enum_types_by_name['Valid']
_GWPARKINGCOMMAND_BACKREQAPS_CMD = _GWPARKINGCOMMAND_BACKREQAPS.enum_types_by_name['Cmd']
_GWPARKINGCOMMAND_APSSWTREQVR_CMD = _GWPARKINGCOMMAND_APSSWTREQVR.enum_types_by_name['Cmd']
_SENTRYMODECOMMAND_CMDTYPE = _SENTRYMODECOMMAND.enum_types_by_name['CmdType']
Command = _reflection.GeneratedProtocolMessageType('Command', (_message.Message,), {
  'DESCRIPTOR' : _COMMAND,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.Command)
  })
_sym_db.RegisterMessage(Command)

CommandRP = _reflection.GeneratedProtocolMessageType('CommandRP', (_message.Message,), {
  'DESCRIPTOR' : _COMMANDRP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.CommandRP)
  })
_sym_db.RegisterMessage(CommandRP)

UpdateConfig = _reflection.GeneratedProtocolMessageType('UpdateConfig', (_message.Message,), {
  'DESCRIPTOR' : _UPDATECONFIG,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.UpdateConfig)
  })
_sym_db.RegisterMessage(UpdateConfig)

EnableACC = _reflection.GeneratedProtocolMessageType('EnableACC', (_message.Message,), {
  'DESCRIPTOR' : _ENABLEACC,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.EnableACC)
  })
_sym_db.RegisterMessage(EnableACC)

GetACCTTC = _reflection.GeneratedProtocolMessageType('GetACCTTC', (_message.Message,), {
  'DESCRIPTOR' : _GETACCTTC,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.GetACCTTC)
  })
_sym_db.RegisterMessage(GetACCTTC)

GetACCTTCRP = _reflection.GeneratedProtocolMessageType('GetACCTTCRP', (_message.Message,), {
  'DESCRIPTOR' : _GETACCTTCRP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.GetACCTTCRP)
  })
_sym_db.RegisterMessage(GetACCTTCRP)

SetACCTTC = _reflection.GeneratedProtocolMessageType('SetACCTTC', (_message.Message,), {
  'DESCRIPTOR' : _SETACCTTC,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.SetACCTTC)
  })
_sym_db.RegisterMessage(SetACCTTC)

GetACCSpeedLimit = _reflection.GeneratedProtocolMessageType('GetACCSpeedLimit', (_message.Message,), {
  'DESCRIPTOR' : _GETACCSPEEDLIMIT,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.GetACCSpeedLimit)
  })
_sym_db.RegisterMessage(GetACCSpeedLimit)

GetACCSpeedLimitRP = _reflection.GeneratedProtocolMessageType('GetACCSpeedLimitRP', (_message.Message,), {
  'DESCRIPTOR' : _GETACCSPEEDLIMITRP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.GetACCSpeedLimitRP)
  })
_sym_db.RegisterMessage(GetACCSpeedLimitRP)

EnableICA = _reflection.GeneratedProtocolMessageType('EnableICA', (_message.Message,), {
  'DESCRIPTOR' : _ENABLEICA,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.EnableICA)
  })
_sym_db.RegisterMessage(EnableICA)

ChangeLane = _reflection.GeneratedProtocolMessageType('ChangeLane', (_message.Message,), {
  'DESCRIPTOR' : _CHANGELANE,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.ChangeLane)
  })
_sym_db.RegisterMessage(ChangeLane)

ChangeAutoUpgrade = _reflection.GeneratedProtocolMessageType('ChangeAutoUpgrade', (_message.Message,), {
  'DESCRIPTOR' : _CHANGEAUTOUPGRADE,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.ChangeAutoUpgrade)
  })
_sym_db.RegisterMessage(ChangeAutoUpgrade)

EnableNCA = _reflection.GeneratedProtocolMessageType('EnableNCA', (_message.Message,), {
  'DESCRIPTOR' : _ENABLENCA,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.EnableNCA)
  })
_sym_db.RegisterMessage(EnableNCA)

GetPath = _reflection.GeneratedProtocolMessageType('GetPath', (_message.Message,), {
  'DESCRIPTOR' : _GETPATH,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.GetPath)
  })
_sym_db.RegisterMessage(GetPath)

GetPathRP = _reflection.GeneratedProtocolMessageType('GetPathRP', (_message.Message,), {
  'DESCRIPTOR' : _GETPATHRP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.GetPathRP)
  })
_sym_db.RegisterMessage(GetPathRP)

GetCurPath = _reflection.GeneratedProtocolMessageType('GetCurPath', (_message.Message,), {
  'DESCRIPTOR' : _GETCURPATH,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.GetCurPath)
  })
_sym_db.RegisterMessage(GetCurPath)

GetCurPathRP = _reflection.GeneratedProtocolMessageType('GetCurPathRP', (_message.Message,), {
  'DESCRIPTOR' : _GETCURPATHRP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.GetCurPathRP)
  })
_sym_db.RegisterMessage(GetCurPathRP)

GetCurPathId = _reflection.GeneratedProtocolMessageType('GetCurPathId', (_message.Message,), {
  'DESCRIPTOR' : _GETCURPATHID,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.GetCurPathId)
  })
_sym_db.RegisterMessage(GetCurPathId)

GetCurPathIdRP = _reflection.GeneratedProtocolMessageType('GetCurPathIdRP', (_message.Message,), {
  'DESCRIPTOR' : _GETCURPATHIDRP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.GetCurPathIdRP)
  })
_sym_db.RegisterMessage(GetCurPathIdRP)

StartNavigation = _reflection.GeneratedProtocolMessageType('StartNavigation', (_message.Message,), {
  'DESCRIPTOR' : _STARTNAVIGATION,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.StartNavigation)
  })
_sym_db.RegisterMessage(StartNavigation)

CancelNavigation = _reflection.GeneratedProtocolMessageType('CancelNavigation', (_message.Message,), {
  'DESCRIPTOR' : _CANCELNAVIGATION,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.CancelNavigation)
  })
_sym_db.RegisterMessage(CancelNavigation)

EnableLDW = _reflection.GeneratedProtocolMessageType('EnableLDW', (_message.Message,), {
  'DESCRIPTOR' : _ENABLELDW,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.EnableLDW)
  })
_sym_db.RegisterMessage(EnableLDW)

EnableRDP = _reflection.GeneratedProtocolMessageType('EnableRDP', (_message.Message,), {
  'DESCRIPTOR' : _ENABLERDP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.EnableRDP)
  })
_sym_db.RegisterMessage(EnableRDP)

ActiveAPA = _reflection.GeneratedProtocolMessageType('ActiveAPA', (_message.Message,), {
  'DESCRIPTOR' : _ACTIVEAPA,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.ActiveAPA)
  })
_sym_db.RegisterMessage(ActiveAPA)

EnableVPA = _reflection.GeneratedProtocolMessageType('EnableVPA', (_message.Message,), {
  'DESCRIPTOR' : _ENABLEVPA,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.EnableVPA)
  })
_sym_db.RegisterMessage(EnableVPA)

APAParkingSwitchMode = _reflection.GeneratedProtocolMessageType('APAParkingSwitchMode', (_message.Message,), {
  'DESCRIPTOR' : _APAPARKINGSWITCHMODE,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.APAParkingSwitchMode)
  })
_sym_db.RegisterMessage(APAParkingSwitchMode)

ActiveVPA = _reflection.GeneratedProtocolMessageType('ActiveVPA', (_message.Message,), {
  'DESCRIPTOR' : _ACTIVEVPA,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.ActiveVPA)
  })
_sym_db.RegisterMessage(ActiveVPA)

APAParkingUpdateStatus = _reflection.GeneratedProtocolMessageType('APAParkingUpdateStatus', (_message.Message,), {
  'DESCRIPTOR' : _APAPARKINGUPDATESTATUS,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.APAParkingUpdateStatus)
  })
_sym_db.RegisterMessage(APAParkingUpdateStatus)

APAGetRealtimeParkingSpace = _reflection.GeneratedProtocolMessageType('APAGetRealtimeParkingSpace', (_message.Message,), {
  'DESCRIPTOR' : _APAGETREALTIMEPARKINGSPACE,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.APAGetRealtimeParkingSpace)
  })
_sym_db.RegisterMessage(APAGetRealtimeParkingSpace)

APARealtimeParkingSpaceRP = _reflection.GeneratedProtocolMessageType('APARealtimeParkingSpaceRP', (_message.Message,), {
  'DESCRIPTOR' : _APAREALTIMEPARKINGSPACERP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.APARealtimeParkingSpaceRP)
  })
_sym_db.RegisterMessage(APARealtimeParkingSpaceRP)

APAAPPSelectParkingSpace = _reflection.GeneratedProtocolMessageType('APAAPPSelectParkingSpace', (_message.Message,), {
  'DESCRIPTOR' : _APAAPPSELECTPARKINGSPACE,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.APAAPPSelectParkingSpace)
  })
_sym_db.RegisterMessage(APAAPPSelectParkingSpace)

APASuggestOutParking = _reflection.GeneratedProtocolMessageType('APASuggestOutParking', (_message.Message,), {
  'DESCRIPTOR' : _APASUGGESTOUTPARKING,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.APASuggestOutParking)
  })
_sym_db.RegisterMessage(APASuggestOutParking)

APASuggestOutParkingRP = _reflection.GeneratedProtocolMessageType('APASuggestOutParkingRP', (_message.Message,), {
  'DESCRIPTOR' : _APASUGGESTOUTPARKINGRP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.APASuggestOutParkingRP)
  })
_sym_db.RegisterMessage(APASuggestOutParkingRP)

APAActiveParkOut = _reflection.GeneratedProtocolMessageType('APAActiveParkOut', (_message.Message,), {
  'DESCRIPTOR' : _APAACTIVEPARKOUT,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.APAActiveParkOut)
  })
_sym_db.RegisterMessage(APAActiveParkOut)

APASkipCountDownClock = _reflection.GeneratedProtocolMessageType('APASkipCountDownClock', (_message.Message,), {
  'DESCRIPTOR' : _APASKIPCOUNTDOWNCLOCK,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.APASkipCountDownClock)
  })
_sym_db.RegisterMessage(APASkipCountDownClock)

APAEnterCustomParking = _reflection.GeneratedProtocolMessageType('APAEnterCustomParking', (_message.Message,), {
  'DESCRIPTOR' : _APAENTERCUSTOMPARKING,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.APAEnterCustomParking)
  })
_sym_db.RegisterMessage(APAEnterCustomParking)

APALeaveCustomParking = _reflection.GeneratedProtocolMessageType('APALeaveCustomParking', (_message.Message,), {
  'DESCRIPTOR' : _APALEAVECUSTOMPARKING,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.APALeaveCustomParking)
  })
_sym_db.RegisterMessage(APALeaveCustomParking)

APASelectCustomParkingSpace = _reflection.GeneratedProtocolMessageType('APASelectCustomParkingSpace', (_message.Message,), {
  'DESCRIPTOR' : _APASELECTCUSTOMPARKINGSPACE,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.APASelectCustomParkingSpace)
  })
_sym_db.RegisterMessage(APASelectCustomParkingSpace)

VPALearning = _reflection.GeneratedProtocolMessageType('VPALearning', (_message.Message,), {
  'DESCRIPTOR' : _VPALEARNING,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.VPALearning)
  })
_sym_db.RegisterMessage(VPALearning)

VPARoutingSwitchMode = _reflection.GeneratedProtocolMessageType('VPARoutingSwitchMode', (_message.Message,), {
  'DESCRIPTOR' : _VPAROUTINGSWITCHMODE,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.VPARoutingSwitchMode)
  })
_sym_db.RegisterMessage(VPARoutingSwitchMode)

VPARouting = _reflection.GeneratedProtocolMessageType('VPARouting', (_message.Message,), {
  'DESCRIPTOR' : _VPAROUTING,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.VPARouting)
  })
_sym_db.RegisterMessage(VPARouting)

VPARoutingRP = _reflection.GeneratedProtocolMessageType('VPARoutingRP', (_message.Message,), {
  'DESCRIPTOR' : _VPAROUTINGRP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.VPARoutingRP)
  })
_sym_db.RegisterMessage(VPARoutingRP)

VPAGetInfoRQ = _reflection.GeneratedProtocolMessageType('VPAGetInfoRQ', (_message.Message,), {
  'DESCRIPTOR' : _VPAGETINFORQ,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.VPAGetInfoRQ)
  })
_sym_db.RegisterMessage(VPAGetInfoRQ)

VPAGetInfoRP = _reflection.GeneratedProtocolMessageType('VPAGetInfoRP', (_message.Message,), {
  'DESCRIPTOR' : _VPAGETINFORP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.VPAGetInfoRP)
  })
_sym_db.RegisterMessage(VPAGetInfoRP)

VPARoutingGetMap = _reflection.GeneratedProtocolMessageType('VPARoutingGetMap', (_message.Message,), {
  'DESCRIPTOR' : _VPAROUTINGGETMAP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.VPARoutingGetMap)
  })
_sym_db.RegisterMessage(VPARoutingGetMap)

VPARoutingGetMapRP = _reflection.GeneratedProtocolMessageType('VPARoutingGetMapRP', (_message.Message,), {
  'DESCRIPTOR' : _VPAROUTINGGETMAPRP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.VPARoutingGetMapRP)
  })
_sym_db.RegisterMessage(VPARoutingGetMapRP)

VPALearningRP = _reflection.GeneratedProtocolMessageType('VPALearningRP', (_message.Message,), {
  'DESCRIPTOR' : _VPALEARNINGRP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.VPALearningRP)
  })
_sym_db.RegisterMessage(VPALearningRP)

EnableAVM = _reflection.GeneratedProtocolMessageType('EnableAVM', (_message.Message,), {
  'DESCRIPTOR' : _ENABLEAVM,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.EnableAVM)
  })
_sym_db.RegisterMessage(EnableAVM)

EnableAVMRP = _reflection.GeneratedProtocolMessageType('EnableAVMRP', (_message.Message,), {
  'DESCRIPTOR' : _ENABLEAVMRP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.EnableAVMRP)
  })
_sym_db.RegisterMessage(EnableAVMRP)

SwitchAVMView = _reflection.GeneratedProtocolMessageType('SwitchAVMView', (_message.Message,), {
  'DESCRIPTOR' : _SWITCHAVMVIEW,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.SwitchAVMView)
  })
_sym_db.RegisterMessage(SwitchAVMView)

SwitchAVMViewRP = _reflection.GeneratedProtocolMessageType('SwitchAVMViewRP', (_message.Message,), {
  'DESCRIPTOR' : _SWITCHAVMVIEWRP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.SwitchAVMViewRP)
  })
_sym_db.RegisterMessage(SwitchAVMViewRP)

ParkedShoting = _reflection.GeneratedProtocolMessageType('ParkedShoting', (_message.Message,), {
  'DESCRIPTOR' : _PARKEDSHOTING,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.ParkedShoting)
  })
_sym_db.RegisterMessage(ParkedShoting)

ParkedShotingRP = _reflection.GeneratedProtocolMessageType('ParkedShotingRP', (_message.Message,), {
  'DESCRIPTOR' : _PARKEDSHOTINGRP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.ParkedShotingRP)
  })
_sym_db.RegisterMessage(ParkedShotingRP)

GetAVMSettings = _reflection.GeneratedProtocolMessageType('GetAVMSettings', (_message.Message,), {
  'DESCRIPTOR' : _GETAVMSETTINGS,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.GetAVMSettings)
  })
_sym_db.RegisterMessage(GetAVMSettings)

GetAVMSettingsRP = _reflection.GeneratedProtocolMessageType('GetAVMSettingsRP', (_message.Message,), {
  'DESCRIPTOR' : _GETAVMSETTINGSRP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.GetAVMSettingsRP)
  })
_sym_db.RegisterMessage(GetAVMSettingsRP)

PDCUpdate = _reflection.GeneratedProtocolMessageType('PDCUpdate', (_message.Message,), {
  'DESCRIPTOR' : _PDCUPDATE,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.PDCUpdate)
  })
_sym_db.RegisterMessage(PDCUpdate)

EnableHMA = _reflection.GeneratedProtocolMessageType('EnableHMA', (_message.Message,), {
  'DESCRIPTOR' : _ENABLEHMA,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.EnableHMA)
  })
_sym_db.RegisterMessage(EnableHMA)

EnableBSD = _reflection.GeneratedProtocolMessageType('EnableBSD', (_message.Message,), {
  'DESCRIPTOR' : _ENABLEBSD,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.EnableBSD)
  })
_sym_db.RegisterMessage(EnableBSD)

EnableLCA = _reflection.GeneratedProtocolMessageType('EnableLCA', (_message.Message,), {
  'DESCRIPTOR' : _ENABLELCA,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.EnableLCA)
  })
_sym_db.RegisterMessage(EnableLCA)

EnableDOW = _reflection.GeneratedProtocolMessageType('EnableDOW', (_message.Message,), {
  'DESCRIPTOR' : _ENABLEDOW,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.EnableDOW)
  })
_sym_db.RegisterMessage(EnableDOW)

EnableRCTA = _reflection.GeneratedProtocolMessageType('EnableRCTA', (_message.Message,), {
  'DESCRIPTOR' : _ENABLERCTA,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.EnableRCTA)
  })
_sym_db.RegisterMessage(EnableRCTA)

EnableRCW = _reflection.GeneratedProtocolMessageType('EnableRCW', (_message.Message,), {
  'DESCRIPTOR' : _ENABLERCW,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.EnableRCW)
  })
_sym_db.RegisterMessage(EnableRCW)

EnableRCTB = _reflection.GeneratedProtocolMessageType('EnableRCTB', (_message.Message,), {
  'DESCRIPTOR' : _ENABLERCTB,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.EnableRCTB)
  })
_sym_db.RegisterMessage(EnableRCTB)

UpdateApaSetting = _reflection.GeneratedProtocolMessageType('UpdateApaSetting', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEAPASETTING,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.UpdateApaSetting)
  })
_sym_db.RegisterMessage(UpdateApaSetting)

APAParkIn = _reflection.GeneratedProtocolMessageType('APAParkIn', (_message.Message,), {
  'DESCRIPTOR' : _APAPARKIN,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.APAParkIn)
  })
_sym_db.RegisterMessage(APAParkIn)

APAParkOut = _reflection.GeneratedProtocolMessageType('APAParkOut', (_message.Message,), {
  'DESCRIPTOR' : _APAPARKOUT,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.APAParkOut)
  })
_sym_db.RegisterMessage(APAParkOut)

APAParkRP = _reflection.GeneratedProtocolMessageType('APAParkRP', (_message.Message,), {
  'DESCRIPTOR' : _APAPARKRP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.APAParkRP)
  })
_sym_db.RegisterMessage(APAParkRP)

APAGetActiveSource = _reflection.GeneratedProtocolMessageType('APAGetActiveSource', (_message.Message,), {

  'VPAActiveInfo' : _reflection.GeneratedProtocolMessageType('VPAActiveInfo', (_message.Message,), {
    'DESCRIPTOR' : _APAGETACTIVESOURCE_VPAACTIVEINFO,
    '__module__' : 'drapi.command_pb2'
    # @@protoc_insertion_point(class_scope:dr.command.APAGetActiveSource.VPAActiveInfo)
    })
  ,

  'APAActiveInfo' : _reflection.GeneratedProtocolMessageType('APAActiveInfo', (_message.Message,), {
    'DESCRIPTOR' : _APAGETACTIVESOURCE_APAACTIVEINFO,
    '__module__' : 'drapi.command_pb2'
    # @@protoc_insertion_point(class_scope:dr.command.APAGetActiveSource.APAActiveInfo)
    })
  ,
  'DESCRIPTOR' : _APAGETACTIVESOURCE,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.APAGetActiveSource)
  })
_sym_db.RegisterMessage(APAGetActiveSource)
_sym_db.RegisterMessage(APAGetActiveSource.VPAActiveInfo)
_sym_db.RegisterMessage(APAGetActiveSource.APAActiveInfo)

RequestImagePixelToPos = _reflection.GeneratedProtocolMessageType('RequestImagePixelToPos', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTIMAGEPIXELTOPOS,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.RequestImagePixelToPos)
  })
_sym_db.RegisterMessage(RequestImagePixelToPos)

RequestImagePixelToPosRP = _reflection.GeneratedProtocolMessageType('RequestImagePixelToPosRP', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTIMAGEPIXELTOPOSRP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.RequestImagePixelToPosRP)
  })
_sym_db.RegisterMessage(RequestImagePixelToPosRP)

APASelectAVMParkingSpace = _reflection.GeneratedProtocolMessageType('APASelectAVMParkingSpace', (_message.Message,), {
  'DESCRIPTOR' : _APASELECTAVMPARKINGSPACE,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.APASelectAVMParkingSpace)
  })
_sym_db.RegisterMessage(APASelectAVMParkingSpace)

APASelectAVMParkingSpaceRP = _reflection.GeneratedProtocolMessageType('APASelectAVMParkingSpaceRP', (_message.Message,), {
  'DESCRIPTOR' : _APASELECTAVMPARKINGSPACERP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.APASelectAVMParkingSpaceRP)
  })
_sym_db.RegisterMessage(APASelectAVMParkingSpaceRP)

RPACheck = _reflection.GeneratedProtocolMessageType('RPACheck', (_message.Message,), {
  'DESCRIPTOR' : _RPACHECK,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.RPACheck)
  })
_sym_db.RegisterMessage(RPACheck)

RPAParkIn = _reflection.GeneratedProtocolMessageType('RPAParkIn', (_message.Message,), {
  'DESCRIPTOR' : _RPAPARKIN,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.RPAParkIn)
  })
_sym_db.RegisterMessage(RPAParkIn)

RPAParkingUpdate = _reflection.GeneratedProtocolMessageType('RPAParkingUpdate', (_message.Message,), {
  'DESCRIPTOR' : _RPAPARKINGUPDATE,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.RPAParkingUpdate)
  })
_sym_db.RegisterMessage(RPAParkingUpdate)

RPAParkOut = _reflection.GeneratedProtocolMessageType('RPAParkOut', (_message.Message,), {
  'DESCRIPTOR' : _RPAPARKOUT,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.RPAParkOut)
  })
_sym_db.RegisterMessage(RPAParkOut)

RPASuggestOutParkingRP = _reflection.GeneratedProtocolMessageType('RPASuggestOutParkingRP', (_message.Message,), {
  'DESCRIPTOR' : _RPASUGGESTOUTPARKINGRP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.RPASuggestOutParkingRP)
  })
_sym_db.RegisterMessage(RPASuggestOutParkingRP)

RPAStraightInOut = _reflection.GeneratedProtocolMessageType('RPAStraightInOut', (_message.Message,), {
  'DESCRIPTOR' : _RPASTRAIGHTINOUT,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.RPAStraightInOut)
  })
_sym_db.RegisterMessage(RPAStraightInOut)

RPAAppHeartbeat = _reflection.GeneratedProtocolMessageType('RPAAppHeartbeat', (_message.Message,), {
  'DESCRIPTOR' : _RPAAPPHEARTBEAT,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.RPAAppHeartbeat)
  })
_sym_db.RegisterMessage(RPAAppHeartbeat)

RPAInit = _reflection.GeneratedProtocolMessageType('RPAInit', (_message.Message,), {
  'DESCRIPTOR' : _RPAINIT,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.RPAInit)
  })
_sym_db.RegisterMessage(RPAInit)

RPAClose = _reflection.GeneratedProtocolMessageType('RPAClose', (_message.Message,), {
  'DESCRIPTOR' : _RPACLOSE,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.RPAClose)
  })
_sym_db.RegisterMessage(RPAClose)

RPASuggestOutParking = _reflection.GeneratedProtocolMessageType('RPASuggestOutParking', (_message.Message,), {
  'DESCRIPTOR' : _RPASUGGESTOUTPARKING,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.RPASuggestOutParking)
  })
_sym_db.RegisterMessage(RPASuggestOutParking)

EnableAEB = _reflection.GeneratedProtocolMessageType('EnableAEB', (_message.Message,), {
  'DESCRIPTOR' : _ENABLEAEB,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.EnableAEB)
  })
_sym_db.RegisterMessage(EnableAEB)

StartCalibration = _reflection.GeneratedProtocolMessageType('StartCalibration', (_message.Message,), {
  'DESCRIPTOR' : _STARTCALIBRATION,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.StartCalibration)
  })
_sym_db.RegisterMessage(StartCalibration)

StartCalibrationRP = _reflection.GeneratedProtocolMessageType('StartCalibrationRP', (_message.Message,), {
  'DESCRIPTOR' : _STARTCALIBRATIONRP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.StartCalibrationRP)
  })
_sym_db.RegisterMessage(StartCalibrationRP)

EnableELK = _reflection.GeneratedProtocolMessageType('EnableELK', (_message.Message,), {
  'DESCRIPTOR' : _ENABLEELK,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.EnableELK)
  })
_sym_db.RegisterMessage(EnableELK)

LSSMute = _reflection.GeneratedProtocolMessageType('LSSMute', (_message.Message,), {
  'DESCRIPTOR' : _LSSMUTE,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.LSSMute)
  })
_sym_db.RegisterMessage(LSSMute)

TJPCmd = _reflection.GeneratedProtocolMessageType('TJPCmd', (_message.Message,), {
  'DESCRIPTOR' : _TJPCMD,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.TJPCmd)
  })
_sym_db.RegisterMessage(TJPCmd)

SetDefaultMode = _reflection.GeneratedProtocolMessageType('SetDefaultMode', (_message.Message,), {
  'DESCRIPTOR' : _SETDEFAULTMODE,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.SetDefaultMode)
  })
_sym_db.RegisterMessage(SetDefaultMode)

SelPrkgFctnCmd = _reflection.GeneratedProtocolMessageType('SelPrkgFctnCmd', (_message.Message,), {
  'DESCRIPTOR' : _SELPRKGFCTNCMD,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.SelPrkgFctnCmd)
  })
_sym_db.RegisterMessage(SelPrkgFctnCmd)

ContnPrkgReq = _reflection.GeneratedProtocolMessageType('ContnPrkgReq', (_message.Message,), {
  'DESCRIPTOR' : _CONTNPRKGREQ,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.ContnPrkgReq)
  })
_sym_db.RegisterMessage(ContnPrkgReq)

BtnEnaReq = _reflection.GeneratedProtocolMessageType('BtnEnaReq', (_message.Message,), {

  'EnterRoutingReq' : _reflection.GeneratedProtocolMessageType('EnterRoutingReq', (_message.Message,), {
    'DESCRIPTOR' : _BTNENAREQ_ENTERROUTINGREQ,
    '__module__' : 'drapi.command_pb2'
    # @@protoc_insertion_point(class_scope:dr.command.BtnEnaReq.EnterRoutingReq)
    })
  ,

  'SelectTargetSlotReq' : _reflection.GeneratedProtocolMessageType('SelectTargetSlotReq', (_message.Message,), {
    'DESCRIPTOR' : _BTNENAREQ_SELECTTARGETSLOTREQ,
    '__module__' : 'drapi.command_pb2'
    # @@protoc_insertion_point(class_scope:dr.command.BtnEnaReq.SelectTargetSlotReq)
    })
  ,

  'GoToHereReq' : _reflection.GeneratedProtocolMessageType('GoToHereReq', (_message.Message,), {
    'DESCRIPTOR' : _BTNENAREQ_GOTOHEREREQ,
    '__module__' : 'drapi.command_pb2'
    # @@protoc_insertion_point(class_scope:dr.command.BtnEnaReq.GoToHereReq)
    })
  ,

  'UpdateSlotInfoReq' : _reflection.GeneratedProtocolMessageType('UpdateSlotInfoReq', (_message.Message,), {
    'DESCRIPTOR' : _BTNENAREQ_UPDATESLOTINFOREQ,
    '__module__' : 'drapi.command_pb2'
    # @@protoc_insertion_point(class_scope:dr.command.BtnEnaReq.UpdateSlotInfoReq)
    })
  ,

  'UpdateMapInfoReq' : _reflection.GeneratedProtocolMessageType('UpdateMapInfoReq', (_message.Message,), {
    'DESCRIPTOR' : _BTNENAREQ_UPDATEMAPINFOREQ,
    '__module__' : 'drapi.command_pb2'
    # @@protoc_insertion_point(class_scope:dr.command.BtnEnaReq.UpdateMapInfoReq)
    })
  ,

  'GetMapInfoReq' : _reflection.GeneratedProtocolMessageType('GetMapInfoReq', (_message.Message,), {
    'DESCRIPTOR' : _BTNENAREQ_GETMAPINFOREQ,
    '__module__' : 'drapi.command_pb2'
    # @@protoc_insertion_point(class_scope:dr.command.BtnEnaReq.GetMapInfoReq)
    })
  ,
  'DESCRIPTOR' : _BTNENAREQ,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.BtnEnaReq)
  })
_sym_db.RegisterMessage(BtnEnaReq)
_sym_db.RegisterMessage(BtnEnaReq.EnterRoutingReq)
_sym_db.RegisterMessage(BtnEnaReq.SelectTargetSlotReq)
_sym_db.RegisterMessage(BtnEnaReq.GoToHereReq)
_sym_db.RegisterMessage(BtnEnaReq.UpdateSlotInfoReq)
_sym_db.RegisterMessage(BtnEnaReq.UpdateMapInfoReq)
_sym_db.RegisterMessage(BtnEnaReq.GetMapInfoReq)

BtnEnaReqRP = _reflection.GeneratedProtocolMessageType('BtnEnaReqRP', (_message.Message,), {

  'MapInfoRP' : _reflection.GeneratedProtocolMessageType('MapInfoRP', (_message.Message,), {
    'DESCRIPTOR' : _BTNENAREQRP_MAPINFORP,
    '__module__' : 'drapi.command_pb2'
    # @@protoc_insertion_point(class_scope:dr.command.BtnEnaReqRP.MapInfoRP)
    })
  ,

  'ParkingSpaceInfoRP' : _reflection.GeneratedProtocolMessageType('ParkingSpaceInfoRP', (_message.Message,), {
    'DESCRIPTOR' : _BTNENAREQRP_PARKINGSPACEINFORP,
    '__module__' : 'drapi.command_pb2'
    # @@protoc_insertion_point(class_scope:dr.command.BtnEnaReqRP.ParkingSpaceInfoRP)
    })
  ,
  'DESCRIPTOR' : _BTNENAREQRP,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.BtnEnaReqRP)
  })
_sym_db.RegisterMessage(BtnEnaReqRP)
_sym_db.RegisterMessage(BtnEnaReqRP.MapInfoRP)
_sym_db.RegisterMessage(BtnEnaReqRP.ParkingSpaceInfoRP)

GWParkingCommand = _reflection.GeneratedProtocolMessageType('GWParkingCommand', (_message.Message,), {

  'SelPrkgFctnCmd' : _reflection.GeneratedProtocolMessageType('SelPrkgFctnCmd', (_message.Message,), {
    'DESCRIPTOR' : _GWPARKINGCOMMAND_SELPRKGFCTNCMD,
    '__module__' : 'drapi.command_pb2'
    # @@protoc_insertion_point(class_scope:dr.command.GWParkingCommand.SelPrkgFctnCmd)
    })
  ,

  'ContnPrkgReq' : _reflection.GeneratedProtocolMessageType('ContnPrkgReq', (_message.Message,), {
    'DESCRIPTOR' : _GWPARKINGCOMMAND_CONTNPRKGREQ,
    '__module__' : 'drapi.command_pb2'
    # @@protoc_insertion_point(class_scope:dr.command.GWParkingCommand.ContnPrkgReq)
    })
  ,

  'PASWorkCmd' : _reflection.GeneratedProtocolMessageType('PASWorkCmd', (_message.Message,), {
    'DESCRIPTOR' : _GWPARKINGCOMMAND_PASWORKCMD,
    '__module__' : 'drapi.command_pb2'
    # @@protoc_insertion_point(class_scope:dr.command.GWParkingCommand.PASWorkCmd)
    })
  ,

  'SelPrkOutDirReq' : _reflection.GeneratedProtocolMessageType('SelPrkOutDirReq', (_message.Message,), {
    'DESCRIPTOR' : _GWPARKINGCOMMAND_SELPRKOUTDIRREQ,
    '__module__' : 'drapi.command_pb2'
    # @@protoc_insertion_point(class_scope:dr.command.GWParkingCommand.SelPrkOutDirReq)
    })
  ,

  'PrkModreq' : _reflection.GeneratedProtocolMessageType('PrkModreq', (_message.Message,), {
    'DESCRIPTOR' : _GWPARKINGCOMMAND_PRKMODREQ,
    '__module__' : 'drapi.command_pb2'
    # @@protoc_insertion_point(class_scope:dr.command.GWParkingCommand.PrkModreq)
    })
  ,

  'PrkgCtrlModReq' : _reflection.GeneratedProtocolMessageType('PrkgCtrlModReq', (_message.Message,), {
    'DESCRIPTOR' : _GWPARKINGCOMMAND_PRKGCTRLMODREQ,
    '__module__' : 'drapi.command_pb2'
    # @@protoc_insertion_point(class_scope:dr.command.GWParkingCommand.PrkgCtrlModReq)
    })
  ,

  'BackReqAPS' : _reflection.GeneratedProtocolMessageType('BackReqAPS', (_message.Message,), {
    'DESCRIPTOR' : _GWPARKINGCOMMAND_BACKREQAPS,
    '__module__' : 'drapi.command_pb2'
    # @@protoc_insertion_point(class_scope:dr.command.GWParkingCommand.BackReqAPS)
    })
  ,

  'APSSwtReqVR' : _reflection.GeneratedProtocolMessageType('APSSwtReqVR', (_message.Message,), {
    'DESCRIPTOR' : _GWPARKINGCOMMAND_APSSWTREQVR,
    '__module__' : 'drapi.command_pb2'
    # @@protoc_insertion_point(class_scope:dr.command.GWParkingCommand.APSSwtReqVR)
    })
  ,

  'SlotNumVR' : _reflection.GeneratedProtocolMessageType('SlotNumVR', (_message.Message,), {
    'DESCRIPTOR' : _GWPARKINGCOMMAND_SLOTNUMVR,
    '__module__' : 'drapi.command_pb2'
    # @@protoc_insertion_point(class_scope:dr.command.GWParkingCommand.SlotNumVR)
    })
  ,
  'DESCRIPTOR' : _GWPARKINGCOMMAND,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.GWParkingCommand)
  })
_sym_db.RegisterMessage(GWParkingCommand)
_sym_db.RegisterMessage(GWParkingCommand.SelPrkgFctnCmd)
_sym_db.RegisterMessage(GWParkingCommand.ContnPrkgReq)
_sym_db.RegisterMessage(GWParkingCommand.PASWorkCmd)
_sym_db.RegisterMessage(GWParkingCommand.SelPrkOutDirReq)
_sym_db.RegisterMessage(GWParkingCommand.PrkModreq)
_sym_db.RegisterMessage(GWParkingCommand.PrkgCtrlModReq)
_sym_db.RegisterMessage(GWParkingCommand.BackReqAPS)
_sym_db.RegisterMessage(GWParkingCommand.APSSwtReqVR)
_sym_db.RegisterMessage(GWParkingCommand.SlotNumVR)

SmartLPCommand = _reflection.GeneratedProtocolMessageType('SmartLPCommand', (_message.Message,), {
  'DESCRIPTOR' : _SMARTLPCOMMAND,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.SmartLPCommand)
  })
_sym_db.RegisterMessage(SmartLPCommand)

GLParkingCommand = _reflection.GeneratedProtocolMessageType('GLParkingCommand', (_message.Message,), {
  'DESCRIPTOR' : _GLPARKINGCOMMAND,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.GLParkingCommand)
  })
_sym_db.RegisterMessage(GLParkingCommand)

ParkingMapInfo = _reflection.GeneratedProtocolMessageType('ParkingMapInfo', (_message.Message,), {
  'DESCRIPTOR' : _PARKINGMAPINFO,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.ParkingMapInfo)
  })
_sym_db.RegisterMessage(ParkingMapInfo)

SentryModeCommand = _reflection.GeneratedProtocolMessageType('SentryModeCommand', (_message.Message,), {
  'DESCRIPTOR' : _SENTRYMODECOMMAND,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.SentryModeCommand)
  })
_sym_db.RegisterMessage(SentryModeCommand)

SentryModeGetStatistic = _reflection.GeneratedProtocolMessageType('SentryModeGetStatistic', (_message.Message,), {
  'DESCRIPTOR' : _SENTRYMODEGETSTATISTIC,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.SentryModeGetStatistic)
  })
_sym_db.RegisterMessage(SentryModeGetStatistic)

EnableTSR = _reflection.GeneratedProtocolMessageType('EnableTSR', (_message.Message,), {
  'DESCRIPTOR' : _ENABLETSR,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.EnableTSR)
  })
_sym_db.RegisterMessage(EnableTSR)

EnableSLW = _reflection.GeneratedProtocolMessageType('EnableSLW', (_message.Message,), {
  'DESCRIPTOR' : _ENABLESLW,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.EnableSLW)
  })
_sym_db.RegisterMessage(EnableSLW)

DrivingActiveExit = _reflection.GeneratedProtocolMessageType('DrivingActiveExit', (_message.Message,), {
  'DESCRIPTOR' : _DRIVINGACTIVEEXIT,
  '__module__' : 'drapi.command_pb2'
  # @@protoc_insertion_point(class_scope:dr.command.DrivingActiveExit)
  })
_sym_db.RegisterMessage(DrivingActiveExit)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _MODULE._serialized_start=18084
  _MODULE._serialized_end=18492
  _MAPENGINECODE._serialized_start=18495
  _MAPENGINECODE._serialized_end=18691
  _RPATYPE._serialized_start=18693
  _RPATYPE._serialized_end=18770
  _COMMAND._serialized_start=242
  _COMMAND._serialized_end=4538
  _COMMANDRP._serialized_start=4541
  _COMMANDRP._serialized_end=6232
  _UPDATECONFIG._serialized_start=6234
  _UPDATECONFIG._serialized_end=6297
  _ENABLEACC._serialized_start=6299
  _ENABLEACC._serialized_end=6326
  _GETACCTTC._serialized_start=6328
  _GETACCTTC._serialized_end=6339
  _GETACCTTCRP._serialized_start=6341
  _GETACCTTCRP._serialized_end=6400
  _SETACCTTC._serialized_start=6402
  _SETACCTTC._serialized_end=6426
  _GETACCSPEEDLIMIT._serialized_start=6428
  _GETACCSPEEDLIMIT._serialized_end=6446
  _GETACCSPEEDLIMITRP._serialized_start=6448
  _GETACCSPEEDLIMITRP._serialized_end=6489
  _ENABLEICA._serialized_start=6491
  _ENABLEICA._serialized_end=6518
  _CHANGELANE._serialized_start=6520
  _CHANGELANE._serialized_end=6630
  _CHANGELANE_ACTION._serialized_start=6581
  _CHANGELANE_ACTION._serialized_end=6630
  _CHANGEAUTOUPGRADE._serialized_start=6633
  _CHANGEAUTOUPGRADE._serialized_end=6763
  _CHANGEAUTOUPGRADE_ACTION._serialized_start=6708
  _CHANGEAUTOUPGRADE_ACTION._serialized_end=6763
  _ENABLENCA._serialized_start=6765
  _ENABLENCA._serialized_end=6792
  _GETPATH._serialized_start=6795
  _GETPATH._serialized_end=7156
  _GETPATH_ROUTEPLANNINGDATASOURCE._serialized_start=7098
  _GETPATH_ROUTEPLANNINGDATASOURCE._serialized_end=7156
  _GETPATHRP._serialized_start=7158
  _GETPATHRP._serialized_end=7226
  _GETCURPATH._serialized_start=7228
  _GETCURPATH._serialized_end=7240
  _GETCURPATHRP._serialized_start=7242
  _GETCURPATHRP._serialized_end=7294
  _GETCURPATHID._serialized_start=7296
  _GETCURPATHID._serialized_end=7310
  _GETCURPATHIDRP._serialized_start=7312
  _GETCURPATHIDRP._serialized_end=7365
  _STARTNAVIGATION._serialized_start=7368
  _STARTNAVIGATION._serialized_end=7498
  _CANCELNAVIGATION._serialized_start=7500
  _CANCELNAVIGATION._serialized_end=7555
  _ENABLELDW._serialized_start=7557
  _ENABLELDW._serialized_end=7584
  _ENABLERDP._serialized_start=7586
  _ENABLERDP._serialized_end=7613
  _ACTIVEAPA._serialized_start=7615
  _ACTIVEAPA._serialized_end=7642
  _ENABLEVPA._serialized_start=7644
  _ENABLEVPA._serialized_end=7671
  _APAPARKINGSWITCHMODE._serialized_start=7673
  _APAPARKINGSWITCHMODE._serialized_end=7783
  _APAPARKINGSWITCHMODE_MODE._serialized_start=7750
  _APAPARKINGSWITCHMODE_MODE._serialized_end=7783
  _ACTIVEVPA._serialized_start=7785
  _ACTIVEVPA._serialized_end=7812
  _APAPARKINGUPDATESTATUS._serialized_start=7815
  _APAPARKINGUPDATESTATUS._serialized_end=7961
  _APAPARKINGUPDATESTATUS_OPERATIONTYPE._serialized_start=7910
  _APAPARKINGUPDATESTATUS_OPERATIONTYPE._serialized_end=7961
  _APAGETREALTIMEPARKINGSPACE._serialized_start=7963
  _APAGETREALTIMEPARKINGSPACE._serialized_end=7991
  _APAREALTIMEPARKINGSPACERP._serialized_start=7993
  _APAREALTIMEPARKINGSPACERP._serialized_end=8066
  _APAAPPSELECTPARKINGSPACE._serialized_start=8068
  _APAAPPSELECTPARKINGSPACE._serialized_end=8173
  _APASUGGESTOUTPARKING._serialized_start=8175
  _APASUGGESTOUTPARKING._serialized_end=8197
  _APASUGGESTOUTPARKINGRP._serialized_start=8199
  _APASUGGESTOUTPARKINGRP._serialized_end=8298
  _APAACTIVEPARKOUT._serialized_start=8300
  _APAACTIVEPARKOUT._serialized_end=8318
  _APASKIPCOUNTDOWNCLOCK._serialized_start=8320
  _APASKIPCOUNTDOWNCLOCK._serialized_end=8343
  _APAENTERCUSTOMPARKING._serialized_start=8345
  _APAENTERCUSTOMPARKING._serialized_end=8368
  _APALEAVECUSTOMPARKING._serialized_start=8370
  _APALEAVECUSTOMPARKING._serialized_end=8393
  _APASELECTCUSTOMPARKINGSPACE._serialized_start=8395
  _APASELECTCUSTOMPARKINGSPACE._serialized_end=8424
  _VPALEARNING._serialized_start=8427
  _VPALEARNING._serialized_end=8593
  _VPALEARNING_LEARNINGOPTYPE._serialized_start=8506
  _VPALEARNING_LEARNINGOPTYPE._serialized_end=8593
  _VPAROUTINGSWITCHMODE._serialized_start=8596
  _VPAROUTINGSWITCHMODE._serialized_end=8728
  _VPAROUTINGSWITCHMODE_MODE._serialized_start=8673
  _VPAROUTINGSWITCHMODE_MODE._serialized_end=8728
  _VPAROUTING._serialized_start=8731
  _VPAROUTING._serialized_end=8874
  _VPAROUTING_ROUGINTOPTYPE._serialized_start=8807
  _VPAROUTING_ROUGINTOPTYPE._serialized_end=8874
  _VPAROUTINGRP._serialized_start=8876
  _VPAROUTINGRP._serialized_end=8936
  _VPAGETINFORQ._serialized_start=8938
  _VPAGETINFORQ._serialized_end=8952
  _VPAGETINFORP._serialized_start=8954
  _VPAGETINFORP._serialized_end=9015
  _VPAROUTINGGETMAP._serialized_start=9017
  _VPAROUTINGGETMAP._serialized_end=9035
  _VPAROUTINGGETMAPRP._serialized_start=9038
  _VPAROUTINGGETMAPRP._serialized_end=9208
  _VPALEARNINGRP._serialized_start=9210
  _VPALEARNINGRP._serialized_end=9303
  _ENABLEAVM._serialized_start=9305
  _ENABLEAVM._serialized_end=9386
  _ENABLEAVMRP._serialized_start=9388
  _ENABLEAVMRP._serialized_end=9451
  _SWITCHAVMVIEW._serialized_start=9454
  _SWITCHAVMVIEW._serialized_end=9694
  _SWITCHAVMVIEWRP._serialized_start=9696
  _SWITCHAVMVIEWRP._serialized_end=9763
  _PARKEDSHOTING._serialized_start=9765
  _PARKEDSHOTING._serialized_end=9796
  _PARKEDSHOTINGRP._serialized_start=9798
  _PARKEDSHOTINGRP._serialized_end=9865
  _GETAVMSETTINGS._serialized_start=9867
  _GETAVMSETTINGS._serialized_end=9883
  _GETAVMSETTINGSRP._serialized_start=9885
  _GETAVMSETTINGSRP._serialized_end=9953
  _PDCUPDATE._serialized_start=9955
  _PDCUPDATE._serialized_end=9998
  _ENABLEHMA._serialized_start=10000
  _ENABLEHMA._serialized_end=10027
  _ENABLEBSD._serialized_start=10029
  _ENABLEBSD._serialized_end=10056
  _ENABLELCA._serialized_start=10058
  _ENABLELCA._serialized_end=10085
  _ENABLEDOW._serialized_start=10087
  _ENABLEDOW._serialized_end=10114
  _ENABLERCTA._serialized_start=10116
  _ENABLERCTA._serialized_end=10144
  _ENABLERCW._serialized_start=10146
  _ENABLERCW._serialized_end=10173
  _ENABLERCTB._serialized_start=10175
  _ENABLERCTB._serialized_end=10203
  _UPDATEAPASETTING._serialized_start=10205
  _UPDATEAPASETTING._serialized_end=10237
  _APAPARKIN._serialized_start=10239
  _APAPARKIN._serialized_end=10317
  _APAPARKOUT._serialized_start=10319
  _APAPARKOUT._serialized_end=10385
  _APAPARKRP._serialized_start=10387
  _APAPARKRP._serialized_end=10451
  _APAGETACTIVESOURCE._serialized_start=10454
  _APAGETACTIVESOURCE._serialized_end=10667
  _APAGETACTIVESOURCE_VPAACTIVEINFO._serialized_start=10608
  _APAGETACTIVESOURCE_VPAACTIVEINFO._serialized_end=10640
  _APAGETACTIVESOURCE_APAACTIVEINFO._serialized_start=10642
  _APAGETACTIVESOURCE_APAACTIVEINFO._serialized_end=10657
  _REQUESTIMAGEPIXELTOPOS._serialized_start=10669
  _REQUESTIMAGEPIXELTOPOS._serialized_end=10755
  _REQUESTIMAGEPIXELTOPOSRP._serialized_start=10757
  _REQUESTIMAGEPIXELTOPOSRP._serialized_end=10837
  _APASELECTAVMPARKINGSPACE._serialized_start=10839
  _APASELECTAVMPARKINGSPACE._serialized_end=10898
  _APASELECTAVMPARKINGSPACERP._serialized_start=10900
  _APASELECTAVMPARKINGSPACERP._serialized_end=10974
  _RPACHECK._serialized_start=10976
  _RPACHECK._serialized_end=10986
  _RPAPARKIN._serialized_start=10988
  _RPAPARKIN._serialized_end=10999
  _RPAPARKINGUPDATE._serialized_start=11002
  _RPAPARKINGUPDATE._serialized_end=11157
  _RPAPARKINGUPDATE_OPERATIONTYPE._serialized_start=11085
  _RPAPARKINGUPDATE_OPERATIONTYPE._serialized_end=11157
  _RPAPARKOUT._serialized_start=11159
  _RPAPARKOUT._serialized_end=11225
  _RPASUGGESTOUTPARKINGRP._serialized_start=11227
  _RPASUGGESTOUTPARKINGRP._serialized_end=11326
  _RPASTRAIGHTINOUT._serialized_start=11329
  _RPASTRAIGHTINOUT._serialized_end=11630
  _RPASTRAIGHTINOUT_DIRECTION._serialized_start=11471
  _RPASTRAIGHTINOUT_DIRECTION._serialized_end=11542
  _RPASTRAIGHTINOUT_OPERATIONTYPE._serialized_start=11544
  _RPASTRAIGHTINOUT_OPERATIONTYPE._serialized_end=11630
  _RPAAPPHEARTBEAT._serialized_start=11632
  _RPAAPPHEARTBEAT._serialized_end=11684
  _RPAINIT._serialized_start=11686
  _RPAINIT._serialized_end=11730
  _RPACLOSE._serialized_start=11732
  _RPACLOSE._serialized_end=11742
  _RPASUGGESTOUTPARKING._serialized_start=11744
  _RPASUGGESTOUTPARKING._serialized_end=11766
  _ENABLEAEB._serialized_start=11768
  _ENABLEAEB._serialized_end=11795
  _STARTCALIBRATION._serialized_start=11798
  _STARTCALIBRATION._serialized_end=12090
  _STARTCALIBRATION_OPERATIONTYPE._serialized_start=12041
  _STARTCALIBRATION_OPERATIONTYPE._serialized_end=12090
  _STARTCALIBRATIONRP._serialized_start=12092
  _STARTCALIBRATIONRP._serialized_end=12112
  _ENABLEELK._serialized_start=12114
  _ENABLEELK._serialized_end=12141
  _LSSMUTE._serialized_start=12143
  _LSSMUTE._serialized_end=12152
  _TJPCMD._serialized_start=12155
  _TJPCMD._serialized_end=12401
  _TJPCMD_CMDTYPE._serialized_start=12208
  _TJPCMD_CMDTYPE._serialized_end=12401
  _SETDEFAULTMODE._serialized_start=12403
  _SETDEFAULTMODE._serialized_end=12497
  _SELPRKGFCTNCMD._serialized_start=12500
  _SELPRKGFCTNCMD._serialized_end=12663
  _SELPRKGFCTNCMD_CMDTYPE._serialized_start=12568
  _SELPRKGFCTNCMD_CMDTYPE._serialized_end=12663
  _CONTNPRKGREQ._serialized_start=12666
  _CONTNPRKGREQ._serialized_end=12809
  _CONTNPRKGREQ_CMDTYPE._serialized_start=12730
  _CONTNPRKGREQ_CMDTYPE._serialized_end=12809
  _BTNENAREQ._serialized_start=12812
  _BTNENAREQ._serialized_end=14163
  _BTNENAREQ_ENTERROUTINGREQ._serialized_start=13285
  _BTNENAREQ_ENTERROUTINGREQ._serialized_end=13302
  _BTNENAREQ_SELECTTARGETSLOTREQ._serialized_start=13304
  _BTNENAREQ_SELECTTARGETSLOTREQ._serialized_end=13358
  _BTNENAREQ_GOTOHEREREQ._serialized_start=13360
  _BTNENAREQ_GOTOHEREREQ._serialized_end=13406
  _BTNENAREQ_UPDATESLOTINFOREQ._serialized_start=13409
  _BTNENAREQ_UPDATESLOTINFOREQ._serialized_end=13611
  _BTNENAREQ_UPDATEMAPINFOREQ._serialized_start=13614
  _BTNENAREQ_UPDATEMAPINFOREQ._serialized_end=13770
  _BTNENAREQ_GETMAPINFOREQ._serialized_start=13772
  _BTNENAREQ_GETMAPINFOREQ._serialized_end=13836
  _BTNENAREQ_REQCMD._serialized_start=13839
  _BTNENAREQ_REQCMD._serialized_end=14152
  _BTNENAREQRP._serialized_start=14166
  _BTNENAREQRP._serialized_end=14548
  _BTNENAREQRP_MAPINFORP._serialized_start=14363
  _BTNENAREQRP_MAPINFORP._serialized_end=14443
  _BTNENAREQRP_PARKINGSPACEINFORP._serialized_start=14445
  _BTNENAREQRP_PARKINGSPACEINFORP._serialized_end=14548
  _GWPARKINGCOMMAND._serialized_start=14551
  _GWPARKINGCOMMAND._serialized_end=16952
  _GWPARKINGCOMMAND_SELPRKGFCTNCMD._serialized_start=15190
  _GWPARKINGCOMMAND_SELPRKGFCTNCMD._serialized_end=15454
  _GWPARKINGCOMMAND_SELPRKGFCTNCMD_CMD._serialized_start=15271
  _GWPARKINGCOMMAND_SELPRKGFCTNCMD_CMD._serialized_end=15454
  _GWPARKINGCOMMAND_CONTNPRKGREQ._serialized_start=15457
  _GWPARKINGCOMMAND_CONTNPRKGREQ._serialized_end=15713
  _GWPARKINGCOMMAND_CONTNPRKGREQ_CMD._serialized_start=15597
  _GWPARKINGCOMMAND_CONTNPRKGREQ_CMD._serialized_end=15680
  _GWPARKINGCOMMAND_CONTNPRKGREQ_VALID._serialized_start=15682
  _GWPARKINGCOMMAND_CONTNPRKGREQ_VALID._serialized_end=15713
  _GWPARKINGCOMMAND_PASWORKCMD._serialized_start=15715
  _GWPARKINGCOMMAND_PASWORKCMD._serialized_end=15809
  _GWPARKINGCOMMAND_PASWORKCMD_CMD._serialized_start=15787
  _GWPARKINGCOMMAND_PASWORKCMD_CMD._serialized_end=15809
  _GWPARKINGCOMMAND_SELPRKOUTDIRREQ._serialized_start=15812
  _GWPARKINGCOMMAND_SELPRKOUTDIRREQ._serialized_end=16223
  _GWPARKINGCOMMAND_SELPRKOUTDIRREQ_CMD._serialized_start=15895
  _GWPARKINGCOMMAND_SELPRKOUTDIRREQ_CMD._serialized_end=16223
  _GWPARKINGCOMMAND_PRKMODREQ._serialized_start=16226
  _GWPARKINGCOMMAND_PRKMODREQ._serialized_end=16394
  _GWPARKINGCOMMAND_PRKMODREQ_CMD._serialized_start=16296
  _GWPARKINGCOMMAND_PRKMODREQ_CMD._serialized_end=16394
  _GWPARKINGCOMMAND_PRKGCTRLMODREQ._serialized_start=16397
  _GWPARKINGCOMMAND_PRKGCTRLMODREQ._serialized_end=16650
  _GWPARKINGCOMMAND_PRKGCTRLMODREQ_CMD._serialized_start=16543
  _GWPARKINGCOMMAND_PRKGCTRLMODREQ_CMD._serialized_end=16617
  _GWPARKINGCOMMAND_PRKGCTRLMODREQ_VALID._serialized_start=15682
  _GWPARKINGCOMMAND_PRKGCTRLMODREQ_VALID._serialized_end=15713
  _GWPARKINGCOMMAND_BACKREQAPS._serialized_start=16652
  _GWPARKINGCOMMAND_BACKREQAPS._serialized_end=16758
  _GWPARKINGCOMMAND_BACKREQAPS_CMD._serialized_start=16724
  _GWPARKINGCOMMAND_BACKREQAPS_CMD._serialized_end=16758
  _GWPARKINGCOMMAND_APSSWTREQVR._serialized_start=16760
  _GWPARKINGCOMMAND_APSSWTREQVR._serialized_end=16885
  _GWPARKINGCOMMAND_APSSWTREQVR_CMD._serialized_start=16834
  _GWPARKINGCOMMAND_APSSWTREQVR_CMD._serialized_end=16885
  _GWPARKINGCOMMAND_SLOTNUMVR._serialized_start=16887
  _GWPARKINGCOMMAND_SLOTNUMVR._serialized_end=16944
  _SMARTLPCOMMAND._serialized_start=16955
  _SMARTLPCOMMAND._serialized_end=17397
  _GLPARKINGCOMMAND._serialized_start=17400
  _GLPARKINGCOMMAND._serialized_end=17706
  _PARKINGMAPINFO._serialized_start=17708
  _PARKINGMAPINFO._serialized_end=17736
  _SENTRYMODECOMMAND._serialized_start=17739
  _SENTRYMODECOMMAND._serialized_end=17882
  _SENTRYMODECOMMAND_CMDTYPE._serialized_start=17813
  _SENTRYMODECOMMAND_CMDTYPE._serialized_end=17882
  _SENTRYMODEGETSTATISTIC._serialized_start=17884
  _SENTRYMODEGETSTATISTIC._serialized_end=17908
  _ENABLETSR._serialized_start=17910
  _ENABLETSR._serialized_end=17937
  _ENABLESLW._serialized_start=17939
  _ENABLESLW._serialized_end=17966
  _DRIVINGACTIVEEXIT._serialized_start=17968
  _DRIVINGACTIVEEXIT._serialized_end=18081
# @@protoc_insertion_point(module_scope)
