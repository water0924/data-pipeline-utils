# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: routing/navinfo_routing.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from proto.common import geometry_pb2 as common_dot_geometry__pb2
from proto.map import routing_pb2 as map_dot_routing__pb2
from proto.map import sd_map_pb2 as map_dot_sd__map__pb2
from proto.graph_match import graph_matching_pb2 as graph__match_dot_graph__matching__pb2
from proto.routing import local_routing_pb2 as routing_dot_local__routing__pb2
from proto.routing import cloud_task_pb2 as routing_dot_cloud__task__pb2
from proto.odd import odd_pb2 as odd_dot_odd__pb2
from proto.map import map_common_pb2 as map_dot_map__common__pb2
from proto.map import common_type_pb2 as map_dot_common__type__pb2
from proto.routing import collection_trigger_rule_pb2 as routing_dot_collection__trigger__rule__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1drouting/navinfo_routing.proto\x12\x11\x64\x65\x65proute.navinfo\x1a\x15\x63ommon/geometry.proto\x1a\x11map/routing.proto\x1a\x10map/sd_map.proto\x1a graph_match/graph_matching.proto\x1a\x1brouting/local_routing.proto\x1a\x18routing/cloud_task.proto\x1a\rodd/odd.proto\x1a\x14map/map_common.proto\x1a\x15map/common_type.proto\x1a%routing/collection_trigger_rule.proto\"\xf0\x02\n\x11SDRoutingResponse\x12>\n\x13route_planning_type\x18\xe8\x07 \x01(\x0e\x32 .deeproute.map.RoutePlanningType\x12(\n\x04\x63ode\x18\x01 \x01(\x0e\x32\x1a.deeproute.map.RoutingCode\x12)\n\x06result\x18\x02 \x03(\x0b\x32\x19.deeproute.navinfo.Result\x12\x12\n\nrequest_id\x18\x03 \x01(\t\x12\x13\n\x0bresponse_id\x18\x08 \x01(\x05\x12.\n\x07request\x18\x04 \x01(\x0b\x32\x1d.deeproute.map.RoutingRequest\x12\x1b\n\x13segmented_route_num\x18\x05 \x01(\x05\x12\x16\n\x0esd_map_version\x18\x06 \x01(\t\x12\x10\n\x08route_id\x18\x07 \x01(\x04\x12\x10\n\x08trace_id\x18\t \x01(\t\x12\x14\n\x0clocal_map_id\x18\n \x01(\t\"%\n\x08NaviHead\x12\x0c\n\x04\x63ode\x18\x01 \x01(\x05\x12\x0b\n\x03ver\x18\x02 \x01(\t\"\x9d\x01\n\x08LaneInfo\x12\x0b\n\x03\x61rr\x18\x01 \x01(\x05\x12\n\n\x02la\x18\x02 \x01(\x05\x12\n\n\x02ra\x18\x03 \x01(\x05\x12\n\n\x02\x62m\x18\x04 \x01(\x05\x12\x0e\n\x06\x62us_bm\x18\x05 \x01(\x05\x12\n\n\x02ln\x18\x06 \x01(\x05\x12\x14\n\x0cout_link_ids\x18\x07 \x03(\x04\x12.\n\nlane_conds\x18\x08 \x03(\x0b\x32\x1a.deeproute.sd_map.LaneCond\"\xa1\x04\n\x08LinkAttr\x12\x12\n\ndr_link_id\x18\x13 \x01(\x04\x12\r\n\x05ni_id\x18\x06 \x01(\t\x12\x0b\n\x03\x64is\x18\x07 \x01(\x05\x12\x15\n\rtraffic_light\x18\x08 \x01(\x05\x12\x0b\n\x03spl\x18\t \x01(\x05\x12\x0e\n\x06tunnel\x18\n \x01(\x05\x12\x10\n\x08lane_num\x18\x0b \x01(\x05\x12*\n\x05lanes\x18\x0c \x03(\x0b\x32\x1b.deeproute.navinfo.LaneInfo\x12\x10\n\x08\x65levated\x18\r \x01(\x08\x12\x0e\n\x06sh_pos\x18\x01 \x01(\t\x12\x12\n\nf_lane_num\x18\x02 \x01(\x05\x12\n\n\x02pr\x18\x03 \x01(\x05\x12\r\n\x05usage\x18\x04 \x01(\x05\x12\x30\n\x0cshape_points\x18\x05 \x03(\x0b\x32\x1a.deeproute.common.PointLLH\x12\x32\n\x0fshape_points_2d\x18\x0e \x03(\x0b\x32\x19.deeproute.common.Point2D\x12\x34\n\x08\x66ormways\x18\x0f \x03(\x0e\x32\".deeproute.sd_map.LinkData.FormWay\x12.\n\nlane_attrs\x18\x10 \x03(\x0b\x32\x1a.deeproute.sd_map.LaneAttr\x12\x36\n\x0elane_info_data\x18\x12 \x03(\x0b\x32\x1e.deeproute.sd_map.LaneInfoData\x12\x1e\n\x16\x65xperience_speed_limit\x18\x11 \x01(\r\"r\n\x04Link\x12.\n\tlink_attr\x18\x01 \x01(\x0b\x32\x1b.deeproute.navinfo.LinkAttr\x12\x0b\n\x03psn\x18\x02 \x01(\x05\x12-\n\x08ps_infos\x18\x03 \x03(\x0b\x32\x1b.deeproute.navinfo.LinkAttr\"\x83\x02\n\rRoadSceneInfo\x12\x36\n\x11static_scene_type\x18\x01 \x01(\x0e\x32\x1b.deeproute.map.CrossingType\x12.\n\rcrossing_turn\x18\x02 \x01(\x0e\x32\x17.deeproute.map.LaneTurn\x12\x39\n\x0froad_scene_type\x18\x03 \x01(\x0e\x32 .deeproute.navinfo.RoadSceneType\x12\x14\n\x0cis_way_point\x18\x04 \x01(\x08\x12\x39\n\x18traffic_lights_turn_type\x18\x05 \x01(\x0e\x32\x17.deeproute.map.LaneTurn\"]\n\x15TrafficLightSceneInfo\x12+\n\nscene_turn\x18\x01 \x01(\x0e\x32\x17.deeproute.map.LaneTurn\x12\x17\n\x0fout_link_offset\x18\x02 \x01(\r\"\xe1\x03\n\x0eSpeedLimitInfo\x12\x15\n\rspd_limit_dis\x18\x01 \x03(\x05\x12\x15\n\rspd_limit_spl\x18\x02 \x03(\x05\x12T\n\x0espd_limit_type\x18\x03 \x03(\x0e\x32<.deeproute.routing.NavigationInfoForVisualize.SpeedLimitType\x12\x11\n\tspl_ratio\x18\x04 \x01(\x02\x12\x0f\n\x07min_spl\x18\x05 \x01(\x05\x12\x30\n\nscene_type\x18\x06 \x01(\x0e\x32\x1c.deeproute.navinfo.SceneType\x12\x18\n\x10is_map_spl_limit\x18\x07 \x01(\x08\x12\x15\n\rexp_spd_limit\x18\x08 \x01(\x05\x12\x62\n\x18spd_static_strategy_type\x18\t \x03(\x0e\x32@.deeproute.routing.NavigationInfoForVisualize.StaticStrategyType\x12`\n\x17spd_scene_strategy_type\x18\n \x03(\x0e\x32?.deeproute.routing.NavigationInfoForVisualize.SceneStrategyType\"\xce\x01\n\x11StaticRoutingInfo\x12\x1b\n\x13priority_lane_index\x18\x01 \x01(\x05\x12\x0b\n\x03\x63rs\x18\x02 \x03(\x05\x12\x43\n\x19local_routing_scene_infos\x18\x03 \x03(\x0b\x32 .deeproute.navinfo.RoadSceneInfo\x12J\n\x18traffic_light_scene_info\x18\x04 \x01(\x0b\x32(.deeproute.navinfo.TrafficLightSceneInfo\"\xa0\x02\n\x15\x44\x61taCollectSingleTask\x12\x0f\n\x07task_id\x18\x01 \x01(\x03\x12\x46\n\x13image_collect_event\x18\n \x01(\x0b\x32\'.deeproute.cloud_task.ImageCollectEventH\x00\x12N\n\x17nnfeature_collect_event\x18\x0b \x01(\x0b\x32+.deeproute.cloud_task.NNFeatureCollectEventH\x00\x12N\n\x12\x64\x61ta_trigger_event\x18\x0c \x01(\x0b\x32\x30.deeproute.cloud_task.DataCollectionTriggerEventH\x00\x42\x0e\n\x0c\x43ollectEvent\"J\n\x0f\x44\x61taCollectTask\x12\x37\n\x05tasks\x18\x01 \x03(\x0b\x32(.deeproute.navinfo.DataCollectSingleTask\"\xd4\x02\n\nSegmAction\x12.\n\x0bmain_action\x18\x01 \x01(\x0e\x32\x19.deeproute.map.MainAction\x12\x38\n\x10\x61ssistant_action\x18\x02 \x01(\x0e\x32\x1e.deeproute.map.AssistantAction\x12\x30\n\x0clane_actions\x18\x03 \x01(\x0b\x32\x1a.deeproute.map.LaneActions\x12\x33\n\x10step_main_action\x18\x04 \x01(\x0e\x32\x19.deeproute.map.MainAction\x12=\n\x15step_assistant_action\x18\x05 \x01(\x0e\x32\x1e.deeproute.map.AssistantAction\x12\x36\n\x12multi_lane_actions\x18\x06 \x03(\x0b\x32\x1a.deeproute.map.LaneActions\"\xb2\r\n\x07Segment\x12=\n\x11\x64\x61ta_collect_task\x18\x65 \x01(\x0b\x32\".deeproute.navinfo.DataCollectTask\x12\x14\n\x0cvirtual_link\x18\x64 \x01(\x08\x12\x14\n\x0cis_odd_limit\x18! \x01(\x08\x12\x34\n\x0fodd_limit_types\x18( \x03(\x0e\x32\x1b.deeproute.odd.OddLimitType\x12\x32\n\x0eodd_type_infos\x18) \x03(\x0b\x32\x1a.deeproute.odd.OddTypeInfo\x12\x12\n\ndr_link_id\x18% \x01(\x04\x12\x0b\n\x03\x64is\x18\x01 \x01(\x05\x12\x0f\n\x07\x61\x62s_dis\x18\x02 \x01(\x05\x12\r\n\x05ni_id\x18\x03 \x01(\t\x12\x0e\n\x06sh_pos\x18\x04 \x01(\t\x12\x15\n\rtraffic_light\x18\x05 \x01(\x05\x12\x0b\n\x03spl\x18\x06 \x01(\x05\x12\x12\n\nf_lane_num\x18\x07 \x01(\x05\x12\x14\n\x0clane_num_sum\x18\x34 \x01(\r\x12\x10\n\x08\x63rossing\x18\x08 \x01(\x05\x12\n\n\x02\x62m\x18\t \x01(\x05\x12\x0b\n\x03\x61rr\x18\n \x01(\x05\x12\x30\n\x0cshape_points\x18\x0b \x03(\x0b\x32\x1a.deeproute.common.PointLLH\x12\x32\n\x0fshape_points_2d\x18\x1b \x03(\x0b\x32\x19.deeproute.common.Point2D\x12\n\n\x02pr\x18\x0c \x01(\x05\x12\x0e\n\x06tunnel\x18\r \x01(\x05\x12\x10\n\x08lane_num\x18\x0e \x01(\x05\x12*\n\x05lanes\x18\x0f \x03(\x0b\x32\x1b.deeproute.navinfo.LaneInfo\x12\r\n\x05usage\x18\x10 \x01(\x05\x12\x34\n\x08\x66ormways\x18\x1d \x03(\x0e\x32\".deeproute.sd_map.LinkData.FormWay\x12.\n\nlane_attrs\x18\x1e \x03(\x0b\x32\x1a.deeproute.sd_map.LaneAttr\x12\x0e\n\x06tmc_lv\x18\x14 \x01(\x05\x12\x0c\n\x04r_bm\x18\x15 \x01(\x05\x12\x0c\n\x04v_bm\x18\x16 \x01(\x05\x12\x0e\n\x06\x63_b_bm\x18\x17 \x01(\x05\x12.\n\rin_link_infos\x18\x11 \x03(\x0b\x32\x17.deeproute.navinfo.Link\x12/\n\x0eout_link_infos\x18\x12 \x03(\x0b\x32\x17.deeproute.navinfo.Link\x12\x10\n\x08\x65levated\x18\x13 \x01(\x08\x12\x14\n\x0ctoll_station\x18\x1a \x01(\x05\x12\x45\n\x0f\x61map_link_range\x18\x1c \x03(\x0b\x32(.deeproute.graph_match.AmapLinkMatchInfoB\x02\x18\x01\x12<\n\namap_range\x18\x1f \x01(\x0b\x32(.deeproute.graph_match.AmapLinkMatchInfo\x12\x1e\n\x16\x65xperience_speed_limit\x18  \x01(\r\x12\x36\n\x0elane_info_data\x18# \x03(\x0b\x32\x1e.deeproute.sd_map.LaneInfoData\x12\x12\n\nadmin_code\x18\" \x01(\x05\x12\x19\n\x11\x65xact_speed_limit\x18$ \x01(\r\x12)\n\x07\x63\x61meras\x18& \x03(\x0b\x32\x18.deeproute.sd_map.Camera\x12\x39\n\x0espd_limit_info\x18\' \x01(\x0b\x32!.deeproute.navinfo.SpeedLimitInfo\x12\x41\n\x13static_routing_info\x18* \x01(\x0b\x32$.deeproute.navinfo.StaticRoutingInfo\x12\x32\n\x0bsegm_action\x18\x32 \x01(\x0b\x32\x1d.deeproute.navinfo.SegmAction\x12\x43\n\x19local_routing_scene_infos\x18\x33 \x03(\x0b\x32 .deeproute.navinfo.RoadSceneInfo\x12>\n\x15long_solid_line_infos\x18+ \x03(\x0b\x32\x1f.deeproute.sd_map.LongSolidLine\x12<\n\x11toll_station_info\x18\x35 \x01(\x0b\x32!.deeproute.sd_map.TollStationInfo\x12\x33\n\x0cspeed_source\x18\x36 \x01(\x0b\x32\x1d.deeproute.sd_map.SpeedSource\x12\x12\n\nis_overlap\x18\x37 \x01(\x08\x12\x19\n\x11is_extend_overlap\x18\x38 \x01(\x08\"\xe4\x01\n\x10SpeedLimitConfig\x12\x19\n\x11\x65nable_server_spl\x18\x01 \x01(\x08\x12\x1f\n\x17\x65nable_highway_amap_spl\x18\x02 \x01(\x08\x12\x1f\n\x17\x65nable_express_amap_spl\x18\x03 \x01(\x08\x12&\n\x1e\x65nable_highway_amap_camera_spl\x18\x04 \x01(\x08\x12&\n\x1e\x65nable_express_amap_camera_spl\x18\x05 \x01(\x08\x12#\n\x1b\x65nable_city_amap_camera_spl\x18\x06 \x01(\x08\"\xae\x05\n\x05Route\x12\x14\n\x0c\x61map_path_id\x18\x64 \x01(\x05\x12\x17\n\x0f\x61map_path_id_64\x18\x65 \x01(\x04\x12.\n\tnavi_head\x18\x01 \x01(\x0b\x32\x1b.deeproute.navinfo.NaviHead\x12\x0b\n\x03\x64is\x18\x02 \x01(\x05\x12\x1a\n\x12remaining_distance\x18\x1d \x01(\x05\x12\x0b\n\x03\x64ur\x18\x03 \x01(\x05\x12(\n\x04segm\x18\x04 \x03(\x0b\x32\x1a.deeproute.navinfo.Segment\x12<\n\x0bnid_to_segm\x18\x05 \x03(\x0b\x32\'.deeproute.navinfo.Route.NidToSegmEntry\x12+\n\x08sd_links\x18\x06 \x01(\x0b\x32\x19.deeproute.sd_map.SdLinks\x12\x42\n\x10mismatch_indexes\x18\x07 \x03(\x0b\x32(.deeproute.graph_match.MismatchSegmIndex\x12?\n\x12speed_limit_config\x18\n \x01(\x0b\x32#.deeproute.navinfo.SpeedLimitConfig\x12\\\n\x1alocal_routing_cloud_config\x18\x0b \x01(\x0b\x32\x38.deeproute.sd_map.SDMapVersionOnboard.LocalRoutingConfig\x12J\n\x18mismatch_amap_link_range\x18\x1c \x03(\x0b\x32(.deeproute.graph_match.AmapLinkMatchInfo\x1aL\n\x0eNidToSegmEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12)\n\x05value\x18\x02 \x01(\x0b\x32\x1a.deeproute.navinfo.Segment:\x02\x38\x01\"1\n\x06Result\x12\'\n\x05route\x18\x01 \x01(\x0b\x32\x18.deeproute.navinfo.Route\"c\n\x0bTriggerList\x12\x12\n\ndr_link_id\x18\x01 \x01(\x04\x12@\n\x0ctrigger_list\x18\x02 \x03(\x0b\x32*.deeproute.collection_trigger_rule.Trigger*\x83\x02\n\tSceneType\x12\x0b\n\x07INVALID\x10\x00\x12\x17\n\x13RAMP_EXIT_SPD_LIMIT\x10\x01\x12\x13\n\x0fMERGE_SPD_LIMIT\x10\x02\x12\x1a\n\x16HIGHWAY_EXIT_SPD_LIMIT\x10\x03\x12\x1a\n\x16\x45XPRESS_EXIT_SPD_LIMIT\x10\x04\x12\x12\n\x0eJUNC_SPD_LIMIT\x10\x05\x12!\n\x1dMAIN_AUXILIARY_ROAD_SPD_LIMIT\x10\x06\x12\x12\n\x0eTOLL_SPD_LIMIT\x10\x07\x12\x1a\n\x16\x45NTER_TUNNEL_SPD_LIMIT\x10\x08\x12\x1c\n\x18TRAFFIC_CAMERA_SPD_LIMIT\x10\t*F\n\rRoadSceneType\x12\x16\n\x12ROAD_SCENE_UNKNOWN\x10\x00\x12\x1d\n\x19ROAD_SCENE_NON_Y_CROSSING\x10\x01')

_SCENETYPE = DESCRIPTOR.enum_types_by_name['SceneType']
SceneType = enum_type_wrapper.EnumTypeWrapper(_SCENETYPE)
_ROADSCENETYPE = DESCRIPTOR.enum_types_by_name['RoadSceneType']
RoadSceneType = enum_type_wrapper.EnumTypeWrapper(_ROADSCENETYPE)
INVALID = 0
RAMP_EXIT_SPD_LIMIT = 1
MERGE_SPD_LIMIT = 2
HIGHWAY_EXIT_SPD_LIMIT = 3
EXPRESS_EXIT_SPD_LIMIT = 4
JUNC_SPD_LIMIT = 5
MAIN_AUXILIARY_ROAD_SPD_LIMIT = 6
TOLL_SPD_LIMIT = 7
ENTER_TUNNEL_SPD_LIMIT = 8
TRAFFIC_CAMERA_SPD_LIMIT = 9
ROAD_SCENE_UNKNOWN = 0
ROAD_SCENE_NON_Y_CROSSING = 1


_SDROUTINGRESPONSE = DESCRIPTOR.message_types_by_name['SDRoutingResponse']
_NAVIHEAD = DESCRIPTOR.message_types_by_name['NaviHead']
_LANEINFO = DESCRIPTOR.message_types_by_name['LaneInfo']
_LINKATTR = DESCRIPTOR.message_types_by_name['LinkAttr']
_LINK = DESCRIPTOR.message_types_by_name['Link']
_ROADSCENEINFO = DESCRIPTOR.message_types_by_name['RoadSceneInfo']
_TRAFFICLIGHTSCENEINFO = DESCRIPTOR.message_types_by_name['TrafficLightSceneInfo']
_SPEEDLIMITINFO = DESCRIPTOR.message_types_by_name['SpeedLimitInfo']
_STATICROUTINGINFO = DESCRIPTOR.message_types_by_name['StaticRoutingInfo']
_DATACOLLECTSINGLETASK = DESCRIPTOR.message_types_by_name['DataCollectSingleTask']
_DATACOLLECTTASK = DESCRIPTOR.message_types_by_name['DataCollectTask']
_SEGMACTION = DESCRIPTOR.message_types_by_name['SegmAction']
_SEGMENT = DESCRIPTOR.message_types_by_name['Segment']
_SPEEDLIMITCONFIG = DESCRIPTOR.message_types_by_name['SpeedLimitConfig']
_ROUTE = DESCRIPTOR.message_types_by_name['Route']
_ROUTE_NIDTOSEGMENTRY = _ROUTE.nested_types_by_name['NidToSegmEntry']
_RESULT = DESCRIPTOR.message_types_by_name['Result']
_TRIGGERLIST = DESCRIPTOR.message_types_by_name['TriggerList']
SDRoutingResponse = _reflection.GeneratedProtocolMessageType('SDRoutingResponse', (_message.Message,), {
  'DESCRIPTOR' : _SDROUTINGRESPONSE,
  '__module__' : 'routing.navinfo_routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.navinfo.SDRoutingResponse)
  })
_sym_db.RegisterMessage(SDRoutingResponse)

NaviHead = _reflection.GeneratedProtocolMessageType('NaviHead', (_message.Message,), {
  'DESCRIPTOR' : _NAVIHEAD,
  '__module__' : 'routing.navinfo_routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.navinfo.NaviHead)
  })
_sym_db.RegisterMessage(NaviHead)

LaneInfo = _reflection.GeneratedProtocolMessageType('LaneInfo', (_message.Message,), {
  'DESCRIPTOR' : _LANEINFO,
  '__module__' : 'routing.navinfo_routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.navinfo.LaneInfo)
  })
_sym_db.RegisterMessage(LaneInfo)

LinkAttr = _reflection.GeneratedProtocolMessageType('LinkAttr', (_message.Message,), {
  'DESCRIPTOR' : _LINKATTR,
  '__module__' : 'routing.navinfo_routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.navinfo.LinkAttr)
  })
_sym_db.RegisterMessage(LinkAttr)

Link = _reflection.GeneratedProtocolMessageType('Link', (_message.Message,), {
  'DESCRIPTOR' : _LINK,
  '__module__' : 'routing.navinfo_routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.navinfo.Link)
  })
_sym_db.RegisterMessage(Link)

RoadSceneInfo = _reflection.GeneratedProtocolMessageType('RoadSceneInfo', (_message.Message,), {
  'DESCRIPTOR' : _ROADSCENEINFO,
  '__module__' : 'routing.navinfo_routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.navinfo.RoadSceneInfo)
  })
_sym_db.RegisterMessage(RoadSceneInfo)

TrafficLightSceneInfo = _reflection.GeneratedProtocolMessageType('TrafficLightSceneInfo', (_message.Message,), {
  'DESCRIPTOR' : _TRAFFICLIGHTSCENEINFO,
  '__module__' : 'routing.navinfo_routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.navinfo.TrafficLightSceneInfo)
  })
_sym_db.RegisterMessage(TrafficLightSceneInfo)

SpeedLimitInfo = _reflection.GeneratedProtocolMessageType('SpeedLimitInfo', (_message.Message,), {
  'DESCRIPTOR' : _SPEEDLIMITINFO,
  '__module__' : 'routing.navinfo_routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.navinfo.SpeedLimitInfo)
  })
_sym_db.RegisterMessage(SpeedLimitInfo)

StaticRoutingInfo = _reflection.GeneratedProtocolMessageType('StaticRoutingInfo', (_message.Message,), {
  'DESCRIPTOR' : _STATICROUTINGINFO,
  '__module__' : 'routing.navinfo_routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.navinfo.StaticRoutingInfo)
  })
_sym_db.RegisterMessage(StaticRoutingInfo)

DataCollectSingleTask = _reflection.GeneratedProtocolMessageType('DataCollectSingleTask', (_message.Message,), {
  'DESCRIPTOR' : _DATACOLLECTSINGLETASK,
  '__module__' : 'routing.navinfo_routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.navinfo.DataCollectSingleTask)
  })
_sym_db.RegisterMessage(DataCollectSingleTask)

DataCollectTask = _reflection.GeneratedProtocolMessageType('DataCollectTask', (_message.Message,), {
  'DESCRIPTOR' : _DATACOLLECTTASK,
  '__module__' : 'routing.navinfo_routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.navinfo.DataCollectTask)
  })
_sym_db.RegisterMessage(DataCollectTask)

SegmAction = _reflection.GeneratedProtocolMessageType('SegmAction', (_message.Message,), {
  'DESCRIPTOR' : _SEGMACTION,
  '__module__' : 'routing.navinfo_routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.navinfo.SegmAction)
  })
_sym_db.RegisterMessage(SegmAction)

Segment = _reflection.GeneratedProtocolMessageType('Segment', (_message.Message,), {
  'DESCRIPTOR' : _SEGMENT,
  '__module__' : 'routing.navinfo_routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.navinfo.Segment)
  })
_sym_db.RegisterMessage(Segment)

SpeedLimitConfig = _reflection.GeneratedProtocolMessageType('SpeedLimitConfig', (_message.Message,), {
  'DESCRIPTOR' : _SPEEDLIMITCONFIG,
  '__module__' : 'routing.navinfo_routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.navinfo.SpeedLimitConfig)
  })
_sym_db.RegisterMessage(SpeedLimitConfig)

Route = _reflection.GeneratedProtocolMessageType('Route', (_message.Message,), {

  'NidToSegmEntry' : _reflection.GeneratedProtocolMessageType('NidToSegmEntry', (_message.Message,), {
    'DESCRIPTOR' : _ROUTE_NIDTOSEGMENTRY,
    '__module__' : 'routing.navinfo_routing_pb2'
    # @@protoc_insertion_point(class_scope:deeproute.navinfo.Route.NidToSegmEntry)
    })
  ,
  'DESCRIPTOR' : _ROUTE,
  '__module__' : 'routing.navinfo_routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.navinfo.Route)
  })
_sym_db.RegisterMessage(Route)
_sym_db.RegisterMessage(Route.NidToSegmEntry)

Result = _reflection.GeneratedProtocolMessageType('Result', (_message.Message,), {
  'DESCRIPTOR' : _RESULT,
  '__module__' : 'routing.navinfo_routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.navinfo.Result)
  })
_sym_db.RegisterMessage(Result)

TriggerList = _reflection.GeneratedProtocolMessageType('TriggerList', (_message.Message,), {
  'DESCRIPTOR' : _TRIGGERLIST,
  '__module__' : 'routing.navinfo_routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.navinfo.TriggerList)
  })
_sym_db.RegisterMessage(TriggerList)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _SEGMENT.fields_by_name['amap_link_range']._options = None
  _SEGMENT.fields_by_name['amap_link_range']._serialized_options = b'\030\001'
  _ROUTE_NIDTOSEGMENTRY._options = None
  _ROUTE_NIDTOSEGMENTRY._serialized_options = b'8\001'
  _SCENETYPE._serialized_start=6084
  _SCENETYPE._serialized_end=6343
  _ROADSCENETYPE._serialized_start=6345
  _ROADSCENETYPE._serialized_end=6415
  _SDROUTINGRESPONSE._serialized_start=301
  _SDROUTINGRESPONSE._serialized_end=669
  _NAVIHEAD._serialized_start=671
  _NAVIHEAD._serialized_end=708
  _LANEINFO._serialized_start=711
  _LANEINFO._serialized_end=868
  _LINKATTR._serialized_start=871
  _LINKATTR._serialized_end=1416
  _LINK._serialized_start=1418
  _LINK._serialized_end=1532
  _ROADSCENEINFO._serialized_start=1535
  _ROADSCENEINFO._serialized_end=1794
  _TRAFFICLIGHTSCENEINFO._serialized_start=1796
  _TRAFFICLIGHTSCENEINFO._serialized_end=1889
  _SPEEDLIMITINFO._serialized_start=1892
  _SPEEDLIMITINFO._serialized_end=2373
  _STATICROUTINGINFO._serialized_start=2376
  _STATICROUTINGINFO._serialized_end=2582
  _DATACOLLECTSINGLETASK._serialized_start=2585
  _DATACOLLECTSINGLETASK._serialized_end=2873
  _DATACOLLECTTASK._serialized_start=2875
  _DATACOLLECTTASK._serialized_end=2949
  _SEGMACTION._serialized_start=2952
  _SEGMACTION._serialized_end=3292
  _SEGMENT._serialized_start=3295
  _SEGMENT._serialized_end=5009
  _SPEEDLIMITCONFIG._serialized_start=5012
  _SPEEDLIMITCONFIG._serialized_end=5240
  _ROUTE._serialized_start=5243
  _ROUTE._serialized_end=5929
  _ROUTE_NIDTOSEGMENTRY._serialized_start=5853
  _ROUTE_NIDTOSEGMENTRY._serialized_end=5929
  _RESULT._serialized_start=5931
  _RESULT._serialized_end=5980
  _TRIGGERLIST._serialized_start=5982
  _TRIGGERLIST._serialized_end=6081
# @@protoc_insertion_point(module_scope)
