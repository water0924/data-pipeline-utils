# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: localization/havp_map.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from proto.perception import deeproute_perception_ras_map_pb2 as perception_dot_deeproute__perception__ras__map__pb2
from proto.perception import deeproute_perception_obstacle_pb2 as perception_dot_deeproute__perception__obstacle__pb2
from proto.common import geometry_pb2 as common_dot_geometry__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1blocalization/havp_map.proto\x12\x1f\x64\x65\x65proute.localization.havp_map\x1a-perception/deeproute_perception_ras_map.proto\x1a.perception/deeproute_perception_obstacle.proto\x1a\x15\x63ommon/geometry.proto\"\x86\x02\n\x13ParkingSpaceUsrInfo\x12\x18\n\x10parking_space_id\x18\x01 \x01(\x05\x12\r\n\x05\x66loor\x18\x02 \x01(\x05\x12\x0e\n\x06map_id\x18\x03 \x01(\x05\x12\x1a\n\x12parking_space_name\x18\x0b \x01(\t\x12K\n\x11parking_space_tag\x18\x0c \x01(\x0e\x32\x30.deeproute.localization.havp_map.ParkingSpaceTag\x12\x13\n\x0bis_favorite\x18\r \x01(\x08\x12!\n\x19is_regional_parking_space\x18\x0e \x01(\x08\x12\x15\n\rfavorite_time\x18\x14 \x01(\x03\"\xa3\x01\n\x10HAVPParkingSpace\x12T\n\x16parking_space_usr_info\x18\x01 \x01(\x0b\x32\x34.deeproute.localization.havp_map.ParkingSpaceUsrInfo\x12\x39\n\rparking_space\x18\x02 \x01(\x0b\x32\".deeproute.perception.ParkingSpace\"Y\n\x0cHAVPObstacle\x12:\n\x08obstacle\x18\x01 \x01(\x0b\x32(.deeproute.perception.PerceptionObstacle\x12\r\n\x05\x66loor\x18\x02 \x01(\x05\"8\n\x10HAVPLinkTopology\x12\x0f\n\x07link_id\x18\x01 \x01(\r\x12\x13\n\x0bpoint_index\x18\x02 \x01(\r\"\xc8\x03\n\x0eHAVPTrajectory\x12\n\n\x02id\x18\x01 \x01(\x05\x12=\n\x04type\x18\x02 \x01(\x0e\x32/.deeproute.localization.havp_map.TrajectoryType\x12\x12\n\nfrom_floor\x18\x03 \x01(\x05\x12\x10\n\x08to_floor\x18\x04 \x01(\x05\x12\x33\n\x10trajectory_point\x18\x05 \x03(\x0b\x32\x19.deeproute.common.Point3D\x12\x10\n\x08\x66loor_id\x18\x06 \x01(\x05\x12^\n\x1btrajectory_point_curve_type\x18\x07 \x03(\x0e\x32\x39.deeproute.localization.havp_map.TrajectoryPointCurveType\x12O\n\x14start_point_topology\x18\x08 \x03(\x0b\x32\x31.deeproute.localization.havp_map.HAVPLinkTopology\x12M\n\x12\x65nd_point_topology\x18\t \x03(\x0b\x32\x31.deeproute.localization.havp_map.HAVPLinkTopology\"\x1e\n\nFloorIdSet\x12\x10\n\x08\x66loor_id\x18\x01 \x03(\x05\"\x87\x01\n\x0eMapPoiUserInfo\x12\x0c\n\x04name\x18\x01 \x01(\t\x12;\n\x03tag\x18\x02 \x01(\x0e\x32..deeproute.localization.havp_map.ParkingPoiTag\x12\x13\n\x0bis_favorite\x18\x03 \x01(\x08\x12\x15\n\rfavorite_time\x18\x04 \x01(\x03\"\xaa\x02\n\nMapPoiInfo\x12:\n\x08poi_type\x18\x01 \x01(\x0e\x32(.deeproute.localization.havp_map.PoiType\x12\x10\n\x08\x66loor_id\x18\x02 \x01(\x05\x12/\n\x04pose\x18\x03 \x01(\x0b\x32!.deeproute.common.Transformation3\x12\n\n\x02id\x18\x04 \x01(\t\x12\x13\n\x0bkeyframe_id\x18\x05 \x01(\x05\x12\x38\n\rrelative_pose\x18\x06 \x01(\x0b\x32!.deeproute.common.Transformation3\x12\x42\n\tuser_info\x18\n \x01(\x0b\x32/.deeproute.localization.havp_map.MapPoiUserInfo\"\xfb\x03\n\x0fHAVPMapMetaData\x12\x0e\n\x06map_id\x18\x01 \x01(\x05\x12-\n\nmap_origin\x18\x02 \x01(\x0b\x32\x19.deeproute.common.Point3D\x12\x18\n\x10\x63reate_timestamp\x18\x03 \x01(\x10\x12\x14\n\x0cgiven_map_id\x18\x04 \x01(\x05\x12\x10\n\x08map_name\x18\x0b \x01(\t\x12Z\n\x1c\x66\x61vorite_parking_space_infos\x18\x0c \x03(\x0b\x32\x34.deeproute.localization.havp_map.ParkingSpaceUsrInfo\x12 \n\x18\x64\x65\x66\x61ult_parking_space_id\x18\r \x01(\x05\x12\x1a\n\x12\x64\x65\x66\x61ult_map_poi_id\x18\x0e \x01(\t\x12\x45\n\x10\x66\x61vorite_map_poi\x18\x0f \x03(\x0b\x32+.deeproute.localization.havp_map.MapPoiInfo\x12\x12\n\nmap_length\x18\x15 \x01(\x02\x12\x1a\n\x12num_parking_spaces\x18\x16 \x01(\x05\x12\x16\n\x0enum_speedbumps\x18\x17 \x01(\x05\x12>\n\tfloor_set\x18\x18 \x01(\x0b\x32+.deeproute.localization.havp_map.FloorIdSet\"\xec\x02\n\x07HAVPMap\x12G\n\rmap_meta_data\x18\x01 \x01(\x0b\x32\x30.deeproute.localization.havp_map.HAVPMapMetaData\x12G\n\x0emap_trajectory\x18\x0b \x03(\x0b\x32/.deeproute.localization.havp_map.HAVPTrajectory\x12L\n\x11map_parking_space\x18\x0c \x03(\x0b\x32\x31.deeproute.localization.havp_map.HAVPParkingSpace\x12\x43\n\x0cmap_obstacle\x18\r \x03(\x0b\x32-.deeproute.localization.havp_map.HAVPObstacle\x12<\n\x07map_poi\x18\x0e \x03(\x0b\x32+.deeproute.localization.havp_map.MapPoiInfo*\xa8\x01\n\x0fParkingSpaceTag\x12\x1a\n\x16PARK_SPACE_TAG_UNKNOWN\x10\x00\x12#\n\x1fPARK_SPACE_TAG_CHARGING_STATION\x10\x01\x12\x1b\n\x17PARK_SPACE_TAG_ELEVATOR\x10\x02\x12\x18\n\x14PARK_SPACE_TAG_FLOOR\x10\x03\x12\x1d\n\x19PARK_SPACE_TAG_PASSAGEWAY\x10\x04*4\n\x0eTrajectoryType\x12\x08\n\x04\x46LAT\x10\x00\x12\x0c\n\x08\x44OWNHILL\x10\x01\x12\n\n\x06UPHILL\x10\x02*E\n\x18TrajectoryPointCurveType\x12\x0c\n\x08STRAIGHT\x10\x00\x12\t\n\x05\x43URVE\x10\x01\x12\x10\n\x0cSPIRAL_SLOPE\x10\x02*\\\n\x07PoiType\x12\r\n\tODD_START\x10\x01\x12\x0b\n\x07ODD_END\x10\x02\x12\x13\n\x0fPARKING_OUT_END\x10\x03\x12\x0f\n\x0bUSER_DEFINE\x10\x04\x12\x0f\n\x0bMAPPING_END\x10\x05*\x96\x01\n\rParkingPoiTag\x12\x18\n\x14PARK_POI_TAG_UNKNOWN\x10\x00\x12\x17\n\x13PARK_POI_TAG_CHARGE\x10\x01\x12\x19\n\x15PARK_POI_TAG_ELEVATOR\x10\x02\x12\x1a\n\x16PARK_POI_TAG_STAIRCASE\x10\x03\x12\x1b\n\x17PARK_POI_TAG_PASSAGEWAY\x10\x04')

_PARKINGSPACETAG = DESCRIPTOR.enum_types_by_name['ParkingSpaceTag']
ParkingSpaceTag = enum_type_wrapper.EnumTypeWrapper(_PARKINGSPACETAG)
_TRAJECTORYTYPE = DESCRIPTOR.enum_types_by_name['TrajectoryType']
TrajectoryType = enum_type_wrapper.EnumTypeWrapper(_TRAJECTORYTYPE)
_TRAJECTORYPOINTCURVETYPE = DESCRIPTOR.enum_types_by_name['TrajectoryPointCurveType']
TrajectoryPointCurveType = enum_type_wrapper.EnumTypeWrapper(_TRAJECTORYPOINTCURVETYPE)
_POITYPE = DESCRIPTOR.enum_types_by_name['PoiType']
PoiType = enum_type_wrapper.EnumTypeWrapper(_POITYPE)
_PARKINGPOITAG = DESCRIPTOR.enum_types_by_name['ParkingPoiTag']
ParkingPoiTag = enum_type_wrapper.EnumTypeWrapper(_PARKINGPOITAG)
PARK_SPACE_TAG_UNKNOWN = 0
PARK_SPACE_TAG_CHARGING_STATION = 1
PARK_SPACE_TAG_ELEVATOR = 2
PARK_SPACE_TAG_FLOOR = 3
PARK_SPACE_TAG_PASSAGEWAY = 4
FLAT = 0
DOWNHILL = 1
UPHILL = 2
STRAIGHT = 0
CURVE = 1
SPIRAL_SLOPE = 2
ODD_START = 1
ODD_END = 2
PARKING_OUT_END = 3
USER_DEFINE = 4
MAPPING_END = 5
PARK_POI_TAG_UNKNOWN = 0
PARK_POI_TAG_CHARGE = 1
PARK_POI_TAG_ELEVATOR = 2
PARK_POI_TAG_STAIRCASE = 3
PARK_POI_TAG_PASSAGEWAY = 4


_PARKINGSPACEUSRINFO = DESCRIPTOR.message_types_by_name['ParkingSpaceUsrInfo']
_HAVPPARKINGSPACE = DESCRIPTOR.message_types_by_name['HAVPParkingSpace']
_HAVPOBSTACLE = DESCRIPTOR.message_types_by_name['HAVPObstacle']
_HAVPLINKTOPOLOGY = DESCRIPTOR.message_types_by_name['HAVPLinkTopology']
_HAVPTRAJECTORY = DESCRIPTOR.message_types_by_name['HAVPTrajectory']
_FLOORIDSET = DESCRIPTOR.message_types_by_name['FloorIdSet']
_MAPPOIUSERINFO = DESCRIPTOR.message_types_by_name['MapPoiUserInfo']
_MAPPOIINFO = DESCRIPTOR.message_types_by_name['MapPoiInfo']
_HAVPMAPMETADATA = DESCRIPTOR.message_types_by_name['HAVPMapMetaData']
_HAVPMAP = DESCRIPTOR.message_types_by_name['HAVPMap']
ParkingSpaceUsrInfo = _reflection.GeneratedProtocolMessageType('ParkingSpaceUsrInfo', (_message.Message,), {
  'DESCRIPTOR' : _PARKINGSPACEUSRINFO,
  '__module__' : 'localization.havp_map_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.localization.havp_map.ParkingSpaceUsrInfo)
  })
_sym_db.RegisterMessage(ParkingSpaceUsrInfo)

HAVPParkingSpace = _reflection.GeneratedProtocolMessageType('HAVPParkingSpace', (_message.Message,), {
  'DESCRIPTOR' : _HAVPPARKINGSPACE,
  '__module__' : 'localization.havp_map_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.localization.havp_map.HAVPParkingSpace)
  })
_sym_db.RegisterMessage(HAVPParkingSpace)

HAVPObstacle = _reflection.GeneratedProtocolMessageType('HAVPObstacle', (_message.Message,), {
  'DESCRIPTOR' : _HAVPOBSTACLE,
  '__module__' : 'localization.havp_map_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.localization.havp_map.HAVPObstacle)
  })
_sym_db.RegisterMessage(HAVPObstacle)

HAVPLinkTopology = _reflection.GeneratedProtocolMessageType('HAVPLinkTopology', (_message.Message,), {
  'DESCRIPTOR' : _HAVPLINKTOPOLOGY,
  '__module__' : 'localization.havp_map_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.localization.havp_map.HAVPLinkTopology)
  })
_sym_db.RegisterMessage(HAVPLinkTopology)

HAVPTrajectory = _reflection.GeneratedProtocolMessageType('HAVPTrajectory', (_message.Message,), {
  'DESCRIPTOR' : _HAVPTRAJECTORY,
  '__module__' : 'localization.havp_map_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.localization.havp_map.HAVPTrajectory)
  })
_sym_db.RegisterMessage(HAVPTrajectory)

FloorIdSet = _reflection.GeneratedProtocolMessageType('FloorIdSet', (_message.Message,), {
  'DESCRIPTOR' : _FLOORIDSET,
  '__module__' : 'localization.havp_map_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.localization.havp_map.FloorIdSet)
  })
_sym_db.RegisterMessage(FloorIdSet)

MapPoiUserInfo = _reflection.GeneratedProtocolMessageType('MapPoiUserInfo', (_message.Message,), {
  'DESCRIPTOR' : _MAPPOIUSERINFO,
  '__module__' : 'localization.havp_map_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.localization.havp_map.MapPoiUserInfo)
  })
_sym_db.RegisterMessage(MapPoiUserInfo)

MapPoiInfo = _reflection.GeneratedProtocolMessageType('MapPoiInfo', (_message.Message,), {
  'DESCRIPTOR' : _MAPPOIINFO,
  '__module__' : 'localization.havp_map_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.localization.havp_map.MapPoiInfo)
  })
_sym_db.RegisterMessage(MapPoiInfo)

HAVPMapMetaData = _reflection.GeneratedProtocolMessageType('HAVPMapMetaData', (_message.Message,), {
  'DESCRIPTOR' : _HAVPMAPMETADATA,
  '__module__' : 'localization.havp_map_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.localization.havp_map.HAVPMapMetaData)
  })
_sym_db.RegisterMessage(HAVPMapMetaData)

HAVPMap = _reflection.GeneratedProtocolMessageType('HAVPMap', (_message.Message,), {
  'DESCRIPTOR' : _HAVPMAP,
  '__module__' : 'localization.havp_map_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.localization.havp_map.HAVPMap)
  })
_sym_db.RegisterMessage(HAVPMap)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _PARKINGSPACETAG._serialized_start=2570
  _PARKINGSPACETAG._serialized_end=2738
  _TRAJECTORYTYPE._serialized_start=2740
  _TRAJECTORYTYPE._serialized_end=2792
  _TRAJECTORYPOINTCURVETYPE._serialized_start=2794
  _TRAJECTORYPOINTCURVETYPE._serialized_end=2863
  _POITYPE._serialized_start=2865
  _POITYPE._serialized_end=2957
  _PARKINGPOITAG._serialized_start=2960
  _PARKINGPOITAG._serialized_end=3110
  _PARKINGSPACEUSRINFO._serialized_start=183
  _PARKINGSPACEUSRINFO._serialized_end=445
  _HAVPPARKINGSPACE._serialized_start=448
  _HAVPPARKINGSPACE._serialized_end=611
  _HAVPOBSTACLE._serialized_start=613
  _HAVPOBSTACLE._serialized_end=702
  _HAVPLINKTOPOLOGY._serialized_start=704
  _HAVPLINKTOPOLOGY._serialized_end=760
  _HAVPTRAJECTORY._serialized_start=763
  _HAVPTRAJECTORY._serialized_end=1219
  _FLOORIDSET._serialized_start=1221
  _FLOORIDSET._serialized_end=1251
  _MAPPOIUSERINFO._serialized_start=1254
  _MAPPOIUSERINFO._serialized_end=1389
  _MAPPOIINFO._serialized_start=1392
  _MAPPOIINFO._serialized_end=1690
  _HAVPMAPMETADATA._serialized_start=1693
  _HAVPMAPMETADATA._serialized_end=2200
  _HAVPMAP._serialized_start=2203
  _HAVPMAP._serialized_end=2567
# @@protoc_insertion_point(module_scope)
