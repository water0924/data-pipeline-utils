# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: semantic_map/map_object_model.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from proto.common import geometry_pb2 as common_dot_geometry__pb2
from proto.semantic_map import map_overlap_pb2 as semantic__map_dot_map__overlap__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n#semantic_map/map_object_model.proto\x12\x0f\x64\x65\x65proute.hdmap\x1a\x15\x63ommon/geometry.proto\x1a\x1esemantic_map/map_overlap.proto\"\xdd\x01\n\x0bTrafficSign\x12\n\n\x02id\x18\x01 \x01(\x05\x12*\n\x07polygon\x18\x02 \x01(\x0b\x32\x19.deeproute.common.Polygon\x12/\n\x04type\x18\x03 \x01(\x0e\x32!.deeproute.hdmap.TrafficSign.Type\x12\x0f\n\x07heading\x18\x04 \x01(\x01\"T\n\x04Type\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0f\n\x0bSPEED_LIMIT\x10\x01\x12\t\n\x05OTHER\x10\x02\x12\x10\n\x0cUS_STOP_SIGN\x10\x03\x12\x11\n\rUS_YIELD_SIGN\x10\x04\"\x9d\x01\n\x04Pole\x12\n\n\x02id\x18\x01 \x01(\x05\x12*\n\x07polygon\x18\x02 \x01(\x0b\x32\x19.deeproute.common.Polygon\x12(\n\x04type\x18\x03 \x01(\x0e\x32\x1a.deeproute.hdmap.Pole.Type\"3\n\x04Type\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0f\n\x0bSIGNAL_POLE\x10\x01\x12\r\n\tSIGN_POLE\x10\x02\"\xf2\x02\n\x0cGroundSymbol\x12\n\n\x02id\x18\x01 \x01(\x05\x12*\n\x07polygon\x18\x02 \x01(\x0b\x32\x19.deeproute.common.Polygon\x12\x30\n\x04type\x18\x03 \x01(\x0e\x32\".deeproute.hdmap.GroundSymbol.Type\"\xf7\x01\n\x04Type\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0f\n\x0bSPEED_LIMIT\x10\x01\x12\x08\n\x04TEXT\x10\x02\x12\x12\n\x0eSTRAIGHT_ARROW\x10\x03\x12\x13\n\x0fTURN_LEFT_ARROW\x10\x04\x12\x14\n\x10TURN_RIGHT_ARROW\x10\x05\x12\x17\n\x13STRAIGHT_LEFT_ARROW\x10\x06\x12\x18\n\x14STRAIGHT_RIGHT_ARROW\x10\x07\x12\x0f\n\x0bUTURN_ARROW\x10\x08\x12\x14\n\x10LEFT_UTURN_ARROW\x10\t\x12\x18\n\x14STRAIGHT_UTURN_ARROW\x10\n\x12\x14\n\x10LEFT_RIGHT_ARROW\x10\x0b\"\x9c\x02\n\x0eGroundObstacle\x12\n\n\x02id\x18\x01 \x01(\x05\x12.\n\x08polyline\x18\x02 \x01(\x0b\x32\x1a.deeproute.common.PolylineH\x00\x12,\n\x07polygon\x18\x03 \x01(\x0b\x32\x19.deeproute.common.PolygonH\x00\x12\x32\n\x04type\x18\x04 \x01(\x0e\x32$.deeproute.hdmap.GroundObstacle.Type\"`\n\x04Type\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x11\n\rWHEEL_STOPPER\x10\x01\x12\x08\n\x04\x43URB\x10\x02\x12\x13\n\x0fPEDESTRIAN_POLE\x10\x03\x12\x19\n\x15PHYSICAL_NOT_OBSTACLE\x10\x04\x42\n\n\x08geometry\"\xdf\x03\n\nLaneMarker\x12\n\n\x02id\x18\x01 \x01(\x05\x12*\n\x07polygon\x18\x02 \x01(\x0b\x32\x19.deeproute.common.Polygon\x12.\n\x04type\x18\x03 \x01(\x0e\x32 .deeproute.hdmap.LaneMarker.Type\x12\r\n\x05layer\x18\x04 \x01(\x05\x12*\n\x08overlaps\x18\x05 \x03(\x0b\x32\x18.deeproute.hdmap.Overlap\"\xad\x02\n\x04Type\x12\x0c\n\x08STRAIGHT\x10\x00\x12\r\n\tTURN_LEFT\x10\x01\x12\x0e\n\nTURN_RIGHT\x10\x02\x12\x11\n\rSTRAIGHT_LEFT\x10\x03\x12\x12\n\x0eSTRAIGHT_RIGHT\x10\x04\x12\x0e\n\nLEFT_RIGHT\x10\x05\x12\t\n\x05UTURN\x10\x06\x12\x0e\n\nLEFT_UTURN\x10\x07\x12\x12\n\x0eSTRAIGHT_UTURN\x10\x08\x12\x17\n\x13STRAIGHT_LEFT_RIGHT\x10\t\x12\x17\n\x13STRAIGHT_LEFT_UTURN\x10\n\x12\x0f\n\x0bRIGHT_UTURN\x10\x0b\x12\x14\n\x10LEFT_RIGHT_UTURN\x10\x0c\x12\x18\n\x14STRAIGHT_RIGHT_UTURN\x10\r\x12\x0e\n\nLEFT_MERGE\x10\x0e\x12\x0f\n\x0bRIGHT_MERGE\x10\x0f\"\x86\x01\n\x11\x42icycleLaneMarker\x12\n\n\x02id\x18\x01 \x01(\x05\x12*\n\x07polygon\x18\x02 \x01(\x0b\x32\x19.deeproute.common.Polygon\x12\r\n\x05layer\x18\x03 \x01(\x05\x12*\n\x08overlaps\x18\x04 \x03(\x0b\x32\x18.deeproute.hdmap.Overlap')



_TRAFFICSIGN = DESCRIPTOR.message_types_by_name['TrafficSign']
_POLE = DESCRIPTOR.message_types_by_name['Pole']
_GROUNDSYMBOL = DESCRIPTOR.message_types_by_name['GroundSymbol']
_GROUNDOBSTACLE = DESCRIPTOR.message_types_by_name['GroundObstacle']
_LANEMARKER = DESCRIPTOR.message_types_by_name['LaneMarker']
_BICYCLELANEMARKER = DESCRIPTOR.message_types_by_name['BicycleLaneMarker']
_TRAFFICSIGN_TYPE = _TRAFFICSIGN.enum_types_by_name['Type']
_POLE_TYPE = _POLE.enum_types_by_name['Type']
_GROUNDSYMBOL_TYPE = _GROUNDSYMBOL.enum_types_by_name['Type']
_GROUNDOBSTACLE_TYPE = _GROUNDOBSTACLE.enum_types_by_name['Type']
_LANEMARKER_TYPE = _LANEMARKER.enum_types_by_name['Type']
TrafficSign = _reflection.GeneratedProtocolMessageType('TrafficSign', (_message.Message,), {
  'DESCRIPTOR' : _TRAFFICSIGN,
  '__module__' : 'semantic_map.map_object_model_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.hdmap.TrafficSign)
  })
_sym_db.RegisterMessage(TrafficSign)

Pole = _reflection.GeneratedProtocolMessageType('Pole', (_message.Message,), {
  'DESCRIPTOR' : _POLE,
  '__module__' : 'semantic_map.map_object_model_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.hdmap.Pole)
  })
_sym_db.RegisterMessage(Pole)

GroundSymbol = _reflection.GeneratedProtocolMessageType('GroundSymbol', (_message.Message,), {
  'DESCRIPTOR' : _GROUNDSYMBOL,
  '__module__' : 'semantic_map.map_object_model_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.hdmap.GroundSymbol)
  })
_sym_db.RegisterMessage(GroundSymbol)

GroundObstacle = _reflection.GeneratedProtocolMessageType('GroundObstacle', (_message.Message,), {
  'DESCRIPTOR' : _GROUNDOBSTACLE,
  '__module__' : 'semantic_map.map_object_model_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.hdmap.GroundObstacle)
  })
_sym_db.RegisterMessage(GroundObstacle)

LaneMarker = _reflection.GeneratedProtocolMessageType('LaneMarker', (_message.Message,), {
  'DESCRIPTOR' : _LANEMARKER,
  '__module__' : 'semantic_map.map_object_model_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.hdmap.LaneMarker)
  })
_sym_db.RegisterMessage(LaneMarker)

BicycleLaneMarker = _reflection.GeneratedProtocolMessageType('BicycleLaneMarker', (_message.Message,), {
  'DESCRIPTOR' : _BICYCLELANEMARKER,
  '__module__' : 'semantic_map.map_object_model_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.hdmap.BicycleLaneMarker)
  })
_sym_db.RegisterMessage(BicycleLaneMarker)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _TRAFFICSIGN._serialized_start=112
  _TRAFFICSIGN._serialized_end=333
  _TRAFFICSIGN_TYPE._serialized_start=249
  _TRAFFICSIGN_TYPE._serialized_end=333
  _POLE._serialized_start=336
  _POLE._serialized_end=493
  _POLE_TYPE._serialized_start=442
  _POLE_TYPE._serialized_end=493
  _GROUNDSYMBOL._serialized_start=496
  _GROUNDSYMBOL._serialized_end=866
  _GROUNDSYMBOL_TYPE._serialized_start=619
  _GROUNDSYMBOL_TYPE._serialized_end=866
  _GROUNDOBSTACLE._serialized_start=869
  _GROUNDOBSTACLE._serialized_end=1153
  _GROUNDOBSTACLE_TYPE._serialized_start=1045
  _GROUNDOBSTACLE_TYPE._serialized_end=1141
  _LANEMARKER._serialized_start=1156
  _LANEMARKER._serialized_end=1635
  _LANEMARKER_TYPE._serialized_start=1334
  _LANEMARKER_TYPE._serialized_end=1635
  _BICYCLELANEMARKER._serialized_start=1638
  _BICYCLELANEMARKER._serialized_end=1772
# @@protoc_insertion_point(module_scope)
