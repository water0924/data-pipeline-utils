# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: graph_match/graph_matching.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from proto.common import geometry_pb2 as common_dot_geometry__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n graph_match/graph_matching.proto\x12\x15\x64\x65\x65proute.graph_match\x1a\x15\x63ommon/geometry.proto\"\xf2\x01\n\x16WayPointMatchingResult\x12-\n\tway_point\x18\x01 \x01(\x0b\x32\x1a.deeproute.common.PointLLH\x12\x17\n\x0fmatched_link_id\x18\x02 \x01(\x04\x12U\n\x0fmatching_status\x18\x03 \x01(\x0e\x32<.deeproute.graph_match.WayPointMatchingResult.MatchingStatus\x12\r\n\x05index\x18\x04 \x01(\r\"*\n\x0eMatchingStatus\x12\n\n\x06NORMAL\x10\x00\x12\x0c\n\x08MISMATCH\x10\x01\"k\n\x16\x41mapStepMatchingResult\x12Q\n\x1away_point_matching_results\x18\x01 \x03(\x0b\x32-.deeproute.graph_match.WayPointMatchingResult\"c\n\x12SdmapLinkMatchInfo\x12\x0f\n\x07link_id\x18\x01 \x01(\x04\x12\x1e\n\x16\x61map_start_point_index\x18\x02 \x01(\x05\x12\x1c\n\x14\x61map_end_point_index\x18\x03 \x01(\x05\"\xf7\x01\n\x17SdmapLinkMatchingResult\x12\x10\n\x08link_ids\x18\x01 \x03(\x04\x12?\n\x1bshape_points_of_source_link\x18\x02 \x03(\x0b\x32\x1a.deeproute.common.PointLLH\x12?\n\x1bshape_points_of_target_link\x18\x03 \x03(\x0b\x32\x1a.deeproute.common.PointLLH\x12H\n\x15sdmap_link_match_info\x18\x04 \x03(\x0b\x32).deeproute.graph_match.SdmapLinkMatchInfo\"\xd9\x01\n\x17\x41mapGraphMatchingResult\x12Q\n\x1a\x61map_step_matching_results\x18\x01 \x03(\x0b\x32-.deeproute.graph_match.AmapStepMatchingResult\x12S\n\x1bsdmap_link_matching_results\x18\x02 \x03(\x0b\x32..deeproute.graph_match.SdmapLinkMatchingResult\x12\x16\n\x0esd_map_version\x18\x03 \x01(\t\";\n\x11MismatchSegmIndex\x12\x13\n\x0bstart_index\x18\x01 \x01(\r\x12\x11\n\tend_index\x18\x02 \x01(\r\"\xf3\x01\n\x11\x41mapLinkMatchInfo\x12\x16\n\nlink_index\x18\x01 \x01(\x05\x42\x02\x18\x01\x12\x1d\n\x11start_point_index\x18\x02 \x01(\x05\x42\x02\x18\x01\x12\x1b\n\x0f\x65nd_point_index\x18\x03 \x01(\x05\x42\x02\x18\x01\x12\x16\n\x0estart_step_idx\x18\x04 \x01(\x05\x12\x14\n\x0c\x65nd_step_idx\x18\x05 \x01(\x05\x12\x16\n\x0estart_link_idx\x18\x06 \x01(\x05\x12\x14\n\x0c\x65nd_link_idx\x18\x07 \x01(\x05\x12\x17\n\x0fstart_point_idx\x18\x08 \x01(\x05\x12\x15\n\rend_point_idx\x18\t \x01(\x05')



_WAYPOINTMATCHINGRESULT = DESCRIPTOR.message_types_by_name['WayPointMatchingResult']
_AMAPSTEPMATCHINGRESULT = DESCRIPTOR.message_types_by_name['AmapStepMatchingResult']
_SDMAPLINKMATCHINFO = DESCRIPTOR.message_types_by_name['SdmapLinkMatchInfo']
_SDMAPLINKMATCHINGRESULT = DESCRIPTOR.message_types_by_name['SdmapLinkMatchingResult']
_AMAPGRAPHMATCHINGRESULT = DESCRIPTOR.message_types_by_name['AmapGraphMatchingResult']
_MISMATCHSEGMINDEX = DESCRIPTOR.message_types_by_name['MismatchSegmIndex']
_AMAPLINKMATCHINFO = DESCRIPTOR.message_types_by_name['AmapLinkMatchInfo']
_WAYPOINTMATCHINGRESULT_MATCHINGSTATUS = _WAYPOINTMATCHINGRESULT.enum_types_by_name['MatchingStatus']
WayPointMatchingResult = _reflection.GeneratedProtocolMessageType('WayPointMatchingResult', (_message.Message,), {
  'DESCRIPTOR' : _WAYPOINTMATCHINGRESULT,
  '__module__' : 'graph_match.graph_matching_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.graph_match.WayPointMatchingResult)
  })
_sym_db.RegisterMessage(WayPointMatchingResult)

AmapStepMatchingResult = _reflection.GeneratedProtocolMessageType('AmapStepMatchingResult', (_message.Message,), {
  'DESCRIPTOR' : _AMAPSTEPMATCHINGRESULT,
  '__module__' : 'graph_match.graph_matching_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.graph_match.AmapStepMatchingResult)
  })
_sym_db.RegisterMessage(AmapStepMatchingResult)

SdmapLinkMatchInfo = _reflection.GeneratedProtocolMessageType('SdmapLinkMatchInfo', (_message.Message,), {
  'DESCRIPTOR' : _SDMAPLINKMATCHINFO,
  '__module__' : 'graph_match.graph_matching_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.graph_match.SdmapLinkMatchInfo)
  })
_sym_db.RegisterMessage(SdmapLinkMatchInfo)

SdmapLinkMatchingResult = _reflection.GeneratedProtocolMessageType('SdmapLinkMatchingResult', (_message.Message,), {
  'DESCRIPTOR' : _SDMAPLINKMATCHINGRESULT,
  '__module__' : 'graph_match.graph_matching_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.graph_match.SdmapLinkMatchingResult)
  })
_sym_db.RegisterMessage(SdmapLinkMatchingResult)

AmapGraphMatchingResult = _reflection.GeneratedProtocolMessageType('AmapGraphMatchingResult', (_message.Message,), {
  'DESCRIPTOR' : _AMAPGRAPHMATCHINGRESULT,
  '__module__' : 'graph_match.graph_matching_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.graph_match.AmapGraphMatchingResult)
  })
_sym_db.RegisterMessage(AmapGraphMatchingResult)

MismatchSegmIndex = _reflection.GeneratedProtocolMessageType('MismatchSegmIndex', (_message.Message,), {
  'DESCRIPTOR' : _MISMATCHSEGMINDEX,
  '__module__' : 'graph_match.graph_matching_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.graph_match.MismatchSegmIndex)
  })
_sym_db.RegisterMessage(MismatchSegmIndex)

AmapLinkMatchInfo = _reflection.GeneratedProtocolMessageType('AmapLinkMatchInfo', (_message.Message,), {
  'DESCRIPTOR' : _AMAPLINKMATCHINFO,
  '__module__' : 'graph_match.graph_matching_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.graph_match.AmapLinkMatchInfo)
  })
_sym_db.RegisterMessage(AmapLinkMatchInfo)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _AMAPLINKMATCHINFO.fields_by_name['link_index']._options = None
  _AMAPLINKMATCHINFO.fields_by_name['link_index']._serialized_options = b'\030\001'
  _AMAPLINKMATCHINFO.fields_by_name['start_point_index']._options = None
  _AMAPLINKMATCHINFO.fields_by_name['start_point_index']._serialized_options = b'\030\001'
  _AMAPLINKMATCHINFO.fields_by_name['end_point_index']._options = None
  _AMAPLINKMATCHINFO.fields_by_name['end_point_index']._serialized_options = b'\030\001'
  _WAYPOINTMATCHINGRESULT._serialized_start=83
  _WAYPOINTMATCHINGRESULT._serialized_end=325
  _WAYPOINTMATCHINGRESULT_MATCHINGSTATUS._serialized_start=283
  _WAYPOINTMATCHINGRESULT_MATCHINGSTATUS._serialized_end=325
  _AMAPSTEPMATCHINGRESULT._serialized_start=327
  _AMAPSTEPMATCHINGRESULT._serialized_end=434
  _SDMAPLINKMATCHINFO._serialized_start=436
  _SDMAPLINKMATCHINFO._serialized_end=535
  _SDMAPLINKMATCHINGRESULT._serialized_start=538
  _SDMAPLINKMATCHINGRESULT._serialized_end=785
  _AMAPGRAPHMATCHINGRESULT._serialized_start=788
  _AMAPGRAPHMATCHINGRESULT._serialized_end=1005
  _MISMATCHSEGMINDEX._serialized_start=1007
  _MISMATCHSEGMINDEX._serialized_end=1066
  _AMAPLINKMATCHINFO._serialized_start=1069
  _AMAPLINKMATCHINFO._serialized_end=1312
# @@protoc_insertion_point(module_scope)
