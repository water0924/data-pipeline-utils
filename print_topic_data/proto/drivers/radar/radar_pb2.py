# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: drivers/radar/radar.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from proto.common import header_pb2 as common_dot_header__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x19\x64rivers/radar/radar.proto\x12\x17\x64\x65\x65proute.drivers.radar\x1a\x13\x63ommon/header.proto\"\xa4\r\n\nRadarState\x12\x14\n\x0cmax_distance\x18\x01 \x01(\r\x12\x13\n\x0bradar_power\x18\x02 \x01(\r\x12\x43\n\x0boutput_type\x18\x03 \x01(\x0e\x32..deeproute.drivers.radar.RadarState.OutputType\x12G\n\rrcs_threshold\x18\x04 \x01(\x0e\x32\x30.deeproute.drivers.radar.RadarState.RcsThreshold\x12\x14\n\x0csend_quality\x18\x05 \x01(\x08\x12\x15\n\rsend_ext_info\x18\x06 \x01(\x08\x12\x14\n\x0cmotion_state\x18\x07 \x01(\r\x12\x43\n\x0b\x65rror_state\x18\x08 \x01(\x0e\x32..deeproute.drivers.radar.RadarState.ErrorState\x12O\n\x11\x63\x61libration_state\x18\t \x01(\x0e\x32\x34.deeproute.drivers.radar.RadarState.CalibrationState\x12?\n\tsensor_id\x18\n \x01(\x0e\x32,.deeproute.drivers.radar.RadarState.SensorId\x12\x13\n\x0bis_blockage\x18\x0b \x01(\x08\x12H\n\x0bwork_status\x18\x0c \x01(\x0e\x32\x33.deeproute.drivers.radar.RadarState.RadarWorkStatus\x12\x1e\n\x16\x61lig_pitch_out_of_spec\x18\r \x01(\x08\x12\x1c\n\x14\x61lig_yaw_out_of_spec\x18\x0e \x01(\x08\x12\x19\n\x11time_stamp_status\x18\x0f \x01(\r\x12J\n\x0fmotion_rx_state\x18\x10 \x01(\x0e\x32\x31.deeproute.drivers.radar.RadarState.MotionRxState\"l\n\nOutputType\x12\x14\n\x10OUTPUT_TYPE_NONE\x10\x00\x12\x17\n\x13OUTPUT_TYPE_OBJECTS\x10\x01\x12\x18\n\x14OUTPUT_TYPE_CLUSTERS\x10\x02\x12\x15\n\x11OUTPUT_TYPE_ERROR\x10\x03\"g\n\x0cRcsThreshold\x12\x1a\n\x16RCS_THRESHOLD_STANDARD\x10\x00\x12\"\n\x1eRCS_THRESHOLD_HIGH_SENSITIVITY\x10\x01\x12\x17\n\x13RCS_THRESHOLD_ERROR\x10\x02\"\x90\x01\n\nErrorState\x12\n\n\x06Normal\x10\x00\x12\x0e\n\nInnerError\x10\x01\x12\x11\n\rExternalError\x10\x02\x12\x10\n\x0cMisalignment\x10\x03\x12\x1b\n\x17SensorBlindnessDetected\x10\x04\x12\x12\n\x0eProductionMode\x10\x05\x12\x10\n\x0cNotAvailable\x10\x06\"m\n\x10\x43\x61librationState\x12\x10\n\x0cNoCalibrated\x10\x00\x12\x16\n\x12\x43\x61librationSuccess\x10\x01\x12\x15\n\x11\x43\x61librationFailed\x10\x02\x12\x18\n\x14\x43\x61librationInProcess\x10\x03\"\xdb\x01\n\x08SensorId\x12\x14\n\x10SENSORID_UNKNOWN\x10\x00\x12\x17\n\x13SENSORID_FRONTRADAR\x10\x01\x12\x16\n\x12SENSORID_REARRADAR\x10\x02\x12\x1b\n\x17SENSORID_FRONTLEFTRADAR\x10\x03\x12\x1c\n\x18SENSORID_FRONTRIGHTRADAR\x10\x04\x12\x1a\n\x16SENSORID_REARLEFTRADAR\x10\x05\x12\x1b\n\x17SENSORID_REARRIGHTRADAR\x10\x06\x12\x14\n\x10SENSORID_RESERVE\x10\x07\"\x9f\x01\n\x0fRadarWorkStatus\x12\x1d\n\x19RADARWORKSTATUS_NOTACTIVE\x10\x00\x12\x16\n\x12RADARWORKSTATUS_ON\x10\x01\x12\x1b\n\x17RADARWORKSTATUS_SYSERR1\x10\x02\x12\x1b\n\x17RADARWORKSTATUS_SYSERR2\x10\x03\x12\x1b\n\x17RADARWORKSTATUS_RESERVE\x10\x04\"f\n\rMotionRxState\x12\x0c\n\x08INPUT_OK\x10\x00\x12\x11\n\rSPEED_MISSING\x10\x01\x12\x14\n\x10YAW_RATE_MISSING\x10\x02\x12\x1e\n\x1aSPEED_AND_YAW_RATE_MISSING\x10\x03\"i\n\x11\x43lusterListHeader\x12\x0f\n\x04near\x18\x01 \x01(\x05:\x01\x30\x12\x0e\n\x03\x66\x61r\x18\x02 \x01(\x05:\x01\x30\x12\x18\n\x0cmeas_counter\x18\x03 \x01(\x05:\x02-1\x12\x19\n\x11interface_version\x18\x04 \x01(\x05\"\xd7\x01\n\x10ObjectListHeader\x12\x16\n\x0bnof_objects\x18\x01 \x01(\x05:\x01\x30\x12\x18\n\x0cmeas_counter\x18\x02 \x01(\x05:\x02-1\x12\x19\n\x11interface_version\x18\x03 \x01(\x05\x12\x14\n\tnof_roads\x18\x04 \x01(\x05:\x01\x30\x12\x16\n\x0eobj_report_cnt\x18\x05 \x01(\x05\x12\x11\n\ttimestamp\x18\x06 \x01(\x03\x12\x18\n\x10obj_time_latency\x18\x07 \x01(\x03\x12\x1b\n\x13obj_object_down_sel\x18\x08 \x01(\x08\"\xf6\x08\n\nHwRadarObs\x12(\n\x06header\x18\x01 \x01(\x0b\x32\x18.deeproute.common.Header\x12\n\n\x02id\x18\x02 \x01(\x05\x12\x0b\n\x03\x61ge\x18\x03 \x01(\x05\x12\x16\n\x0elongitude_dist\x18\x04 \x01(\x01\x12\x14\n\x0clateral_dist\x18\x05 \x01(\x01\x12\x15\n\rlongitude_vel\x18\x06 \x01(\x01\x12\x13\n\x0blateral_vel\x18\x07 \x01(\x01\x12\x15\n\rlongitude_acc\x18\x08 \x01(\x01\x12\x13\n\x0blateral_acc\x18\t \x01(\x01\x12\x14\n\x0clon_dist_std\x18\n \x01(\x01\x12\x14\n\x0clat_dist_std\x18\x0b \x01(\x01\x12\x13\n\x0blon_vel_std\x18\x0c \x01(\x01\x12\x13\n\x0blat_vel_std\x18\r \x01(\x01\x12\x13\n\x0blon_acc_std\x18\x0e \x01(\x01\x12\x13\n\x0blat_acc_std\x18\x0f \x01(\x01\x12\x17\n\x0foritation_angle\x18\x10 \x01(\x01\x12\x0e\n\x06length\x18\x11 \x01(\x01\x12\r\n\x05width\x18\x12 \x01(\x01\x12\x0b\n\x03rcs\x18\x13 \x01(\x01\x12\x11\n\tprobexist\x18\x14 \x01(\x01\x12\x12\n\nconfidence\x18\x15 \x01(\x05\x12\x0f\n\x07latency\x18\x16 \x01(\x05\x12<\n\x07\x64ynprop\x18\x17 \x01(\x0e\x32+.deeproute.drivers.radar.HwRadarObs.DynProp\x12\x41\n\nmeas_state\x18\x18 \x01(\x0e\x32-.deeproute.drivers.radar.HwRadarObs.MeasState\x12I\n\x0eobstacle_class\x18\x19 \x01(\x0e\x32\x31.deeproute.drivers.radar.HwRadarObs.ObstacleClass\"\x8b\x01\n\x07\x44ynProp\x12\x16\n\x12\x44YNPROP_STATIONARY\x10\x00\x12\x12\n\x0e\x44YNPROP_MOVING\x10\x01\x12\x13\n\x0f\x44YNPROP_STOPPED\x10\x02\x12\x14\n\x10\x44YNPROP_CROSSING\x10\x03\x12\x13\n\x0f\x44YNPROP_UNKNOWN\x10\x04\x12\x14\n\x10\x44YNPROP_RESERVED\x10\x05\"j\n\tMeasState\x12\x16\n\x12MEAS_STATE_INVALID\x10\x00\x12\x12\n\x0eMEAS_STATE_NEW\x10\x01\x12\x17\n\x13MEAS_STATE_MEASURED\x10\x02\x12\x18\n\x14MEAS_STATE_PREDICTED\x10\x03\"\xdb\x01\n\rObstacleClass\x12\x1a\n\x16OBSTACLE_CLASS_UNKNOWN\x10\x00\x12\x16\n\x12OBSTACLE_CLASS_CAR\x10\x01\x12\x1d\n\x19OBSTACLE_CLASS_RESERVED_1\x10\x02\x12\x1d\n\x19OBSTACLE_CLASS_PEDESTRIAN\x10\x03\x12\x1d\n\x19OBSTACLE_CLASS_MOTORCYCLE\x10\x04\x12\x1d\n\x19OBSTACLE_CLASS_RESERVED_2\x10\x05\x12\x1a\n\x16OBSTACLE_CLASS_CYCLIST\x10\x06\"\xcb\n\n\rContiRadarObs\x12(\n\x06header\x18\x01 \x01(\x0b\x32\x18.deeproute.common.Header\x12\x12\n\nis_cluster\x18\x02 \x01(\x08\x12\x13\n\x0bobstacle_id\x18\x03 \x01(\x05\x12\x16\n\x0elongitude_dist\x18\x04 \x01(\x01\x12\x14\n\x0clateral_dist\x18\x05 \x01(\x01\x12\x15\n\rlongitude_vel\x18\x06 \x01(\x01\x12\x13\n\x0blateral_vel\x18\x07 \x01(\x01\x12\x0b\n\x03rcs\x18\x08 \x01(\x01\x12?\n\x07\x64ynprop\x18\t \x01(\x0e\x32..deeproute.drivers.radar.ContiRadarObs.DynProp\x12\x1a\n\x12longitude_dist_rms\x18\n \x01(\x01\x12\x18\n\x10lateral_dist_rms\x18\x0b \x01(\x01\x12\x19\n\x11longitude_vel_rms\x18\x0c \x01(\x01\x12\x17\n\x0flateral_vel_rms\x18\r \x01(\x01\x12\x11\n\tprobexist\x18\x0e \x01(\x01\x12\x44\n\nmeas_state\x18\x0f \x01(\x0e\x32\x30.deeproute.drivers.radar.ContiRadarObs.MeasState\x12\x17\n\x0flongitude_accel\x18\x10 \x01(\x01\x12\x15\n\rlateral_accel\x18\x11 \x01(\x01\x12\x17\n\x0foritation_angle\x18\x12 \x01(\x01\x12\x1b\n\x13longitude_accel_rms\x18\x13 \x01(\x01\x12\x19\n\x11lateral_accel_rms\x18\x14 \x01(\x01\x12\x1b\n\x13oritation_angle_rms\x18\x15 \x01(\x01\x12\x0e\n\x06length\x18\x16 \x01(\x01\x12\r\n\x05width\x18\x17 \x01(\x01\x12L\n\x0eobstacle_class\x18\x18 \x01(\x0e\x32\x34.deeproute.drivers.radar.ContiRadarObs.ObstacleClass\"\xd5\x01\n\x07\x44ynProp\x12\x12\n\x0e\x44YNPROP_MOVING\x10\x00\x12\x16\n\x12\x44YNPROP_STATIONARY\x10\x01\x12\x14\n\x10\x44YNPROP_ONCOMING\x10\x02\x12 \n\x1c\x44YNPROP_STATIONARY_CANDIDATE\x10\x03\x12\x13\n\x0f\x44YNPROP_UNKNOWN\x10\x04\x12\x1f\n\x1b\x44YNPROP_CROSSING_STATIONARY\x10\x05\x12\x1b\n\x17\x44YNPROP_CROSSING_MOVING\x10\x06\x12\x13\n\x0f\x44YNPROP_STOPPED\x10\x07\"\xab\x01\n\tMeasState\x12\x16\n\x12MEAS_STATE_DELETED\x10\x00\x12\x12\n\x0eMEAS_STATE_NEW\x10\x01\x12\x17\n\x13MEAS_STATE_MEASURED\x10\x02\x12\x18\n\x14MEAS_STATE_PREDICTED\x10\x03\x12 \n\x1cMEAS_STATE_DELETED_FOR_MERGE\x10\x04\x12\x1d\n\x19MEAS_STATE_NEW_FROM_MERGE\x10\x05\"\xea\x01\n\rObstacleClass\x12\x18\n\x14OBSTACLE_CLASS_POINT\x10\x00\x12\x16\n\x12OBSTACLE_CLASS_CAR\x10\x01\x12\x18\n\x14OBSTACLE_CLASS_TRUCK\x10\x02\x12\x1d\n\x19OBSTACLE_CLASS_PEDESTRIAN\x10\x03\x12\x1d\n\x19OBSTACLE_CLASS_MOTORCYCLE\x10\x04\x12\x1a\n\x16OBSTACLE_CLASS_BICYCLE\x10\x05\x12\x17\n\x13OBSTACLE_CLASS_WIDE\x10\x06\x12\x1a\n\x16OBSTACLE_CLASS_UNKNOWN\x10\x07\"\xd4\x01\n\x0cHwRadarRoads\x12(\n\x06header\x18\x01 \x01(\x0b\x32\x18.deeproute.common.Header\x12\n\n\x02id\x18\x02 \x01(\x05\x12\x13\n\x0bpoly_coef_0\x18\x03 \x01(\x01\x12\x13\n\x0bpoly_coef_1\x18\x04 \x01(\x01\x12\x13\n\x0bpoly_coef_2\x18\x05 \x01(\x01\x12\x13\n\x0bpoly_coef_3\x18\x06 \x01(\x01\x12\x12\n\nconfidence\x18\x07 \x01(\x05\x12\x13\n\x0bstart_point\x18\x08 \x01(\x01\x12\x11\n\tend_point\x18\t \x01(\x01\"\x8c\x0c\n\x08RadarObs\x12(\n\x06header\x18\x01 \x01(\x0b\x32\x18.deeproute.common.Header\x12\n\n\x02id\x18\x02 \x01(\x05\x12\x0b\n\x03\x61ge\x18\x03 \x01(\x05\x12\x16\n\x0elongitude_dist\x18\x04 \x01(\x01\x12\x14\n\x0clateral_dist\x18\x05 \x01(\x01\x12\x15\n\rlongitude_vel\x18\x06 \x01(\x01\x12\x13\n\x0blateral_vel\x18\x07 \x01(\x01\x12\x15\n\rlongitude_acc\x18\x08 \x01(\x01\x12\x13\n\x0blateral_acc\x18\t \x01(\x01\x12\x14\n\x0clon_dist_std\x18\n \x01(\x01\x12\x14\n\x0clat_dist_std\x18\x0b \x01(\x01\x12\x13\n\x0blon_vel_std\x18\x0c \x01(\x01\x12\x13\n\x0blat_vel_std\x18\r \x01(\x01\x12\x13\n\x0blon_acc_std\x18\x0e \x01(\x01\x12\x13\n\x0blat_acc_std\x18\x0f \x01(\x01\x12\x17\n\x0foritation_angle\x18\x10 \x01(\x01\x12\x1b\n\x13oritation_angle_std\x18\x11 \x01(\x01\x12\x0e\n\x06length\x18\x12 \x01(\x01\x12\r\n\x05width\x18\x13 \x01(\x01\x12\x0e\n\x06height\x18\x14 \x01(\x01\x12\x12\n\nlength_std\x18\x15 \x01(\x01\x12\x11\n\twidth_std\x18\x16 \x01(\x01\x12\x12\n\nheight_std\x18\x17 \x01(\x01\x12\x0b\n\x03rcs\x18\x18 \x01(\x01\x12\x15\n\robstacle_prob\x18\x19 \x01(\x01\x12\x12\n\nconfidence\x18\x1a \x01(\x05\x12\x0f\n\x07latency\x18\x1b \x01(\x05\x12:\n\x07\x64ynprop\x18\x1c \x01(\x0e\x32).deeproute.drivers.radar.RadarObs.DynProp\x12?\n\nmeas_state\x18\x1d \x01(\x0e\x32+.deeproute.drivers.radar.RadarObs.MeasState\x12G\n\x0eobstacle_class\x18\x1e \x01(\x0e\x32/.deeproute.drivers.radar.RadarObs.ObstacleClass\x12\x1a\n\x0cis_rel_speed\x18\x1f \x01(\x08:\x04true\x12?\n\nradar_type\x18  \x01(\x0e\x32+.deeproute.drivers.radar.RadarObs.RadarType\"\xac\x01\n\tRadarType\x12\n\n\x06UNKOWN\x10\x00\x12\r\n\tCONTI_408\x10\x01\x12\x0e\n\nHW_MRR_631\x10\x02\x12\x0e\n\nHW_SRR_621\x10\x03\x12\x0b\n\x07\x44SV_SRR\x10\x04\x12\x0b\n\x07\x44SV_MRR\x10\x05\x12\r\n\tCONTI_308\x10\x06\x12\r\n\tCONTI_430\x10\x07\x12\x15\n\x11\x42YD_SENSETECH_MRR\x10\x08\x12\x15\n\x11\x42YD_SENSETECH_SRR\x10\t\"\xa0\x01\n\x07\x44ynProp\x12\x16\n\x12\x44YNPROP_STATIONARY\x10\x00\x12\x12\n\x0e\x44YNPROP_MOVING\x10\x01\x12\x13\n\x0f\x44YNPROP_STOPPED\x10\x02\x12\x14\n\x10\x44YNPROP_CROSSING\x10\x03\x12\x14\n\x10\x44YNPROP_ONCOMING\x10\x04\x12\x13\n\x0f\x44YNPROP_UNKNOWN\x10\x05\x12\x13\n\x0f\x44YNPROP_INVALID\x10\x06\"\x82\x01\n\tMeasState\x12\x12\n\x0eMEAS_STATE_NEW\x10\x00\x12\x17\n\x13MEAS_STATE_MEASURED\x10\x01\x12\x18\n\x14MEAS_STATE_PREDICTED\x10\x02\x12\x16\n\x12MEAS_STATE_UNKNOWN\x10\x03\x12\x16\n\x12MEAS_STATE_INVALID\x10\x04\"\xd3\x01\n\rObstacleClass\x12\x1d\n\x19OBSTACLE_CLASS_PEDESTRIAN\x10\x00\x12\x1a\n\x16OBSTACLE_CLASS_CYCLIST\x10\x01\x12\x1d\n\x19OBSTACLE_CLASS_MOTORCYCLE\x10\x02\x12\x16\n\x12OBSTACLE_CLASS_CAR\x10\x03\x12\x18\n\x14OBSTACLE_CLASS_TRUCK\x10\x04\x12\x1a\n\x16OBSTACLE_CLASS_UNKNOWN\x10\x05\x12\x1a\n\x16OBSTACLE_CLASS_INVAILD\x10\x06\"\x97\x01\n\x07GMState\x12\r\n\x05radar\x18\x01 \x01(\t\x12\x0f\n\x07obs_num\x18\x02 \x01(\r\x12\x15\n\rblock_counter\x18\x03 \x01(\r\x12\x13\n\x0b\x65rror_state\x18\x04 \x01(\r\x12\x13\n\x0b\x62lind_state\x18\x05 \x01(\r\x12\x14\n\x0c\x61s_timestamp\x18\x06 \x01(\x04\x12\x15\n\rhdr_timestamp\x18\x07 \x01(\r\"\x8b\x04\n\x05Radar\x12(\n\x06header\x18\x01 \x01(\x0b\x32\x18.deeproute.common.Header\x12\x38\n\x08\x63ontiobs\x18\x02 \x03(\x0b\x32&.deeproute.drivers.radar.ContiRadarObs\x12\x38\n\x0bradar_state\x18\x03 \x01(\x0b\x32#.deeproute.drivers.radar.RadarState\x12G\n\x13\x63luster_list_status\x18\x04 \x01(\x0b\x32*.deeproute.drivers.radar.ClusterListHeader\x12\x45\n\x12object_list_status\x18\x05 \x01(\x0b\x32).deeproute.drivers.radar.ObjectListHeader\x12\x32\n\x05hwobs\x18\x06 \x03(\x0b\x32#.deeproute.drivers.radar.HwRadarObs\x12\x36\n\x07hwroads\x18\x07 \x03(\x0b\x32%.deeproute.drivers.radar.HwRadarRoads\x12\x34\n\tradar_obs\x18\x08 \x03(\x0b\x32!.deeproute.drivers.radar.RadarObs\x12\x32\n\x08gm_state\x18\t \x03(\x0b\x32 .deeproute.drivers.radar.GMState')



_RADARSTATE = DESCRIPTOR.message_types_by_name['RadarState']
_CLUSTERLISTHEADER = DESCRIPTOR.message_types_by_name['ClusterListHeader']
_OBJECTLISTHEADER = DESCRIPTOR.message_types_by_name['ObjectListHeader']
_HWRADAROBS = DESCRIPTOR.message_types_by_name['HwRadarObs']
_CONTIRADAROBS = DESCRIPTOR.message_types_by_name['ContiRadarObs']
_HWRADARROADS = DESCRIPTOR.message_types_by_name['HwRadarRoads']
_RADAROBS = DESCRIPTOR.message_types_by_name['RadarObs']
_GMSTATE = DESCRIPTOR.message_types_by_name['GMState']
_RADAR = DESCRIPTOR.message_types_by_name['Radar']
_RADARSTATE_OUTPUTTYPE = _RADARSTATE.enum_types_by_name['OutputType']
_RADARSTATE_RCSTHRESHOLD = _RADARSTATE.enum_types_by_name['RcsThreshold']
_RADARSTATE_ERRORSTATE = _RADARSTATE.enum_types_by_name['ErrorState']
_RADARSTATE_CALIBRATIONSTATE = _RADARSTATE.enum_types_by_name['CalibrationState']
_RADARSTATE_SENSORID = _RADARSTATE.enum_types_by_name['SensorId']
_RADARSTATE_RADARWORKSTATUS = _RADARSTATE.enum_types_by_name['RadarWorkStatus']
_RADARSTATE_MOTIONRXSTATE = _RADARSTATE.enum_types_by_name['MotionRxState']
_HWRADAROBS_DYNPROP = _HWRADAROBS.enum_types_by_name['DynProp']
_HWRADAROBS_MEASSTATE = _HWRADAROBS.enum_types_by_name['MeasState']
_HWRADAROBS_OBSTACLECLASS = _HWRADAROBS.enum_types_by_name['ObstacleClass']
_CONTIRADAROBS_DYNPROP = _CONTIRADAROBS.enum_types_by_name['DynProp']
_CONTIRADAROBS_MEASSTATE = _CONTIRADAROBS.enum_types_by_name['MeasState']
_CONTIRADAROBS_OBSTACLECLASS = _CONTIRADAROBS.enum_types_by_name['ObstacleClass']
_RADAROBS_RADARTYPE = _RADAROBS.enum_types_by_name['RadarType']
_RADAROBS_DYNPROP = _RADAROBS.enum_types_by_name['DynProp']
_RADAROBS_MEASSTATE = _RADAROBS.enum_types_by_name['MeasState']
_RADAROBS_OBSTACLECLASS = _RADAROBS.enum_types_by_name['ObstacleClass']
RadarState = _reflection.GeneratedProtocolMessageType('RadarState', (_message.Message,), {
  'DESCRIPTOR' : _RADARSTATE,
  '__module__' : 'drivers.radar.radar_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.drivers.radar.RadarState)
  })
_sym_db.RegisterMessage(RadarState)

ClusterListHeader = _reflection.GeneratedProtocolMessageType('ClusterListHeader', (_message.Message,), {
  'DESCRIPTOR' : _CLUSTERLISTHEADER,
  '__module__' : 'drivers.radar.radar_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.drivers.radar.ClusterListHeader)
  })
_sym_db.RegisterMessage(ClusterListHeader)

ObjectListHeader = _reflection.GeneratedProtocolMessageType('ObjectListHeader', (_message.Message,), {
  'DESCRIPTOR' : _OBJECTLISTHEADER,
  '__module__' : 'drivers.radar.radar_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.drivers.radar.ObjectListHeader)
  })
_sym_db.RegisterMessage(ObjectListHeader)

HwRadarObs = _reflection.GeneratedProtocolMessageType('HwRadarObs', (_message.Message,), {
  'DESCRIPTOR' : _HWRADAROBS,
  '__module__' : 'drivers.radar.radar_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.drivers.radar.HwRadarObs)
  })
_sym_db.RegisterMessage(HwRadarObs)

ContiRadarObs = _reflection.GeneratedProtocolMessageType('ContiRadarObs', (_message.Message,), {
  'DESCRIPTOR' : _CONTIRADAROBS,
  '__module__' : 'drivers.radar.radar_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.drivers.radar.ContiRadarObs)
  })
_sym_db.RegisterMessage(ContiRadarObs)

HwRadarRoads = _reflection.GeneratedProtocolMessageType('HwRadarRoads', (_message.Message,), {
  'DESCRIPTOR' : _HWRADARROADS,
  '__module__' : 'drivers.radar.radar_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.drivers.radar.HwRadarRoads)
  })
_sym_db.RegisterMessage(HwRadarRoads)

RadarObs = _reflection.GeneratedProtocolMessageType('RadarObs', (_message.Message,), {
  'DESCRIPTOR' : _RADAROBS,
  '__module__' : 'drivers.radar.radar_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.drivers.radar.RadarObs)
  })
_sym_db.RegisterMessage(RadarObs)

GMState = _reflection.GeneratedProtocolMessageType('GMState', (_message.Message,), {
  'DESCRIPTOR' : _GMSTATE,
  '__module__' : 'drivers.radar.radar_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.drivers.radar.GMState)
  })
_sym_db.RegisterMessage(GMState)

Radar = _reflection.GeneratedProtocolMessageType('Radar', (_message.Message,), {
  'DESCRIPTOR' : _RADAR,
  '__module__' : 'drivers.radar.radar_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.drivers.radar.Radar)
  })
_sym_db.RegisterMessage(Radar)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _RADARSTATE._serialized_start=76
  _RADARSTATE._serialized_end=1776
  _RADARSTATE_OUTPUTTYPE._serialized_start=817
  _RADARSTATE_OUTPUTTYPE._serialized_end=925
  _RADARSTATE_RCSTHRESHOLD._serialized_start=927
  _RADARSTATE_RCSTHRESHOLD._serialized_end=1030
  _RADARSTATE_ERRORSTATE._serialized_start=1033
  _RADARSTATE_ERRORSTATE._serialized_end=1177
  _RADARSTATE_CALIBRATIONSTATE._serialized_start=1179
  _RADARSTATE_CALIBRATIONSTATE._serialized_end=1288
  _RADARSTATE_SENSORID._serialized_start=1291
  _RADARSTATE_SENSORID._serialized_end=1510
  _RADARSTATE_RADARWORKSTATUS._serialized_start=1513
  _RADARSTATE_RADARWORKSTATUS._serialized_end=1672
  _RADARSTATE_MOTIONRXSTATE._serialized_start=1674
  _RADARSTATE_MOTIONRXSTATE._serialized_end=1776
  _CLUSTERLISTHEADER._serialized_start=1778
  _CLUSTERLISTHEADER._serialized_end=1883
  _OBJECTLISTHEADER._serialized_start=1886
  _OBJECTLISTHEADER._serialized_end=2101
  _HWRADAROBS._serialized_start=2104
  _HWRADAROBS._serialized_end=3246
  _HWRADAROBS_DYNPROP._serialized_start=2777
  _HWRADAROBS_DYNPROP._serialized_end=2916
  _HWRADAROBS_MEASSTATE._serialized_start=2918
  _HWRADAROBS_MEASSTATE._serialized_end=3024
  _HWRADAROBS_OBSTACLECLASS._serialized_start=3027
  _HWRADAROBS_OBSTACLECLASS._serialized_end=3246
  _CONTIRADAROBS._serialized_start=3249
  _CONTIRADAROBS._serialized_end=4604
  _CONTIRADAROBS_DYNPROP._serialized_start=3980
  _CONTIRADAROBS_DYNPROP._serialized_end=4193
  _CONTIRADAROBS_MEASSTATE._serialized_start=4196
  _CONTIRADAROBS_MEASSTATE._serialized_end=4367
  _CONTIRADAROBS_OBSTACLECLASS._serialized_start=4370
  _CONTIRADAROBS_OBSTACLECLASS._serialized_end=4604
  _HWRADARROADS._serialized_start=4607
  _HWRADARROADS._serialized_end=4819
  _RADAROBS._serialized_start=4822
  _RADAROBS._serialized_end=6370
  _RADAROBS_RADARTYPE._serialized_start=5688
  _RADAROBS_RADARTYPE._serialized_end=5860
  _RADAROBS_DYNPROP._serialized_start=5863
  _RADAROBS_DYNPROP._serialized_end=6023
  _RADAROBS_MEASSTATE._serialized_start=6026
  _RADAROBS_MEASSTATE._serialized_end=6156
  _RADAROBS_OBSTACLECLASS._serialized_start=6159
  _RADAROBS_OBSTACLECLASS._serialized_end=6370
  _GMSTATE._serialized_start=6373
  _GMSTATE._serialized_end=6524
  _RADAR._serialized_start=6527
  _RADAR._serialized_end=7050
# @@protoc_insertion_point(module_scope)
