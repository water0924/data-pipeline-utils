# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: perception/perception_nn.proto
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from proto.common import geometry_pb2 as common_dot_geometry__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x1eperception/perception_nn.proto\x12\x14\x64\x65\x65proute.perception\x1a\x15\x63ommon/geometry.proto\"7\n\x07NnLayer\x12\x0c\n\x04name\x18\x01 \x01(\t\x12\r\n\x05shape\x18\x02 \x03(\x05\x12\x0f\n\x07nn_data\x18\x05 \x01(\x0c\"\xa7\x01\n\x07NnFrame\x12\x11\n\ttimestamp\x18\x01 \x01(\x03\x12)\n\x02nn\x18\x03 \x03(\x0b\x32\x1d.deeproute.perception.NnLayer\x12+\n\x08position\x18\x04 \x01(\x0b\x32\x19.deeproute.common.Point3D\x12\x31\n\x0eroll_pitch_yaw\x18\x05 \x01(\x0b\x32\x19.deeproute.common.Point3D')



_NNLAYER = DESCRIPTOR.message_types_by_name['NnLayer']
_NNFRAME = DESCRIPTOR.message_types_by_name['NnFrame']
NnLayer = _reflection.GeneratedProtocolMessageType('NnLayer', (_message.Message,), {
  'DESCRIPTOR' : _NNLAYER,
  '__module__' : 'perception.perception_nn_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.perception.NnLayer)
  })
_sym_db.RegisterMessage(NnLayer)

NnFrame = _reflection.GeneratedProtocolMessageType('NnFrame', (_message.Message,), {
  'DESCRIPTOR' : _NNFRAME,
  '__module__' : 'perception.perception_nn_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.perception.NnFrame)
  })
_sym_db.RegisterMessage(NnFrame)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _NNLAYER._serialized_start=79
  _NNLAYER._serialized_end=134
  _NNFRAME._serialized_start=137
  _NNFRAME._serialized_end=304
# @@protoc_insertion_point(module_scope)
