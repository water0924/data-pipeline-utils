# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: dsm/dsm.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\rdsm/dsm.proto\x12\x06\x64r.dsm\"e\n\x07Trigger\x12!\n\x04type\x18\x01 \x01(\x0e\x32\x13.dr.dsm.TriggerType\x12\x0c\n\x04mode\x18\x02 \x01(\x05\x12\x17\n\x0f\x63ontext_payload\x18\x03 \x01(\t\x12\x10\n\x08trans_id\x18\x04 \x01(\t\"f\n\rStateNotifier\x12\x10\n\x08to_state\x18\x01 \x01(\x05\x12\x11\n\tsub_state\x18\x02 \x01(\x05\x12\x30\n\x10switch_mode_step\x18\x03 \x01(\x0e\x32\x16.dr.dsm.SwitchModeStep\"\xd5\x01\n\x12TriggerOutNotifier\x12\x1c\n\x05state\x18\x01 \x01(\x0e\x32\r.dr.dsm.State\x12\x1e\n\x04mode\x18\x02 \x01(\x0e\x32\x10.dr.dsm.SubState\x12+\n\radapter_state\x18\x03 \x01(\x0e\x32\x14.dr.dsm.AdapterState\x12)\n\x0cupload_state\x18\x04 \x01(\x0e\x32\x13.dr.dsm.UploadState\x12)\n\x0crecord_state\x18\x05 \x01(\x0e\x32\x13.dr.dsm.RecordState\"[\n\tTriggerRP\x12\x10\n\x08trans_id\x18\x01 \x01(\t\x12$\n\x0breturn_code\x18\x02 \x01(\x0e\x32\x0f.dr.dsm.DSMCode\x12\x16\n\x0e\x66\x61iled_modules\x18\x03 \x03(\t\"\xc0\x01\n\x0cTrackingData\x12\x34\n\x0btime_record\x18\x01 \x03(\x0b\x32\x1f.dr.dsm.TrackingData.TimeRecord\x12\x12\n\ntime_stamp\x18\x02 \x01(\x03\x1a\x66\n\nTimeRecord\x12\x13\n\x0bmodule_name\x18\x01 \x01(\t\x12\x11\n\tboot_time\x18\x02 \x01(\x03\x12\x17\n\x0f\x64\x61ta_ready_time\x18\x03 \x01(\x03\x12\x17\n\x0f\x66\x61st_topic_time\x18\x04 \x01(\x03\"\x9c\x01\n\x0fTimeRecordToWeb\x12\x14\n\x0cmodule_names\x18\x01 \x03(\t\x12\x12\n\nboot_times\x18\x02 \x03(\x03\x12\x18\n\x10\x64\x61ta_ready_times\x18\x03 \x03(\x03\x12\x18\n\x10\x66\x61st_topic_times\x18\x04 \x03(\x03\x12+\n\x0brecord_type\x18\x05 \x01(\x0e\x32\x16.dr.dsm.TimeRecordType\"\x9c\x01\n\x10GetModuleStateRP\x12?\n\x0cmodule_state\x18\x01 \x03(\x0b\x32).dr.dsm.GetModuleStateRP.ModuleStateEntry\x1aG\n\x10ModuleStateEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\"\n\x05value\x18\x02 \x01(\x0e\x32\x13.dr.dsm.ModuleState:\x02\x38\x01\"G\n\x0cUpdateModule\x12\x13\n\x0bmodule_name\x18\x01 \x01(\t\x12\"\n\x05state\x18\x02 \x01(\x0e\x32\x13.dr.dsm.ModuleState\"j\n\nOTASetting\x12\x30\n\x06source\x18\x01 \x01(\x0e\x32 .dr.dsm.OTASetting.TriggerSource\"*\n\rTriggerSource\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0c\n\x08SAFE_APP\x10\x01\"2\n\rSetRecordMode\x12!\n\x04mode\x18\x01 \x01(\x0e\x32\x13.dr.dsm.RecordState\")\n\x07SetMode\x12\x1e\n\x04mode\x18\x01 \x01(\x0e\x32\x10.dr.dsm.SubState\"\xf8\x03\n\nDSMRequest\x12\n\n\x02id\x18\x01 \x01(\t\x12\'\n\x0b\x64sm_trigger\x18\xe9\x07 \x01(\x0b\x32\x0f.dr.dsm.TriggerH\x00\x12\x1c\n\x11get_tracking_data\x18\xea\x07 \x01(\x08H\x00\x12.\n\rupdate_module\x18\xeb\x07 \x01(\x0b\x32\x14.dr.dsm.UpdateModuleH\x00\x12\x1b\n\x10get_module_state\x18\xec\x07 \x01(\x08H\x00\x12\x35\n\x11off_latency_start\x18\xed\x07 \x01(\x0b\x32\x17.dr.dsm.OffLatencyStartH\x00\x12\x31\n\x0foff_latency_end\x18\xee\x07 \x01(\x0b\x32\x15.dr.dsm.OffLatencyEndH\x00\x12*\n\x0bota_setting\x18\xef\x07 \x01(\x0b\x32\x12.dr.dsm.OTASettingH\x00\x12\x32\n\x0f\x61\x64\x61pter_command\x18\xf0\x07 \x01(\x0b\x32\x16.dr.dsm.AdapterCommandH\x00\x12\x31\n\x0fset_record_mode\x18\xf1\x07 \x01(\x0b\x32\x15.dr.dsm.SetRecordModeH\x00\x12$\n\x08set_mode\x18\xf2\x07 \x01(\x0b\x32\x0f.dr.dsm.SetModeH\x00\x12\x1c\n\x11reset_dem_command\x18\xf3\x07 \x01(\x08H\x00\x42\t\n\x07request\"\xdd\x01\n\x0b\x44SMResponse\x12\n\n\x02id\x18\x01 \x01(\t\x12#\n\nerror_code\x18\x02 \x01(\x0e\x32\x0f.dr.dsm.DSMCode\x12(\n\ntrigger_rp\x18\xe9\x07 \x01(\x0b\x32\x11.dr.dsm.TriggerRPH\x00\x12\x31\n\x10tracking_data_rp\x18\xea\x07 \x01(\x0b\x32\x14.dr.dsm.TrackingDataH\x00\x12\x34\n\x0fmodule_state_rp\x18\xeb\x07 \x01(\x0b\x32\x18.dr.dsm.GetModuleStateRPH\x00\x42\n\n\x08response\"Z\n\x0fOffLatencyStart\x12\x16\n\x0etransaction_id\x18\x01 \x01(\t\x12\x13\n\x0bmodule_name\x18\x02 \x01(\t\x12\x1a\n\x12\x65stimate_cost_time\x18\x03 \x01(\x03\"<\n\rOffLatencyEnd\x12\x16\n\x0etransaction_id\x18\x01 \x01(\t\x12\x13\n\x0bmodule_name\x18\x02 \x01(\t\"j\n\x0bTransaction\x12\x16\n\x0etransaction_id\x18\x01 \x01(\t\x12\x12\n\nstart_time\x18\x02 \x01(\x03\x12!\n\x07pre_off\x18\n \x01(\x0b\x32\x0e.dr.dsm.PreOffH\x00\x42\x0c\n\ntrans_info\":\n\x06PreOff\x12\x15\n\rmax_wait_time\x18\x01 \x01(\x03\x12\x19\n\x11request_wait_time\x18\x02 \x01(\x03\"\x86\x01\n\x11StartupFailReport\x12\x15\n\rmeta_override\x18\x01 \x01(\r\x12\x13\n\x0bmeta_driver\x18\x02 \x01(\t\x12\x16\n\x0emeta_trip_name\x18\x03 \x01(\t\x12\x17\n\x0fmeta_event_time\x18\x04 \x01(\x04\x12\x14\n\x0c\x66\x61iled_count\x18\x05 \x01(\r\"\x97\x01\n\x0e\x41\x64\x61pterCommand\x12\x33\n\x07\x63ommand\x18\x01 \x01(\x0e\x32\".dr.dsm.AdapterCommand.CommandType\"P\n\x0b\x43ommandType\x12\x18\n\x14UNKNOWN_COMMAND_TYPE\x10\x00\x12\x12\n\x0e\x45NABLE_ADAPTER\x10\x01\x12\x13\n\x0f\x44ISABLE_ADAPTER\x10\x02\"/\n\x07SmartSM\x12$\n\x05state\x18\x01 \x01(\x0e\x32\x15.dr.dsm.SmartSMStates\"\xd4\x01\n\x16TopicSupervisionStatus\x12\x1c\n\x14state_change_time_ms\x18\x01 \x01(\x03\x12]\n\x19module_topic_ready_status\x18\x02 \x03(\x0b\x32:.dr.dsm.TopicSupervisionStatus.ModuleTopicReadyStatusEntry\x1a=\n\x1bModuleTopicReadyStatusEntry\x12\x0b\n\x03key\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x08:\x02\x38\x01*\x86\x02\n\x0bTriggerType\x12\x18\n\x14UNKNOWN_TRIGGER_TYPE\x10\x00\x12\x12\n\x0eWORKING_SWITCH\x10\x01\x12\r\n\tEOL_START\x10\x02\x12\x0c\n\x08\x45OL_QUIT\x10\x03\x12\x10\n\x0c\x44\x45\x42UG_SWITCH\x10\x04\x12\r\n\tOTA_START\x10\x05\x12\x0c\n\x08OTA_QUIT\x10\x06\x12\x1c\n\x18ONLINE_CALIBRATION_START\x10\x07\x12\x1b\n\x17ONLINE_CALIBRATION_QUIT\x10\x08\x12\r\n\tSTOP_TASK\x10\t\x12\x18\n\x14\x44\x41TA_COLLECTOR_START\x10\x0b\x12\x19\n\x15IMU_CALIBRATION_START\x10\x0c*<\n\x0eSwitchModeStep\x12\x0c\n\x08\x43OMPLETE\x10\x00\x12\t\n\x05START\x10\x01\x12\x11\n\rSWITCH_FAILED\x10\x02*\xa5\x01\n\x05State\x12\x11\n\rUNKNOWN_STATE\x10\x00\x12\x07\n\x03OFF\x10\x01\x12\x0b\n\x07WORKING\x10\x02\x12\x07\n\x03\x45OL\x10\x03\x12\t\n\x05\x44\x45\x42UG\x10\x04\x12\x07\n\x03OTA\x10\x05\x12\x16\n\x12ONLINE_CALIBRATION\x10\x06\x12\x08\n\x04IDLE\x10\x07\x12\x0b\n\x07PRE_OFF\x10\x08\x12\x12\n\x0e\x44\x41TA_COLLECTOR\x10\t\x12\x13\n\x0fIMU_CALIBRATION\x10\n*\xbb\x04\n\x08SubState\x12\x14\n\x10UNKNOWN_SUBSTATE\x10\x00\x12\x10\n\x0c\x41LL_FUNCTION\x10\x01\x12\r\n\tLOW_POWER\x10\x02\x12\x0f\n\x0bPURE_VISION\x10\x03\x12\x11\n\rSENTINEL_MODE\x10\x04\x12\x15\n\x11GWM_SENTINEL_MODE\x10\x05\x12\x15\n\x11\x41LL_FUNCTION_TEST\x10\x06\x12\x1b\n\x13INU_EOL_CALIBRATION\x10\x64\x1a\x02\x08\x01\x12\x1f\n\x17INU_DYNAMIC_CALIBRATION\x10\x65\x1a\x02\x08\x01\x12\x17\n\x0f\x45OL_PRE_PROCESS\x10\x66\x1a\x02\x08\x01\x12\x13\n\x0f\x45OL_CALIBRATION\x10g\x12\x11\n\rEOL_TEST_MODE\x10h\x12\x08\n\x03\x41\x45\x42\x10\xc8\x01\x12\x0c\n\x07\x44RIVING\x10\xc9\x01\x12\x0c\n\x07PARKING\x10\xca\x01\x12\t\n\x04\x41\x44\x41S\x10\xcb\x01\x12\x12\n\rCONTROL_CALIB\x10\xcc\x01\x12\r\n\x08OTA_MODE\x10\xac\x02\x12\x1c\n\x17ONLINE_CALIBRATION_MODE\x10\x90\x03\x12\x0e\n\tIDLE_MODE\x10\xf4\x03\x12\x11\n\x0cPRE_OFF_MODE\x10\xa7\x04\x12\x16\n\rWAIT_OFF_MODE\x10\xa8\x04\x1a\x02\x08\x01\x12\x1b\n\x16\x44\x41TA_COLLECTOR_PARKING\x10\xd8\x04\x12%\n\x1c\x44\x41TA_COLLECTOR_FACTORY_CALIB\x10\xd9\x04\x1a\x02\x08\x01\x12\x1b\n\x16\x44\x41TA_COLLECTOR_DRIVING\x10\xda\x04\x12\x19\n\x14IMU_CALIBRATION_MODE\x10\x8a\x05*S\n\x0c\x41\x64\x61pterState\x12\x19\n\x15UNKNOWN_ADAPTER_STATE\x10\x00\x12\x12\n\x0e\x41\x44\x41PTER_ACTIVE\x10\x01\x12\x14\n\x10\x41\x44\x41PTER_DISABLED\x10\x02*B\n\x0bUploadState\x12\x18\n\x14UNKNOWN_UPLOAD_STATE\x10\x00\x12\r\n\tUP_ACTIVE\x10\x01\x12\n\n\x06UP_OFF\x10\x02*j\n\x0bRecordState\x12\x18\n\x14UNKNOWN_RECORD_STATE\x10\x00\x12\x14\n\x10RECORD_NO_SENTRY\x10\x01\x12\x16\n\x12RECORD_ONLY_SENTRY\x10\x02\x12\x13\n\x0fRECORD_DISABLED\x10\x03*\xd7\x01\n\x07\x44SMCode\x12\x0b\n\x07SUCCESS\x10\x00\x12\x0b\n\x07\x46\x41ILURE\x10\x01\x12\x0e\n\nAD_ACTIVED\x10\x02\x12\x0f\n\x0bINIT_FAILED\x10\x03\x12\x11\n\rIN_TRANSITION\x10\x04\x12\x16\n\x12INVALID_TRANSITION\x10\x05\x12\x14\n\x10SENTINEL_DEFAULT\x10\x0b\x12\x1a\n\x16SENTINEL_GEAR_NOT_IN_P\x10\x0c\x12\x1a\n\x16SENTINEL_NO_DISK_SPACE\x10\r\x12\x18\n\x14SENTINEL_BATTERY_LOW\x10\x0e*a\n\x0eTimeRecordType\x12\x0f\n\x0bTRT_UNKNOWN\x10\x00\x12\x12\n\x0eTRT_COLD_START\x10\x01\x12\x16\n\x12TRT_MODE_SWITCHING\x10\x02\x12\x12\n\x0eTRT_WARM_START\x10\x03*$\n\x0bModuleState\x12\n\n\x06MS_OFF\x10\x00\x12\t\n\x05MS_ON\x10\x01*w\n\rSmartSMStates\x12\r\n\tSMART_OFF\x10\x00\x12\x0e\n\nSMART_INIT\x10\x01\x12\x11\n\rSMART_WORKING\x10\x02\x12\x0e\n\nSMART_IDLE\x10\x03\x12\r\n\tSMART_OTA\x10\x04\x12\x15\n\x11SMART_CALIBRATION\x10\x05\x62\x06proto3')

_TRIGGERTYPE = DESCRIPTOR.enum_types_by_name['TriggerType']
TriggerType = enum_type_wrapper.EnumTypeWrapper(_TRIGGERTYPE)
_SWITCHMODESTEP = DESCRIPTOR.enum_types_by_name['SwitchModeStep']
SwitchModeStep = enum_type_wrapper.EnumTypeWrapper(_SWITCHMODESTEP)
_STATE = DESCRIPTOR.enum_types_by_name['State']
State = enum_type_wrapper.EnumTypeWrapper(_STATE)
_SUBSTATE = DESCRIPTOR.enum_types_by_name['SubState']
SubState = enum_type_wrapper.EnumTypeWrapper(_SUBSTATE)
_ADAPTERSTATE = DESCRIPTOR.enum_types_by_name['AdapterState']
AdapterState = enum_type_wrapper.EnumTypeWrapper(_ADAPTERSTATE)
_UPLOADSTATE = DESCRIPTOR.enum_types_by_name['UploadState']
UploadState = enum_type_wrapper.EnumTypeWrapper(_UPLOADSTATE)
_RECORDSTATE = DESCRIPTOR.enum_types_by_name['RecordState']
RecordState = enum_type_wrapper.EnumTypeWrapper(_RECORDSTATE)
_DSMCODE = DESCRIPTOR.enum_types_by_name['DSMCode']
DSMCode = enum_type_wrapper.EnumTypeWrapper(_DSMCODE)
_TIMERECORDTYPE = DESCRIPTOR.enum_types_by_name['TimeRecordType']
TimeRecordType = enum_type_wrapper.EnumTypeWrapper(_TIMERECORDTYPE)
_MODULESTATE = DESCRIPTOR.enum_types_by_name['ModuleState']
ModuleState = enum_type_wrapper.EnumTypeWrapper(_MODULESTATE)
_SMARTSMSTATES = DESCRIPTOR.enum_types_by_name['SmartSMStates']
SmartSMStates = enum_type_wrapper.EnumTypeWrapper(_SMARTSMSTATES)
UNKNOWN_TRIGGER_TYPE = 0
WORKING_SWITCH = 1
EOL_START = 2
EOL_QUIT = 3
DEBUG_SWITCH = 4
OTA_START = 5
OTA_QUIT = 6
ONLINE_CALIBRATION_START = 7
ONLINE_CALIBRATION_QUIT = 8
STOP_TASK = 9
DATA_COLLECTOR_START = 11
IMU_CALIBRATION_START = 12
COMPLETE = 0
START = 1
SWITCH_FAILED = 2
UNKNOWN_STATE = 0
OFF = 1
WORKING = 2
EOL = 3
DEBUG = 4
OTA = 5
ONLINE_CALIBRATION = 6
IDLE = 7
PRE_OFF = 8
DATA_COLLECTOR = 9
IMU_CALIBRATION = 10
UNKNOWN_SUBSTATE = 0
ALL_FUNCTION = 1
LOW_POWER = 2
PURE_VISION = 3
SENTINEL_MODE = 4
GWM_SENTINEL_MODE = 5
ALL_FUNCTION_TEST = 6
INU_EOL_CALIBRATION = 100
INU_DYNAMIC_CALIBRATION = 101
EOL_PRE_PROCESS = 102
EOL_CALIBRATION = 103
EOL_TEST_MODE = 104
AEB = 200
DRIVING = 201
PARKING = 202
ADAS = 203
CONTROL_CALIB = 204
OTA_MODE = 300
ONLINE_CALIBRATION_MODE = 400
IDLE_MODE = 500
PRE_OFF_MODE = 551
WAIT_OFF_MODE = 552
DATA_COLLECTOR_PARKING = 600
DATA_COLLECTOR_FACTORY_CALIB = 601
DATA_COLLECTOR_DRIVING = 602
IMU_CALIBRATION_MODE = 650
UNKNOWN_ADAPTER_STATE = 0
ADAPTER_ACTIVE = 1
ADAPTER_DISABLED = 2
UNKNOWN_UPLOAD_STATE = 0
UP_ACTIVE = 1
UP_OFF = 2
UNKNOWN_RECORD_STATE = 0
RECORD_NO_SENTRY = 1
RECORD_ONLY_SENTRY = 2
RECORD_DISABLED = 3
SUCCESS = 0
FAILURE = 1
AD_ACTIVED = 2
INIT_FAILED = 3
IN_TRANSITION = 4
INVALID_TRANSITION = 5
SENTINEL_DEFAULT = 11
SENTINEL_GEAR_NOT_IN_P = 12
SENTINEL_NO_DISK_SPACE = 13
SENTINEL_BATTERY_LOW = 14
TRT_UNKNOWN = 0
TRT_COLD_START = 1
TRT_MODE_SWITCHING = 2
TRT_WARM_START = 3
MS_OFF = 0
MS_ON = 1
SMART_OFF = 0
SMART_INIT = 1
SMART_WORKING = 2
SMART_IDLE = 3
SMART_OTA = 4
SMART_CALIBRATION = 5


_TRIGGER = DESCRIPTOR.message_types_by_name['Trigger']
_STATENOTIFIER = DESCRIPTOR.message_types_by_name['StateNotifier']
_TRIGGEROUTNOTIFIER = DESCRIPTOR.message_types_by_name['TriggerOutNotifier']
_TRIGGERRP = DESCRIPTOR.message_types_by_name['TriggerRP']
_TRACKINGDATA = DESCRIPTOR.message_types_by_name['TrackingData']
_TRACKINGDATA_TIMERECORD = _TRACKINGDATA.nested_types_by_name['TimeRecord']
_TIMERECORDTOWEB = DESCRIPTOR.message_types_by_name['TimeRecordToWeb']
_GETMODULESTATERP = DESCRIPTOR.message_types_by_name['GetModuleStateRP']
_GETMODULESTATERP_MODULESTATEENTRY = _GETMODULESTATERP.nested_types_by_name['ModuleStateEntry']
_UPDATEMODULE = DESCRIPTOR.message_types_by_name['UpdateModule']
_OTASETTING = DESCRIPTOR.message_types_by_name['OTASetting']
_SETRECORDMODE = DESCRIPTOR.message_types_by_name['SetRecordMode']
_SETMODE = DESCRIPTOR.message_types_by_name['SetMode']
_DSMREQUEST = DESCRIPTOR.message_types_by_name['DSMRequest']
_DSMRESPONSE = DESCRIPTOR.message_types_by_name['DSMResponse']
_OFFLATENCYSTART = DESCRIPTOR.message_types_by_name['OffLatencyStart']
_OFFLATENCYEND = DESCRIPTOR.message_types_by_name['OffLatencyEnd']
_TRANSACTION = DESCRIPTOR.message_types_by_name['Transaction']
_PREOFF = DESCRIPTOR.message_types_by_name['PreOff']
_STARTUPFAILREPORT = DESCRIPTOR.message_types_by_name['StartupFailReport']
_ADAPTERCOMMAND = DESCRIPTOR.message_types_by_name['AdapterCommand']
_SMARTSM = DESCRIPTOR.message_types_by_name['SmartSM']
_TOPICSUPERVISIONSTATUS = DESCRIPTOR.message_types_by_name['TopicSupervisionStatus']
_TOPICSUPERVISIONSTATUS_MODULETOPICREADYSTATUSENTRY = _TOPICSUPERVISIONSTATUS.nested_types_by_name['ModuleTopicReadyStatusEntry']
_OTASETTING_TRIGGERSOURCE = _OTASETTING.enum_types_by_name['TriggerSource']
_ADAPTERCOMMAND_COMMANDTYPE = _ADAPTERCOMMAND.enum_types_by_name['CommandType']
Trigger = _reflection.GeneratedProtocolMessageType('Trigger', (_message.Message,), {
  'DESCRIPTOR' : _TRIGGER,
  '__module__' : 'dsm.dsm_pb2'
  # @@protoc_insertion_point(class_scope:dr.dsm.Trigger)
  })
_sym_db.RegisterMessage(Trigger)

StateNotifier = _reflection.GeneratedProtocolMessageType('StateNotifier', (_message.Message,), {
  'DESCRIPTOR' : _STATENOTIFIER,
  '__module__' : 'dsm.dsm_pb2'
  # @@protoc_insertion_point(class_scope:dr.dsm.StateNotifier)
  })
_sym_db.RegisterMessage(StateNotifier)

TriggerOutNotifier = _reflection.GeneratedProtocolMessageType('TriggerOutNotifier', (_message.Message,), {
  'DESCRIPTOR' : _TRIGGEROUTNOTIFIER,
  '__module__' : 'dsm.dsm_pb2'
  # @@protoc_insertion_point(class_scope:dr.dsm.TriggerOutNotifier)
  })
_sym_db.RegisterMessage(TriggerOutNotifier)

TriggerRP = _reflection.GeneratedProtocolMessageType('TriggerRP', (_message.Message,), {
  'DESCRIPTOR' : _TRIGGERRP,
  '__module__' : 'dsm.dsm_pb2'
  # @@protoc_insertion_point(class_scope:dr.dsm.TriggerRP)
  })
_sym_db.RegisterMessage(TriggerRP)

TrackingData = _reflection.GeneratedProtocolMessageType('TrackingData', (_message.Message,), {

  'TimeRecord' : _reflection.GeneratedProtocolMessageType('TimeRecord', (_message.Message,), {
    'DESCRIPTOR' : _TRACKINGDATA_TIMERECORD,
    '__module__' : 'dsm.dsm_pb2'
    # @@protoc_insertion_point(class_scope:dr.dsm.TrackingData.TimeRecord)
    })
  ,
  'DESCRIPTOR' : _TRACKINGDATA,
  '__module__' : 'dsm.dsm_pb2'
  # @@protoc_insertion_point(class_scope:dr.dsm.TrackingData)
  })
_sym_db.RegisterMessage(TrackingData)
_sym_db.RegisterMessage(TrackingData.TimeRecord)

TimeRecordToWeb = _reflection.GeneratedProtocolMessageType('TimeRecordToWeb', (_message.Message,), {
  'DESCRIPTOR' : _TIMERECORDTOWEB,
  '__module__' : 'dsm.dsm_pb2'
  # @@protoc_insertion_point(class_scope:dr.dsm.TimeRecordToWeb)
  })
_sym_db.RegisterMessage(TimeRecordToWeb)

GetModuleStateRP = _reflection.GeneratedProtocolMessageType('GetModuleStateRP', (_message.Message,), {

  'ModuleStateEntry' : _reflection.GeneratedProtocolMessageType('ModuleStateEntry', (_message.Message,), {
    'DESCRIPTOR' : _GETMODULESTATERP_MODULESTATEENTRY,
    '__module__' : 'dsm.dsm_pb2'
    # @@protoc_insertion_point(class_scope:dr.dsm.GetModuleStateRP.ModuleStateEntry)
    })
  ,
  'DESCRIPTOR' : _GETMODULESTATERP,
  '__module__' : 'dsm.dsm_pb2'
  # @@protoc_insertion_point(class_scope:dr.dsm.GetModuleStateRP)
  })
_sym_db.RegisterMessage(GetModuleStateRP)
_sym_db.RegisterMessage(GetModuleStateRP.ModuleStateEntry)

UpdateModule = _reflection.GeneratedProtocolMessageType('UpdateModule', (_message.Message,), {
  'DESCRIPTOR' : _UPDATEMODULE,
  '__module__' : 'dsm.dsm_pb2'
  # @@protoc_insertion_point(class_scope:dr.dsm.UpdateModule)
  })
_sym_db.RegisterMessage(UpdateModule)

OTASetting = _reflection.GeneratedProtocolMessageType('OTASetting', (_message.Message,), {
  'DESCRIPTOR' : _OTASETTING,
  '__module__' : 'dsm.dsm_pb2'
  # @@protoc_insertion_point(class_scope:dr.dsm.OTASetting)
  })
_sym_db.RegisterMessage(OTASetting)

SetRecordMode = _reflection.GeneratedProtocolMessageType('SetRecordMode', (_message.Message,), {
  'DESCRIPTOR' : _SETRECORDMODE,
  '__module__' : 'dsm.dsm_pb2'
  # @@protoc_insertion_point(class_scope:dr.dsm.SetRecordMode)
  })
_sym_db.RegisterMessage(SetRecordMode)

SetMode = _reflection.GeneratedProtocolMessageType('SetMode', (_message.Message,), {
  'DESCRIPTOR' : _SETMODE,
  '__module__' : 'dsm.dsm_pb2'
  # @@protoc_insertion_point(class_scope:dr.dsm.SetMode)
  })
_sym_db.RegisterMessage(SetMode)

DSMRequest = _reflection.GeneratedProtocolMessageType('DSMRequest', (_message.Message,), {
  'DESCRIPTOR' : _DSMREQUEST,
  '__module__' : 'dsm.dsm_pb2'
  # @@protoc_insertion_point(class_scope:dr.dsm.DSMRequest)
  })
_sym_db.RegisterMessage(DSMRequest)

DSMResponse = _reflection.GeneratedProtocolMessageType('DSMResponse', (_message.Message,), {
  'DESCRIPTOR' : _DSMRESPONSE,
  '__module__' : 'dsm.dsm_pb2'
  # @@protoc_insertion_point(class_scope:dr.dsm.DSMResponse)
  })
_sym_db.RegisterMessage(DSMResponse)

OffLatencyStart = _reflection.GeneratedProtocolMessageType('OffLatencyStart', (_message.Message,), {
  'DESCRIPTOR' : _OFFLATENCYSTART,
  '__module__' : 'dsm.dsm_pb2'
  # @@protoc_insertion_point(class_scope:dr.dsm.OffLatencyStart)
  })
_sym_db.RegisterMessage(OffLatencyStart)

OffLatencyEnd = _reflection.GeneratedProtocolMessageType('OffLatencyEnd', (_message.Message,), {
  'DESCRIPTOR' : _OFFLATENCYEND,
  '__module__' : 'dsm.dsm_pb2'
  # @@protoc_insertion_point(class_scope:dr.dsm.OffLatencyEnd)
  })
_sym_db.RegisterMessage(OffLatencyEnd)

Transaction = _reflection.GeneratedProtocolMessageType('Transaction', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTION,
  '__module__' : 'dsm.dsm_pb2'
  # @@protoc_insertion_point(class_scope:dr.dsm.Transaction)
  })
_sym_db.RegisterMessage(Transaction)

PreOff = _reflection.GeneratedProtocolMessageType('PreOff', (_message.Message,), {
  'DESCRIPTOR' : _PREOFF,
  '__module__' : 'dsm.dsm_pb2'
  # @@protoc_insertion_point(class_scope:dr.dsm.PreOff)
  })
_sym_db.RegisterMessage(PreOff)

StartupFailReport = _reflection.GeneratedProtocolMessageType('StartupFailReport', (_message.Message,), {
  'DESCRIPTOR' : _STARTUPFAILREPORT,
  '__module__' : 'dsm.dsm_pb2'
  # @@protoc_insertion_point(class_scope:dr.dsm.StartupFailReport)
  })
_sym_db.RegisterMessage(StartupFailReport)

AdapterCommand = _reflection.GeneratedProtocolMessageType('AdapterCommand', (_message.Message,), {
  'DESCRIPTOR' : _ADAPTERCOMMAND,
  '__module__' : 'dsm.dsm_pb2'
  # @@protoc_insertion_point(class_scope:dr.dsm.AdapterCommand)
  })
_sym_db.RegisterMessage(AdapterCommand)

SmartSM = _reflection.GeneratedProtocolMessageType('SmartSM', (_message.Message,), {
  'DESCRIPTOR' : _SMARTSM,
  '__module__' : 'dsm.dsm_pb2'
  # @@protoc_insertion_point(class_scope:dr.dsm.SmartSM)
  })
_sym_db.RegisterMessage(SmartSM)

TopicSupervisionStatus = _reflection.GeneratedProtocolMessageType('TopicSupervisionStatus', (_message.Message,), {

  'ModuleTopicReadyStatusEntry' : _reflection.GeneratedProtocolMessageType('ModuleTopicReadyStatusEntry', (_message.Message,), {
    'DESCRIPTOR' : _TOPICSUPERVISIONSTATUS_MODULETOPICREADYSTATUSENTRY,
    '__module__' : 'dsm.dsm_pb2'
    # @@protoc_insertion_point(class_scope:dr.dsm.TopicSupervisionStatus.ModuleTopicReadyStatusEntry)
    })
  ,
  'DESCRIPTOR' : _TOPICSUPERVISIONSTATUS,
  '__module__' : 'dsm.dsm_pb2'
  # @@protoc_insertion_point(class_scope:dr.dsm.TopicSupervisionStatus)
  })
_sym_db.RegisterMessage(TopicSupervisionStatus)
_sym_db.RegisterMessage(TopicSupervisionStatus.ModuleTopicReadyStatusEntry)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _SUBSTATE.values_by_name["INU_EOL_CALIBRATION"]._options = None
  _SUBSTATE.values_by_name["INU_EOL_CALIBRATION"]._serialized_options = b'\010\001'
  _SUBSTATE.values_by_name["INU_DYNAMIC_CALIBRATION"]._options = None
  _SUBSTATE.values_by_name["INU_DYNAMIC_CALIBRATION"]._serialized_options = b'\010\001'
  _SUBSTATE.values_by_name["EOL_PRE_PROCESS"]._options = None
  _SUBSTATE.values_by_name["EOL_PRE_PROCESS"]._serialized_options = b'\010\001'
  _SUBSTATE.values_by_name["WAIT_OFF_MODE"]._options = None
  _SUBSTATE.values_by_name["WAIT_OFF_MODE"]._serialized_options = b'\010\001'
  _SUBSTATE.values_by_name["DATA_COLLECTOR_FACTORY_CALIB"]._options = None
  _SUBSTATE.values_by_name["DATA_COLLECTOR_FACTORY_CALIB"]._serialized_options = b'\010\001'
  _GETMODULESTATERP_MODULESTATEENTRY._options = None
  _GETMODULESTATERP_MODULESTATEENTRY._serialized_options = b'8\001'
  _TOPICSUPERVISIONSTATUS_MODULETOPICREADYSTATUSENTRY._options = None
  _TOPICSUPERVISIONSTATUS_MODULETOPICREADYSTATUSENTRY._serialized_options = b'8\001'
  _TRIGGERTYPE._serialized_start=2939
  _TRIGGERTYPE._serialized_end=3201
  _SWITCHMODESTEP._serialized_start=3203
  _SWITCHMODESTEP._serialized_end=3263
  _STATE._serialized_start=3266
  _STATE._serialized_end=3431
  _SUBSTATE._serialized_start=3434
  _SUBSTATE._serialized_end=4005
  _ADAPTERSTATE._serialized_start=4007
  _ADAPTERSTATE._serialized_end=4090
  _UPLOADSTATE._serialized_start=4092
  _UPLOADSTATE._serialized_end=4158
  _RECORDSTATE._serialized_start=4160
  _RECORDSTATE._serialized_end=4266
  _DSMCODE._serialized_start=4269
  _DSMCODE._serialized_end=4484
  _TIMERECORDTYPE._serialized_start=4486
  _TIMERECORDTYPE._serialized_end=4583
  _MODULESTATE._serialized_start=4585
  _MODULESTATE._serialized_end=4621
  _SMARTSMSTATES._serialized_start=4623
  _SMARTSMSTATES._serialized_end=4742
  _TRIGGER._serialized_start=25
  _TRIGGER._serialized_end=126
  _STATENOTIFIER._serialized_start=128
  _STATENOTIFIER._serialized_end=230
  _TRIGGEROUTNOTIFIER._serialized_start=233
  _TRIGGEROUTNOTIFIER._serialized_end=446
  _TRIGGERRP._serialized_start=448
  _TRIGGERRP._serialized_end=539
  _TRACKINGDATA._serialized_start=542
  _TRACKINGDATA._serialized_end=734
  _TRACKINGDATA_TIMERECORD._serialized_start=632
  _TRACKINGDATA_TIMERECORD._serialized_end=734
  _TIMERECORDTOWEB._serialized_start=737
  _TIMERECORDTOWEB._serialized_end=893
  _GETMODULESTATERP._serialized_start=896
  _GETMODULESTATERP._serialized_end=1052
  _GETMODULESTATERP_MODULESTATEENTRY._serialized_start=981
  _GETMODULESTATERP_MODULESTATEENTRY._serialized_end=1052
  _UPDATEMODULE._serialized_start=1054
  _UPDATEMODULE._serialized_end=1125
  _OTASETTING._serialized_start=1127
  _OTASETTING._serialized_end=1233
  _OTASETTING_TRIGGERSOURCE._serialized_start=1191
  _OTASETTING_TRIGGERSOURCE._serialized_end=1233
  _SETRECORDMODE._serialized_start=1235
  _SETRECORDMODE._serialized_end=1285
  _SETMODE._serialized_start=1287
  _SETMODE._serialized_end=1328
  _DSMREQUEST._serialized_start=1331
  _DSMREQUEST._serialized_end=1835
  _DSMRESPONSE._serialized_start=1838
  _DSMRESPONSE._serialized_end=2059
  _OFFLATENCYSTART._serialized_start=2061
  _OFFLATENCYSTART._serialized_end=2151
  _OFFLATENCYEND._serialized_start=2153
  _OFFLATENCYEND._serialized_end=2213
  _TRANSACTION._serialized_start=2215
  _TRANSACTION._serialized_end=2321
  _PREOFF._serialized_start=2323
  _PREOFF._serialized_end=2381
  _STARTUPFAILREPORT._serialized_start=2384
  _STARTUPFAILREPORT._serialized_end=2518
  _ADAPTERCOMMAND._serialized_start=2521
  _ADAPTERCOMMAND._serialized_end=2672
  _ADAPTERCOMMAND_COMMANDTYPE._serialized_start=2592
  _ADAPTERCOMMAND_COMMANDTYPE._serialized_end=2672
  _SMARTSM._serialized_start=2674
  _SMARTSM._serialized_end=2721
  _TOPICSUPERVISIONSTATUS._serialized_start=2724
  _TOPICSUPERVISIONSTATUS._serialized_end=2936
  _TOPICSUPERVISIONSTATUS_MODULETOPICREADYSTATUSENTRY._serialized_start=2875
  _TOPICSUPERVISIONSTATUS_MODULETOPICREADYSTATUSENTRY._serialized_end=2936
# @@protoc_insertion_point(module_scope)
