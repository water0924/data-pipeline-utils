# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: map/routing.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from proto.common import geometry_pb2 as common_dot_geometry__pb2
from proto.map import common_type_pb2 as map_dot_common__type__pb2
from proto.map import amap_drive_route_planning_pb2 as map_dot_amap__drive__route__planning__pb2
from proto.graph_match import graph_matching_pb2 as graph__match_dot_graph__matching__pb2
from proto.odd import odd_pb2 as odd_dot_odd__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x11map/routing.proto\x12\rdeeproute.map\x1a\x15\x63ommon/geometry.proto\x1a\x15map/common_type.proto\x1a#map/amap_drive_route_planning.proto\x1a graph_match/graph_matching.proto\x1a\rodd/odd.proto\"\x9d\x01\n\x12RoutingRequestBody\x12J\n\x10route_plan_param\x18\x01 \x01(\x0b\x32\x30.deeproute.map.RoutingRequestBody.RoutePlanParam\x1a;\n\x0eRoutePlanParam\x12\x12\n\ns_elevated\x18\x01 \x01(\x05\x12\x15\n\rs_nav_info_id\x18\x02 \x01(\t\"\x95\x01\n\x15\x44rRoutePlanningMetric\"5\n\x0bUTurnMetric\x12\x10\n\x0cNO_TURN_BACK\x10\x00\x12\x14\n\x10NORMAL_TURN_BACK\x10\x01\"E\n\rHighwayMetric\x12\x12\n\x0eNORMAL_HIGHWAY\x10\x00\x12\x0e\n\nNO_HIGHWAY\x10\x01\x12\x10\n\x0cMORE_HIGHWAY\x10\x02\"\x9e\x02\n\rRoutingOption\x12\x0c\n\x04\x63ost\x18\x01 \x01(\x05\x12\x17\n\x0f\x61void_road_type\x18\x02 \x01(\x05\x12\x18\n\x10\x61void_congestion\x18\x03 \x01(\x08\x12\x16\n\x0emax_result_num\x18\x04 \x01(\x05\x12M\n\x16\x63oordinate_system_type\x18\x05 \x01(\x0e\x32-.deeproute.map.RoutingOption.CoordinateSystem\x12\x0f\n\x07heading\x18\x06 \x01(\x01\x12\x12\n\ns_elevated\x18\x07 \x01(\x05\x12\x15\n\rs_nav_info_id\x18\x08 \x01(\t\")\n\x10\x43oordinateSystem\x12\n\n\x06UNKNOW\x10\x00\x12\t\n\x05GCJ02\x10\x01\"\xb8\x01\n\x0f\x44rRoutingOption\x12\x0f\n\x07heading\x18\x01 \x01(\x01\x12G\n\ru_turn_metric\x18\x02 \x01(\x0e\x32\x30.deeproute.map.DrRoutePlanningMetric.UTurnMetric\x12K\n\x0fhigh_way_metric\x18\x03 \x01(\x0e\x32\x32.deeproute.map.DrRoutePlanningMetric.HighwayMetric\"i\n\x11\x41mapRoutingOption\x12\x19\n\x11use_temporary_odd\x18\x01 \x01(\x08\x12!\n\x19\x64ynamic_static_odd_switch\x18\x02 \x01(\x08\x12\x16\n\x0eroi_odd_switch\x18\x03 \x01(\x08\"\xc3\x04\n\x0bRequestInfo\x12>\n\x13route_planning_type\x18\xe8\x07 \x01(\x0e\x32 .deeproute.map.RoutePlanningType\x12/\n\x0bstart_point\x18\x01 \x01(\x0b\x32\x1a.deeproute.common.PointLLH\x12.\n\nend_points\x18\x02 \x03(\x0b\x32\x1a.deeproute.common.PointLLH\x12,\n\x06option\x18\x03 \x01(\x0b\x32\x1c.deeproute.map.RoutingOption\x12\x31\n\tdr_option\x18\x06 \x01(\x0b\x32\x1e.deeproute.map.DrRoutingOption\x12\x35\n\x0b\x61map_option\x18\t \x01(\x0b\x32 .deeproute.map.AmapRoutingOption\x12\x44\n\ramap_response\x18\x07 \x01(\x0b\x32-.deeproute.map.AmapDriveRoutePlanningResponse\x12<\n\x0crequest_type\x18\x04 \x01(\x0e\x32&.deeproute.map.RequestInfo.RequestType\x12\x1a\n\x12retry_on_net_error\x18\n \x01(\x08\x12\x10\n\x08route_id\x18\x05 \x01(\x05\x12\x13\n\x0broute_id_64\x18\x08 \x01(\x04\"4\n\x0bRequestType\x12\x13\n\x0f\x44\x45\x46\x41ULT_EXECUTE\x10\x00\x12\x10\n\x0cONLY_PREVIEW\x10\x01\"c\n\x0eRoutingRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x32\n\x0crequest_info\x18\x02 \x01(\x0b\x32\x1a.deeproute.map.RequestInfoH\x00\x42\t\n\x07request\"\xc7\x01\n\x0fRoutingResponse\x12\x35\n\x06status\x18\x01 \x01(\x0b\x32%.deeproute.map.RoutingResponse.Status\x12\x12\n\nrequest_id\x18\x02 \x01(\t\x12$\n\x06routes\x18\x03 \x03(\x0b\x32\x14.deeproute.map.Route\x1a\x43\n\x06Status\x12(\n\x04\x63ode\x18\x01 \x01(\x0e\x32\x1a.deeproute.map.RoutingCode\x12\x0f\n\x07\x65rr_msg\x18\x02 \x01(\t\"m\n\x0bSegmentInfo\x12,\n\nroad_class\x18\x01 \x01(\x0e\x32\x18.deeproute.map.RoadClass\x12\x30\n\x0cshape_points\x18\x02 \x03(\x0b\x32\x1a.deeproute.common.PointLLH\"\xd7\x02\n\x05Route\x12\n\n\x02id\x18\x04 \x01(\x05\x12\r\n\x05id_64\x18\n \x01(\x04\x12\x0b\n\x03\x64is\x18\x01 \x01(\x05\x12\x0f\n\x07nca_dis\x18\t \x01(\x05\x12\x0b\n\x03\x64ur\x18\x02 \x01(\x05\x12\x1a\n\x12traffic_lights_num\x18\x05 \x01(\x05\x12\x30\n\x0cshape_points\x18\x03 \x03(\x0b\x32\x1a.deeproute.common.PointLLH\x12\x31\n\rsegment_infos\x18\x06 \x03(\x0b\x32\x1a.deeproute.map.SegmentInfo\x12\x42\n\x10mismatch_indexes\x18\x07 \x03(\x0b\x32(.deeproute.graph_match.MismatchSegmIndex\x12\x43\n\x12odd_preview_result\x18\x08 \x01(\x0b\x32\'.deeproute.odd.PreviewRouteOddLimitInfo*J\n\x11RoutePlanningType\x12\x11\n\rNAVI_PLANNING\x10\x00\x12\x0f\n\x0b\x44R_PLANNING\x10\x01\x12\x11\n\rAMAP_PLANNING\x10\x02*\xc2\x01\n\x0bRoutingCode\x12\x0b\n\x07SUCCESS\x10\x00\x12\x0c\n\x08INTERNAL\x10\x01\x12\r\n\tNOT_FOUND\x10\x02\x12\x14\n\x10INVALID_ARGUMENT\x10\x03\x12\x0f\n\x0bUNAVAILABLE\x10\x04\x12\x10\n\x0cOUT_OF_RANGE\x10\x05\x12$\n NETWORK_ADDRESS_RESOLUTION_ERROR\x10\x06\x12\x15\n\x11\x44\x45\x41\x44LINE_EXCEEDED\x10\x07\x12\x13\n\x0fROUTING_UNKNOWN\x10\x08')

_ROUTEPLANNINGTYPE = DESCRIPTOR.enum_types_by_name['RoutePlanningType']
RoutePlanningType = enum_type_wrapper.EnumTypeWrapper(_ROUTEPLANNINGTYPE)
_ROUTINGCODE = DESCRIPTOR.enum_types_by_name['RoutingCode']
RoutingCode = enum_type_wrapper.EnumTypeWrapper(_ROUTINGCODE)
NAVI_PLANNING = 0
DR_PLANNING = 1
AMAP_PLANNING = 2
SUCCESS = 0
INTERNAL = 1
NOT_FOUND = 2
INVALID_ARGUMENT = 3
UNAVAILABLE = 4
OUT_OF_RANGE = 5
NETWORK_ADDRESS_RESOLUTION_ERROR = 6
DEADLINE_EXCEEDED = 7
ROUTING_UNKNOWN = 8


_ROUTINGREQUESTBODY = DESCRIPTOR.message_types_by_name['RoutingRequestBody']
_ROUTINGREQUESTBODY_ROUTEPLANPARAM = _ROUTINGREQUESTBODY.nested_types_by_name['RoutePlanParam']
_DRROUTEPLANNINGMETRIC = DESCRIPTOR.message_types_by_name['DrRoutePlanningMetric']
_ROUTINGOPTION = DESCRIPTOR.message_types_by_name['RoutingOption']
_DRROUTINGOPTION = DESCRIPTOR.message_types_by_name['DrRoutingOption']
_AMAPROUTINGOPTION = DESCRIPTOR.message_types_by_name['AmapRoutingOption']
_REQUESTINFO = DESCRIPTOR.message_types_by_name['RequestInfo']
_ROUTINGREQUEST = DESCRIPTOR.message_types_by_name['RoutingRequest']
_ROUTINGRESPONSE = DESCRIPTOR.message_types_by_name['RoutingResponse']
_ROUTINGRESPONSE_STATUS = _ROUTINGRESPONSE.nested_types_by_name['Status']
_SEGMENTINFO = DESCRIPTOR.message_types_by_name['SegmentInfo']
_ROUTE = DESCRIPTOR.message_types_by_name['Route']
_DRROUTEPLANNINGMETRIC_UTURNMETRIC = _DRROUTEPLANNINGMETRIC.enum_types_by_name['UTurnMetric']
_DRROUTEPLANNINGMETRIC_HIGHWAYMETRIC = _DRROUTEPLANNINGMETRIC.enum_types_by_name['HighwayMetric']
_ROUTINGOPTION_COORDINATESYSTEM = _ROUTINGOPTION.enum_types_by_name['CoordinateSystem']
_REQUESTINFO_REQUESTTYPE = _REQUESTINFO.enum_types_by_name['RequestType']
RoutingRequestBody = _reflection.GeneratedProtocolMessageType('RoutingRequestBody', (_message.Message,), {

  'RoutePlanParam' : _reflection.GeneratedProtocolMessageType('RoutePlanParam', (_message.Message,), {
    'DESCRIPTOR' : _ROUTINGREQUESTBODY_ROUTEPLANPARAM,
    '__module__' : 'map.routing_pb2'
    # @@protoc_insertion_point(class_scope:deeproute.map.RoutingRequestBody.RoutePlanParam)
    })
  ,
  'DESCRIPTOR' : _ROUTINGREQUESTBODY,
  '__module__' : 'map.routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.RoutingRequestBody)
  })
_sym_db.RegisterMessage(RoutingRequestBody)
_sym_db.RegisterMessage(RoutingRequestBody.RoutePlanParam)

DrRoutePlanningMetric = _reflection.GeneratedProtocolMessageType('DrRoutePlanningMetric', (_message.Message,), {
  'DESCRIPTOR' : _DRROUTEPLANNINGMETRIC,
  '__module__' : 'map.routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.DrRoutePlanningMetric)
  })
_sym_db.RegisterMessage(DrRoutePlanningMetric)

RoutingOption = _reflection.GeneratedProtocolMessageType('RoutingOption', (_message.Message,), {
  'DESCRIPTOR' : _ROUTINGOPTION,
  '__module__' : 'map.routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.RoutingOption)
  })
_sym_db.RegisterMessage(RoutingOption)

DrRoutingOption = _reflection.GeneratedProtocolMessageType('DrRoutingOption', (_message.Message,), {
  'DESCRIPTOR' : _DRROUTINGOPTION,
  '__module__' : 'map.routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.DrRoutingOption)
  })
_sym_db.RegisterMessage(DrRoutingOption)

AmapRoutingOption = _reflection.GeneratedProtocolMessageType('AmapRoutingOption', (_message.Message,), {
  'DESCRIPTOR' : _AMAPROUTINGOPTION,
  '__module__' : 'map.routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.AmapRoutingOption)
  })
_sym_db.RegisterMessage(AmapRoutingOption)

RequestInfo = _reflection.GeneratedProtocolMessageType('RequestInfo', (_message.Message,), {
  'DESCRIPTOR' : _REQUESTINFO,
  '__module__' : 'map.routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.RequestInfo)
  })
_sym_db.RegisterMessage(RequestInfo)

RoutingRequest = _reflection.GeneratedProtocolMessageType('RoutingRequest', (_message.Message,), {
  'DESCRIPTOR' : _ROUTINGREQUEST,
  '__module__' : 'map.routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.RoutingRequest)
  })
_sym_db.RegisterMessage(RoutingRequest)

RoutingResponse = _reflection.GeneratedProtocolMessageType('RoutingResponse', (_message.Message,), {

  'Status' : _reflection.GeneratedProtocolMessageType('Status', (_message.Message,), {
    'DESCRIPTOR' : _ROUTINGRESPONSE_STATUS,
    '__module__' : 'map.routing_pb2'
    # @@protoc_insertion_point(class_scope:deeproute.map.RoutingResponse.Status)
    })
  ,
  'DESCRIPTOR' : _ROUTINGRESPONSE,
  '__module__' : 'map.routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.RoutingResponse)
  })
_sym_db.RegisterMessage(RoutingResponse)
_sym_db.RegisterMessage(RoutingResponse.Status)

SegmentInfo = _reflection.GeneratedProtocolMessageType('SegmentInfo', (_message.Message,), {
  'DESCRIPTOR' : _SEGMENTINFO,
  '__module__' : 'map.routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.SegmentInfo)
  })
_sym_db.RegisterMessage(SegmentInfo)

Route = _reflection.GeneratedProtocolMessageType('Route', (_message.Message,), {
  'DESCRIPTOR' : _ROUTE,
  '__module__' : 'map.routing_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.Route)
  })
_sym_db.RegisterMessage(Route)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _ROUTEPLANNINGTYPE._serialized_start=2405
  _ROUTEPLANNINGTYPE._serialized_end=2479
  _ROUTINGCODE._serialized_start=2482
  _ROUTINGCODE._serialized_end=2676
  _ROUTINGREQUESTBODY._serialized_start=169
  _ROUTINGREQUESTBODY._serialized_end=326
  _ROUTINGREQUESTBODY_ROUTEPLANPARAM._serialized_start=267
  _ROUTINGREQUESTBODY_ROUTEPLANPARAM._serialized_end=326
  _DRROUTEPLANNINGMETRIC._serialized_start=329
  _DRROUTEPLANNINGMETRIC._serialized_end=478
  _DRROUTEPLANNINGMETRIC_UTURNMETRIC._serialized_start=354
  _DRROUTEPLANNINGMETRIC_UTURNMETRIC._serialized_end=407
  _DRROUTEPLANNINGMETRIC_HIGHWAYMETRIC._serialized_start=409
  _DRROUTEPLANNINGMETRIC_HIGHWAYMETRIC._serialized_end=478
  _ROUTINGOPTION._serialized_start=481
  _ROUTINGOPTION._serialized_end=767
  _ROUTINGOPTION_COORDINATESYSTEM._serialized_start=726
  _ROUTINGOPTION_COORDINATESYSTEM._serialized_end=767
  _DRROUTINGOPTION._serialized_start=770
  _DRROUTINGOPTION._serialized_end=954
  _AMAPROUTINGOPTION._serialized_start=956
  _AMAPROUTINGOPTION._serialized_end=1061
  _REQUESTINFO._serialized_start=1064
  _REQUESTINFO._serialized_end=1643
  _REQUESTINFO_REQUESTTYPE._serialized_start=1591
  _REQUESTINFO_REQUESTTYPE._serialized_end=1643
  _ROUTINGREQUEST._serialized_start=1645
  _ROUTINGREQUEST._serialized_end=1744
  _ROUTINGRESPONSE._serialized_start=1747
  _ROUTINGRESPONSE._serialized_end=1946
  _ROUTINGRESPONSE_STATUS._serialized_start=1879
  _ROUTINGRESPONSE_STATUS._serialized_end=1946
  _SEGMENTINFO._serialized_start=1948
  _SEGMENTINFO._serialized_end=2057
  _ROUTE._serialized_start=2060
  _ROUTE._serialized_end=2403
# @@protoc_insertion_point(module_scope)
