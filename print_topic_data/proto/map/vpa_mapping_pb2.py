# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: map/vpa_mapping.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from proto.map import sd_map_pb2 as map_dot_sd__map__pb2
from proto.map import projection_pb2 as map_dot_projection__pb2
from proto.common import geometry_pb2 as common_dot_geometry__pb2
from proto.drivers import pointcloud2_pb2 as drivers_dot_pointcloud2__pb2
from proto.localization import havp_map_pb2 as localization_dot_havp__map__pb2
from proto.drivers.gnss import ins_pb2 as drivers_dot_gnss_dot_ins__pb2
from proto.perception import deeproute_perception_ras_map_pb2 as perception_dot_deeproute__perception__ras__map__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x15map/vpa_mapping.proto\x12\x11\x64\x65\x65proute.map.vpa\x1a\x10map/sd_map.proto\x1a\x14map/projection.proto\x1a\x15\x63ommon/geometry.proto\x1a\x19\x64rivers/pointcloud2.proto\x1a\x1blocalization/havp_map.proto\x1a\x16\x64rivers/gnss/ins.proto\x1a-perception/deeproute_perception_ras_map.proto\"S\n\x11MapOutEndPoseInfo\x12\r\n\x05\x66loor\x18\x01 \x01(\x05\x12/\n\x04pose\x18\x02 \x01(\x0b\x32!.deeproute.common.Transformation3\"\x8e\n\n\x0fOnboardMapEntry\x12\x0e\n\x06map_id\x18\x01 \x01(\r\x12\x10\n\x08map_name\x18\x02 \x01(\t\x12\x18\n\x10mapping_distance\x18\x03 \x01(\x01\x12 \n\x18\x64\x65\x66\x61ult_parking_space_id\x18\x04 \x01(\r\x12Z\n\x1c\x66\x61vorite_parking_space_infos\x18\x05 \x03(\x0b\x32\x34.deeproute.localization.havp_map.ParkingSpaceUsrInfo\x12\x1d\n\x15localization_map_path\x18\x06 \x01(\t\x12\x19\n\x11semantic_map_path\x18\x07 \x01(\t\x12\x35\n\x11mapping_start_llh\x18\x08 \x01(\x0b\x32\x1a.deeproute.common.PointLLH\x12;\n\x10parking_lot_type\x18\t \x01(\x0e\x32!.deeproute.map.vpa.ParkingLotType\x12.\n\tmap_range\x18\n \x01(\x0b\x32\x1b.deeproute.map.vpa.MapRange\x12\x1c\n\x14vanishing_point_time\x18\x0b \x01(\x04\x12\x1a\n\x12start_mapping_time\x18\x0c \x01(\x04\x12\x18\n\x10\x65nd_mapping_time\x18\r \x01(\x04\x12\x13\n\x0bmap_version\x18\x0e \x01(\t\x12\x13\n\x0bis_uploaded\x18\x0f \x01(\x08\x12\x17\n\x0fhas_e2e_out_map\x18\x10 \x01(\x08\x12\x35\n\x11\x65\x32\x65_in_trajectory\x18\x11 \x03(\x0b\x32\x1a.deeproute.common.PointLLH\x12\x36\n\x12\x65\x32\x65_out_trajectory\x18\x12 \x03(\x0b\x32\x1a.deeproute.common.PointLLH\x12G\n\x15map_out_end_pose_info\x18\x13 \x01(\x0b\x32$.deeproute.map.vpa.MapOutEndPoseInfoB\x02\x18\x01\x12\x39\n\x15parking_odd_start_llh\x18\x14 \x01(\x0b\x32\x1a.deeproute.common.PointLLH\x12\x42\n\rodd_start_poi\x18\x15 \x01(\x0b\x32+.deeproute.localization.havp_map.MapPoiInfo\x12@\n\x0bodd_end_poi\x18\x16 \x01(\x0b\x32+.deeproute.localization.havp_map.MapPoiInfo\x12H\n\x13parking_out_end_poi\x18\x17 \x01(\x0b\x32+.deeproute.localization.havp_map.MapPoiInfo\x12\x44\n\x0fmapping_end_poi\x18\x18 \x01(\x0b\x32+.deeproute.localization.havp_map.MapPoiInfo\x12J\n\x15\x66\x61vorite_map_poi_list\x18\x19 \x03(\x0b\x32+.deeproute.localization.havp_map.MapPoiInfo\x12\x1a\n\x12\x64\x65\x66\x61ult_map_poi_id\x18\x1a \x01(\t\x12\x14\n\x0cgiven_map_id\x18\x1b \x01(\x05\x12\x45\n\x19parking_out_end_gnss_pose\x18\x1c \x01(\x0b\x32\".deeproute.drivers.gnss.SensorsIns\"n\n\x08MapRange\x12\x17\n\x0flower_bound_lat\x18\x01 \x01(\x01\x12\x17\n\x0flower_bound_lon\x18\x02 \x01(\x01\x12\x17\n\x0fupper_bound_lat\x18\x03 \x01(\x01\x12\x17\n\x0fupper_bound_lon\x18\x04 \x01(\x01\"\x80\x01\n\nTrackPoses\x12\x35\n\ntrack_pose\x18\x01 \x03(\x0b\x32!.deeproute.common.Transformation3\x12;\n\x0ftrack_gnss_pose\x18\x02 \x03(\x0b\x32\".deeproute.drivers.gnss.SensorsIns\"^\n\x0c\x41lignedBox3d\x12&\n\x03min\x18\x01 \x01(\x0b\x32\x19.deeproute.common.Point3D\x12&\n\x03max\x18\x02 \x01(\x0b\x32\x19.deeproute.common.Point3D\"\xe5\x01\n\x10SemanticBoundary\x12@\n\x18lane_boundary_pointcloud\x18\x01 \x01(\x0b\x32\x1e.deeproute.drivers.PointCloud2\x12I\n!parking_space_boundary_pointcloud\x18\x02 \x01(\x0b\x32\x1e.deeproute.drivers.PointCloud2\x12\x44\n\x1cobstacle_boundary_pointcloud\x18\x03 \x01(\x0b\x32\x1e.deeproute.drivers.PointCloud2\"\xf2\x01\n\x12ParkingMapMetaData\x12\x0e\n\x06map_id\x18\x01 \x01(\r\x12\x10\n\x08map_name\x18\x02 \x01(\t\x12\x0c\n\x04\x63ity\x18\x03 \x01(\t\x12\x13\n\x0b\x63reate_time\x18\n \x01(\x04\x12\x15\n\rlast_use_time\x18\x0b \x01(\x04\x12\x18\n\x10last_update_time\x18\x0c \x01(\x04\x12\x33\n\x06source\x18\x14 \x01(\x0e\x32#.deeproute.map.vpa.ParkingMapSource\x12\x31\n\x05\x65ntry\x18\x15 \x01(\x0b\x32\".deeproute.map.vpa.OnboardMapEntry\"\xe8\x05\n\x08Keyframe\x12\x11\n\ttimestamp\x18\x01 \x01(\x03\x12\x33\n\x08map_pose\x18\x02 \x01(\x0b\x32!.deeproute.common.Transformation3\x12H\n\rparking_space\x18\x03 \x03(\x0b\x32\x31.deeproute.localization.havp_map.HAVPParkingSpace\x12?\n\x08obstacle\x18\x04 \x03(\x0b\x32-.deeproute.localization.havp_map.HAVPObstacle\x12\x35\n\ntrack_pose\x18\x05 \x03(\x0b\x32!.deeproute.common.Transformation3\x12\x33\n\x0bpoint_cloud\x18\x06 \x01(\x0b\x32\x1e.deeproute.drivers.PointCloud2\x12?\n\x16sensing_pose_bound_box\x18\x07 \x01(\x0b\x32\x1f.deeproute.map.vpa.AlignedBox3d\x12\x15\n\ris_premapping\x18\x08 \x01(\x08\x12\x13\n\x0bis_on_slope\x18\t \x01(\x08\x12>\n\x11semantic_boundary\x18\n \x01(\x0b\x32#.deeproute.map.vpa.SemanticBoundary\x12\x38\n\rroad_polygons\x18\x0b \x03(\x0b\x32!.deeproute.perception.RoadPolygon\x12.\n\todd_range\x18\x0c \x01(\x0e\x32\x1b.deeproute.map.vpa.OddRange\x12J\n\x11map_semantic_lane\x18\r \x03(\x0b\x32/.deeproute.localization.havp_map.HAVPTrajectory\x12\x13\n\x0b\x64r_link_ids\x18\x14 \x03(\x04\x12\x13\n\x0bkeyframe_id\x18\x15 \x01(\x04\x12\x10\n\x08\x66loor_id\x18\x16 \x01(\r\"\xa2\x01\n\x0eSlopeFloorInfo\x12\x12\n\nfrom_floor\x18\x01 \x01(\x05\x12\x10\n\x08to_floor\x18\x02 \x01(\x05\x12\x35\n\nstart_pose\x18\x03 \x01(\x0b\x32!.deeproute.common.Transformation3\x12\x33\n\x08\x65nd_pose\x18\x04 \x01(\x0b\x32!.deeproute.common.Transformation3\"\xd3\x01\n\x08\x46loorMap\x12\x10\n\x08\x66loor_id\x18\x01 \x01(\x05\x12H\n\x0ftrajectory_type\x18\x02 \x01(\x0e\x32/.deeproute.localization.havp_map.TrajectoryType\x12.\n\tkey_frame\x18\x03 \x03(\x0b\x32\x1b.deeproute.map.vpa.Keyframe\x12;\n\x10slope_floor_info\x18\x04 \x01(\x0b\x32!.deeproute.map.vpa.SlopeFloorInfo\"m\n\x0cKeyframeEdge\x12\x12\n\nkeyframe_i\x18\x01 \x02(\x04\x12\x12\n\nkeyframe_j\x18\x02 \x02(\x04\x12\x35\n\ndelta_pose\x18\x03 \x02(\x0b\x32!.deeproute.common.Transformation3\"\xec\x01\n\x08LinkData\x12\x12\n\ndr_link_id\x18\x01 \x01(\x04\x12*\n\x06points\x18\x02 \x03(\x0b\x32\x1a.deeproute.common.PointLLH\x12+\n\x08points3d\x18\n \x03(\x0b\x32\x19.deeproute.common.Point3D\x12\x13\n\x0bin_link_ids\x18\x06 \x03(\x04\x12\x14\n\x0cout_link_ids\x18\x07 \x03(\x04\x12\x38\n\x0clink_formway\x18\x08 \x03(\x0e\x32\".deeproute.sd_map.LinkData.FormWay\x12\x0e\n\x06length\x18\t \x01(\r\"`\n\x0fMapPoiInfoInMap\x12\x13\n\x0bkeyframe_id\x18\x01 \x01(\x05\x12\x38\n\rrelative_pose\x18\x02 \x01(\x0b\x32!.deeproute.common.Transformation3\"\xf2\x06\n\tGlobalMap\x12\x39\n\x11projection_origin\x18\x01 \x01(\x0b\x32\x1e.deeproute.map.ProjectionPoint\x12\x16\n\x0emap_resolution\x18\x02 \x01(\x02\x12.\n\tfloor_map\x18\x03 \x03(\x0b\x32\x1b.deeproute.map.vpa.FloorMap\x12H\n\rparking_space\x18\x04 \x03(\x0b\x32\x31.deeproute.localization.havp_map.HAVPParkingSpace\x12?\n\x08obstacle\x18\x05 \x03(\x0b\x32-.deeproute.localization.havp_map.HAVPObstacle\x12\x37\n\x0ekeyframe_edges\x18\x06 \x03(\x0b\x32\x1f.deeproute.map.vpa.KeyframeEdge\x12\x15\n\rfloor_heights\x18\x07 \x03(\x01\x12\x15\n\rviz_floor_ids\x18\x08 \x03(\x05\x12G\n\x0emap_trajectory\x18\t \x03(\x0b\x32/.deeproute.localization.havp_map.HAVPTrajectory\x12\x38\n\rroad_polygons\x18\n \x03(\x0b\x32!.deeproute.perception.RoadPolygon\x12\x39\n\rodd_start_poi\x18\x0b \x01(\x0b\x32\".deeproute.map.vpa.MapPoiInfoInMap\x12\x37\n\x0bodd_end_poi\x18\x0c \x01(\x0b\x32\".deeproute.map.vpa.MapPoiInfoInMap\x12?\n\x13parking_out_end_poi\x18\r \x01(\x0b\x32\".deeproute.map.vpa.MapPoiInfoInMap\x12;\n\x0fmapping_end_poi\x18\x0e \x01(\x0b\x32\".deeproute.map.vpa.MapPoiInfoInMap\x12J\n\x11map_semantic_lane\x18\x0f \x03(\x0b\x32/.deeproute.localization.havp_map.HAVPTrajectory\x12/\n\nlink_datas\x18\x14 \x03(\x0b\x32\x1b.deeproute.map.vpa.LinkData\"\x8d\x01\n\tEntryList\x12/\n\x0b\x64\x65stination\x18\x01 \x01(\x0b\x32\x1a.deeproute.common.PointLLH\x12\x13\n\x0b\x64r_link_ids\x18\x02 \x03(\x04\x12:\n\x0enearby_entries\x18\x03 \x03(\x0b\x32\".deeproute.map.vpa.OnboardMapEntry*4\n\x10ParkingMapSource\x12\x0b\n\x07INVAILD\x10\x00\x12\x08\n\x04USER\x10\x01\x12\t\n\x05\x43LOUD\x10\x02*)\n\x0eParkingLotType\x12\n\n\x06INDOOR\x10\x00\x12\x0b\n\x07OUTDOOR\x10\x01*P\n\x08OddRange\x12\x1c\n\x18PUBLIC_ROAD_TO_ODD_START\x10\x00\x12\n\n\x06IN_ODD\x10\x01\x12\x1a\n\x16ODD_END_TO_PUBLIC_ROAD\x10\x02')

_PARKINGMAPSOURCE = DESCRIPTOR.enum_types_by_name['ParkingMapSource']
ParkingMapSource = enum_type_wrapper.EnumTypeWrapper(_PARKINGMAPSOURCE)
_PARKINGLOTTYPE = DESCRIPTOR.enum_types_by_name['ParkingLotType']
ParkingLotType = enum_type_wrapper.EnumTypeWrapper(_PARKINGLOTTYPE)
_ODDRANGE = DESCRIPTOR.enum_types_by_name['OddRange']
OddRange = enum_type_wrapper.EnumTypeWrapper(_ODDRANGE)
INVAILD = 0
USER = 1
CLOUD = 2
INDOOR = 0
OUTDOOR = 1
PUBLIC_ROAD_TO_ODD_START = 0
IN_ODD = 1
ODD_END_TO_PUBLIC_ROAD = 2


_MAPOUTENDPOSEINFO = DESCRIPTOR.message_types_by_name['MapOutEndPoseInfo']
_ONBOARDMAPENTRY = DESCRIPTOR.message_types_by_name['OnboardMapEntry']
_MAPRANGE = DESCRIPTOR.message_types_by_name['MapRange']
_TRACKPOSES = DESCRIPTOR.message_types_by_name['TrackPoses']
_ALIGNEDBOX3D = DESCRIPTOR.message_types_by_name['AlignedBox3d']
_SEMANTICBOUNDARY = DESCRIPTOR.message_types_by_name['SemanticBoundary']
_PARKINGMAPMETADATA = DESCRIPTOR.message_types_by_name['ParkingMapMetaData']
_KEYFRAME = DESCRIPTOR.message_types_by_name['Keyframe']
_SLOPEFLOORINFO = DESCRIPTOR.message_types_by_name['SlopeFloorInfo']
_FLOORMAP = DESCRIPTOR.message_types_by_name['FloorMap']
_KEYFRAMEEDGE = DESCRIPTOR.message_types_by_name['KeyframeEdge']
_LINKDATA = DESCRIPTOR.message_types_by_name['LinkData']
_MAPPOIINFOINMAP = DESCRIPTOR.message_types_by_name['MapPoiInfoInMap']
_GLOBALMAP = DESCRIPTOR.message_types_by_name['GlobalMap']
_ENTRYLIST = DESCRIPTOR.message_types_by_name['EntryList']
MapOutEndPoseInfo = _reflection.GeneratedProtocolMessageType('MapOutEndPoseInfo', (_message.Message,), {
  'DESCRIPTOR' : _MAPOUTENDPOSEINFO,
  '__module__' : 'map.vpa_mapping_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.vpa.MapOutEndPoseInfo)
  })
_sym_db.RegisterMessage(MapOutEndPoseInfo)

OnboardMapEntry = _reflection.GeneratedProtocolMessageType('OnboardMapEntry', (_message.Message,), {
  'DESCRIPTOR' : _ONBOARDMAPENTRY,
  '__module__' : 'map.vpa_mapping_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.vpa.OnboardMapEntry)
  })
_sym_db.RegisterMessage(OnboardMapEntry)

MapRange = _reflection.GeneratedProtocolMessageType('MapRange', (_message.Message,), {
  'DESCRIPTOR' : _MAPRANGE,
  '__module__' : 'map.vpa_mapping_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.vpa.MapRange)
  })
_sym_db.RegisterMessage(MapRange)

TrackPoses = _reflection.GeneratedProtocolMessageType('TrackPoses', (_message.Message,), {
  'DESCRIPTOR' : _TRACKPOSES,
  '__module__' : 'map.vpa_mapping_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.vpa.TrackPoses)
  })
_sym_db.RegisterMessage(TrackPoses)

AlignedBox3d = _reflection.GeneratedProtocolMessageType('AlignedBox3d', (_message.Message,), {
  'DESCRIPTOR' : _ALIGNEDBOX3D,
  '__module__' : 'map.vpa_mapping_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.vpa.AlignedBox3d)
  })
_sym_db.RegisterMessage(AlignedBox3d)

SemanticBoundary = _reflection.GeneratedProtocolMessageType('SemanticBoundary', (_message.Message,), {
  'DESCRIPTOR' : _SEMANTICBOUNDARY,
  '__module__' : 'map.vpa_mapping_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.vpa.SemanticBoundary)
  })
_sym_db.RegisterMessage(SemanticBoundary)

ParkingMapMetaData = _reflection.GeneratedProtocolMessageType('ParkingMapMetaData', (_message.Message,), {
  'DESCRIPTOR' : _PARKINGMAPMETADATA,
  '__module__' : 'map.vpa_mapping_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.vpa.ParkingMapMetaData)
  })
_sym_db.RegisterMessage(ParkingMapMetaData)

Keyframe = _reflection.GeneratedProtocolMessageType('Keyframe', (_message.Message,), {
  'DESCRIPTOR' : _KEYFRAME,
  '__module__' : 'map.vpa_mapping_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.vpa.Keyframe)
  })
_sym_db.RegisterMessage(Keyframe)

SlopeFloorInfo = _reflection.GeneratedProtocolMessageType('SlopeFloorInfo', (_message.Message,), {
  'DESCRIPTOR' : _SLOPEFLOORINFO,
  '__module__' : 'map.vpa_mapping_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.vpa.SlopeFloorInfo)
  })
_sym_db.RegisterMessage(SlopeFloorInfo)

FloorMap = _reflection.GeneratedProtocolMessageType('FloorMap', (_message.Message,), {
  'DESCRIPTOR' : _FLOORMAP,
  '__module__' : 'map.vpa_mapping_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.vpa.FloorMap)
  })
_sym_db.RegisterMessage(FloorMap)

KeyframeEdge = _reflection.GeneratedProtocolMessageType('KeyframeEdge', (_message.Message,), {
  'DESCRIPTOR' : _KEYFRAMEEDGE,
  '__module__' : 'map.vpa_mapping_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.vpa.KeyframeEdge)
  })
_sym_db.RegisterMessage(KeyframeEdge)

LinkData = _reflection.GeneratedProtocolMessageType('LinkData', (_message.Message,), {
  'DESCRIPTOR' : _LINKDATA,
  '__module__' : 'map.vpa_mapping_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.vpa.LinkData)
  })
_sym_db.RegisterMessage(LinkData)

MapPoiInfoInMap = _reflection.GeneratedProtocolMessageType('MapPoiInfoInMap', (_message.Message,), {
  'DESCRIPTOR' : _MAPPOIINFOINMAP,
  '__module__' : 'map.vpa_mapping_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.vpa.MapPoiInfoInMap)
  })
_sym_db.RegisterMessage(MapPoiInfoInMap)

GlobalMap = _reflection.GeneratedProtocolMessageType('GlobalMap', (_message.Message,), {
  'DESCRIPTOR' : _GLOBALMAP,
  '__module__' : 'map.vpa_mapping_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.vpa.GlobalMap)
  })
_sym_db.RegisterMessage(GlobalMap)

EntryList = _reflection.GeneratedProtocolMessageType('EntryList', (_message.Message,), {
  'DESCRIPTOR' : _ENTRYLIST,
  '__module__' : 'map.vpa_mapping_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.map.vpa.EntryList)
  })
_sym_db.RegisterMessage(EntryList)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _ONBOARDMAPENTRY.fields_by_name['map_out_end_pose_info']._options = None
  _ONBOARDMAPENTRY.fields_by_name['map_out_end_pose_info']._serialized_options = b'\030\001'
  _PARKINGMAPSOURCE._serialized_start=5035
  _PARKINGMAPSOURCE._serialized_end=5087
  _PARKINGLOTTYPE._serialized_start=5089
  _PARKINGLOTTYPE._serialized_end=5130
  _ODDRANGE._serialized_start=5132
  _ODDRANGE._serialized_end=5212
  _MAPOUTENDPOSEINFO._serialized_start=234
  _MAPOUTENDPOSEINFO._serialized_end=317
  _ONBOARDMAPENTRY._serialized_start=320
  _ONBOARDMAPENTRY._serialized_end=1614
  _MAPRANGE._serialized_start=1616
  _MAPRANGE._serialized_end=1726
  _TRACKPOSES._serialized_start=1729
  _TRACKPOSES._serialized_end=1857
  _ALIGNEDBOX3D._serialized_start=1859
  _ALIGNEDBOX3D._serialized_end=1953
  _SEMANTICBOUNDARY._serialized_start=1956
  _SEMANTICBOUNDARY._serialized_end=2185
  _PARKINGMAPMETADATA._serialized_start=2188
  _PARKINGMAPMETADATA._serialized_end=2430
  _KEYFRAME._serialized_start=2433
  _KEYFRAME._serialized_end=3177
  _SLOPEFLOORINFO._serialized_start=3180
  _SLOPEFLOORINFO._serialized_end=3342
  _FLOORMAP._serialized_start=3345
  _FLOORMAP._serialized_end=3556
  _KEYFRAMEEDGE._serialized_start=3558
  _KEYFRAMEEDGE._serialized_end=3667
  _LINKDATA._serialized_start=3670
  _LINKDATA._serialized_end=3906
  _MAPPOIINFOINMAP._serialized_start=3908
  _MAPPOIINFOINMAP._serialized_end=4004
  _GLOBALMAP._serialized_start=4007
  _GLOBALMAP._serialized_end=4889
  _ENTRYLIST._serialized_start=4892
  _ENTRYLIST._serialized_end=5033
# @@protoc_insertion_point(module_scope)
