syntax = "proto2";

import "recorder/topic_group.proto";
import "recorder/record_config.proto";
import "recorder/record_stats.proto";
import "recorder/error.proto";

package deeproute.online_recorder_service;

message TriggerRequest {
  /**
   @~english the path. if relative, it's relative to the path of online_recorder
   @~chinese 录制到的路径。如果是相对路径，则是相对于online_recorder当前目录的。
  **/
  optional string path = 1;

  /**
   @~english the start timestamp, could be earlier than now, in nanoseconds
   @~chinese 录制开始时间，可以早于现在的时间，单位是纳秒
  **/
  optional uint64 start_timestamp = 2;

  /**
   @~english the end timestamp, in nanoseconds
   @~chinese 录制结束时间，单位是纳秒
  **/
  optional uint64 end_timestamp  = 3;

  /**
   @~english if the topic is not added to online_recorder's subscribe config it
             won't have effect just passed here.
             If not present, all topics in online_recorder's subscribe config is
             recorded.
   @~chinese 传递想要录制的topic。只有预先加入online_recorder订阅列表的topic才会生效。
             如果不传，所有订阅列表中的topic都会被落盘。
  **/
  optional deeproute.recorder.TopicGroup topic_group = 4;

  /**
   @~english config used to record the trigger
   @~chinese 用于配置该trigger的录制过程
  **/
  optional deeproute.recorder.RecordConfig record_config = 5;
}

message TriggerResponse {
  /**
   @~english indicates the success/failure status of the trigger
   @~chinese 包含了录制的成功/失败信息
  **/
  optional deeproute.recorder.ErrorStatus status = 1;

  /**
   @~english includes a few stats counters for debugging
   @~chinese 包含一些统计计数，可以用于debug
  **/
  optional deeproute.recorder.RecordStats stats = 2;
}

service OnlineRecorderService {
  /**
   @~english trigger a request task. multiple triggers are handled in parallel asynchorously
   @~chinese 进行一次录制trigger，多个trigger会并行地、异步地进行
  **/
  rpc Trigger(TriggerRequest) returns (TriggerResponse);
}

