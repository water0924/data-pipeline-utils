# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: planning/business_request_and_response.proto
"""Generated protocol buffer code."""
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from proto.common import geometry_pb2 as common_dot_geometry__pb2
from proto.common import pnc_point_pb2 as common_dot_pnc__point__pb2
from proto.drdtu import dtu_command_pb2 as drdtu_dot_dtu__command__pb2
from proto.routing import routing_pb2 as routing_dot_routing__pb2


DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n,planning/business_request_and_response.proto\x12\x12\x64\x65\x65proute.planning\x1a\x15\x63ommon/geometry.proto\x1a\x16\x63ommon/pnc_point.proto\x1a\x17\x64rdtu/dtu_command.proto\x1a\x15routing/routing.proto\"\x8b\x01\n\x0bStopRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x36\n\tstop_type\x18\x02 \x01(\x0e\x32#.deeproute.planning.StopRequestType\x12\x30\n\x02op\x18\x03 \x01(\x0e\x32$.deeproute.planning.StopLineOperator\"\xbc\x02\n\x0ePlannerRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12<\n\x0crequest_type\x18\x02 \x01(\x0e\x32&.deeproute.planning.PlannerRequestType\x12:\n\x14parking_space_vertex\x18\x03 \x03(\x0b\x32\x1c.deeproute.dtu.command.Point\x12@\n\x1aparking_space_center_point\x18\x04 \x01(\x0b\x32\x1c.deeproute.dtu.command.Point\x12\x18\n\x10parking_space_id\x18\x05 \x01(\x05\x12@\n\x1aparking_space_direct_point\x18\x06 \x01(\x0b\x32\x1c.deeproute.dtu.command.Point\"b\n\x12\x44rivingModeRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x38\n\x0c\x64riving_mode\x18\x02 \x01(\x0e\x32\".deeproute.dtu.command.DrivingMode\"U\n\x11\x44\x65stChangeRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12,\n\tdest_pose\x18\x02 \x01(\x0b\x32\x19.deeproute.common.Point3D\"}\n\x0fPlannerResponse\x12;\n\x0fplanner_request\x18\x01 \x01(\x0b\x32\".deeproute.planning.PlannerRequest\x12\x18\n\tin_action\x18\x02 \x01(\x08:\x05\x66\x61lse\x12\x13\n\x0bhas_stopped\x18\x03 \x01(\x08\"\xf8\x01\n\x15OrderRequestFromHuman\x12;\n\x0fplanner_request\x18\x01 \x01(\x0b\x32\".deeproute.planning.PlannerRequest\x12\x34\n\rbypass_points\x18\x02 \x03(\x0b\x32\x19.deeproute.common.Point3DB\x02\x18\x01\x12=\n\x0ehuman_response\x18\x03 \x01(\x0e\x32%.deeproute.planning.HumanResponseType\x12-\n\twaypoints\x18\x04 \x03(\x0b\x32\x1a.deeproute.common.Waypoint\"\x89\x01\n\x1dOrderRequestFromHumanResponse\x12K\n\x18order_request_from_human\x18\x01 \x01(\x0b\x32).deeproute.planning.OrderRequestFromHuman\x12\x1b\n\x0chas_finished\x18\x02 \x01(\x08:\x05\x66\x61lse\"Y\n\x0cStopResponse\x12\x35\n\x0cstop_request\x18\x01 \x01(\x0b\x32\x1f.deeproute.planning.StopRequest\x12\x12\n\nis_stopped\x18\x02 \x01(\x08\"u\n\x18\x44ynamicSpeedLimitRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\r\n\x05value\x18\x02 \x01(\x01\x12\x36\n\nlimit_type\x18\x03 \x01(\x0e\x32\".deeproute.planning.SpeedLimitType\"I\n\x19\x44ynamicSpeedLimitResponse\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x18\n\tin_action\x18\x02 \x01(\x08:\x05\x66\x61lse\"F\n\x13\x44rivingModeResponse\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x1b\n\x0chas_finished\x18\x02 \x01(\x08:\x05\x66\x61lse\"E\n\x12\x44\x65stChangeResponse\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x1b\n\x0chas_finished\x18\x02 \x01(\x08:\x05\x66\x61lse\"x\n\x1c\x44ynamicFollowDistanceRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x1f\n\x13\x64ynamic_follow_time\x18\x02 \x01(\x01:\x02-1\x12#\n\x1b\x64ynamic_follow_min_distance\x18\x03 \x01(\x01\"M\n\x1d\x44ynamicFollowDistanceResponse\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12\x18\n\tin_action\x18\x02 \x01(\x08:\x05\x66\x61lse\"\xac\x01\n\x10ReRoutingRequest\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12<\n\x0frouting_request\x18\x02 \x01(\x0b\x32!.deeproute.routing.RoutingRequestH\x00\x12>\n\x10routing_response\x18\x03 \x01(\x0b\x32\".deeproute.routing.RoutingResponseH\x00\x42\x06\n\x04Type\"e\n\x11ReRoutingResponse\x12\x12\n\nrequest_id\x18\x01 \x01(\t\x12<\n\x10routing_response\x18\x02 \x01(\x0b\x32\".deeproute.routing.RoutingResponse\"\xec\x05\n\x0f\x42usinessRequest\x12*\n\x06source\x18\x01 \x01(\x0e\x32\x1a.deeproute.planning.Module\x12/\n\x0b\x64\x65stination\x18\x02 \x01(\x0e\x32\x1a.deeproute.planning.Module\x12*\n\x03\x65rr\x18\x03 \x01(\x0e\x32\x1d.deeproute.planning.ErrorCode\x12\x37\n\x0cstop_request\x18\x04 \x01(\x0b\x32\x1f.deeproute.planning.StopRequestH\x00\x12S\n\x1b\x64ynamic_speed_limit_request\x18\x05 \x01(\x0b\x32,.deeproute.planning.DynamicSpeedLimitRequestH\x00\x12=\n\x0fplanner_request\x18\x06 \x01(\x0b\x32\".deeproute.planning.PlannerRequestH\x00\x12M\n\x18order_request_from_human\x18\x07 \x01(\x0b\x32).deeproute.planning.OrderRequestFromHumanH\x00\x12\x46\n\x14\x64riving_mode_request\x18\x08 \x01(\x0b\x32&.deeproute.planning.DrivingModeRequestH\x00\x12\x44\n\x13\x64\x65st_change_request\x18\t \x01(\x0b\x32%.deeproute.planning.DestChangeRequestH\x00\x12\x41\n\x11rerouting_request\x18\n \x01(\x0b\x32$.deeproute.planning.ReRoutingRequestH\x00\x12[\n\x1f\x64ynamic_follow_distance_request\x18\x0b \x01(\x0b\x32\x30.deeproute.planning.DynamicFollowDistanceRequestH\x00\x42\x06\n\x04Task\"\x94\x06\n\x10\x42usinessResponse\x12*\n\x06source\x18\x01 \x01(\x0e\x32\x1a.deeproute.planning.Module\x12/\n\x0b\x64\x65stination\x18\x02 \x01(\x0e\x32\x1a.deeproute.planning.Module\x12*\n\x03\x65rr\x18\x03 \x01(\x0e\x32\x1d.deeproute.planning.ErrorCode\x12\x39\n\rstop_response\x18\x04 \x01(\x0b\x32 .deeproute.planning.StopResponseH\x00\x12U\n\x1c\x64ynamic_speed_limit_response\x18\x05 \x01(\x0b\x32-.deeproute.planning.DynamicSpeedLimitResponseH\x00\x12?\n\x10planner_response\x18\x06 \x01(\x0b\x32#.deeproute.planning.PlannerResponseH\x00\x12^\n!order_request_from_human_response\x18\x07 \x01(\x0b\x32\x31.deeproute.planning.OrderRequestFromHumanResponseH\x00\x12H\n\x15\x64riving_mode_response\x18\x08 \x01(\x0b\x32\'.deeproute.planning.DrivingModeResponseH\x00\x12\x46\n\x14\x64\x65st_change_response\x18\t \x01(\x0b\x32&.deeproute.planning.DestChangeResponseH\x00\x12\x43\n\x12rerouting_response\x18\n \x01(\x0b\x32%.deeproute.planning.ReRoutingResponseH\x00\x12]\n dynamic_follow_distance_response\x18\x0b \x01(\x0b\x32\x31.deeproute.planning.DynamicFollowDistanceResponseH\x00\x42\x0e\n\x0cTaskResponse\"\xe9\x01\n\x12\x42ussinessDebugInfo\x12*\n\x06source\x18\x01 \x01(\x0e\x32\x1a.deeproute.planning.Module\x12/\n\x0b\x64\x65sitnation\x18\x02 \x01(\x0e\x32\x1a.deeproute.planning.Module\x12\x12\n\ntime_stamp\x18\x03 \x01(\x04\x12\x12\n\nrequest_id\x18\x04 \x01(\t\x12;\n\x0f\x62usiness_status\x18\x05 \x01(\x0e\x32\".deeproute.planning.BusinessStatus\x12\x11\n\tdebug_log\x18\x06 \x01(\t* \n\x06Module\x12\t\n\x05ORDER\x10\x00\x12\x0b\n\x07PLANNER\x10\x01*1\n\tErrorCode\x12\x0b\n\x07UNKNOWN\x10\x00\x12\x0b\n\x07SUCCESS\x10\x01\x12\n\n\x06\x46\x41ILED\x10\x02*0\n\x10StopLineOperator\x12\r\n\tCREATE_OP\x10\x00\x12\r\n\tREMOVE_OP\x10\x01*^\n\x0fStopRequestType\x12\x12\n\x0eTEMPORARY_STOP\x10\x00\x12\x12\n\x0e\x45MERGENCY_STOP\x10\x01\x12\x11\n\rPULLOVER_STOP\x10\x02\x12\x10\n\x0c\x44\x45\x46\x41ULT_STOP\x10\x03*\x96\x01\n\x12PlannerRequestType\x12\x12\n\x0e\x42LOCK_ALL_ROAD\x10\x00\x12\x18\n\x14\x41\x42NORMAL_SINGLE_ROAD\x10\x01\x12\x19\n\x15UPSTREAM_DATA_FAILURE\x10\x02\x12\x0e\n\nOPEN_SPACE\x10\x03\x12\x17\n\x13\x44\x45STINATION_REACHED\x10\x04\x12\x0e\n\nBLOCK_NONE\x10\x05*f\n\x11HumanResponseType\x12\x0b\n\x07WAITING\x10\x00\x12\x0f\n\x0bLEFT_DETOUR\x10\x01\x12\x10\n\x0cRIGHT_DETOUR\x10\x02\x12\x0b\n\x07TRACING\x10\x03\x12\x14\n\x10REMOTE_TAKE_OVER\x10\x04*K\n\x0eSpeedLimitType\x12\x1f\n\x1bRELATIVE_TO_MAP_SPEED_LIMIT\x10\x00\x12\x18\n\x14\x41\x42SOLUTE_SPEED_LIMIT\x10\x01*\xaa\x01\n\x0e\x42usinessStatus\x12\x15\n\x11\x42USSINESS_UNKNOWN\x10\x00\x12\x17\n\x13\x42USSINESS_PULL_OVER\x10\x01\x12\x1c\n\x18\x42USSINESS_EMERGENCY_STOP\x10\x02\x12\x1b\n\x17\x42USSINESS_OUTLANE_NUDGE\x10\x03\x12\x18\n\x14\x42USSINESS_CHANG_LANE\x10\x04\x12\x13\n\x0f\x42USSINESS_TRACE\x10\x05')

_MODULE = DESCRIPTOR.enum_types_by_name['Module']
Module = enum_type_wrapper.EnumTypeWrapper(_MODULE)
_ERRORCODE = DESCRIPTOR.enum_types_by_name['ErrorCode']
ErrorCode = enum_type_wrapper.EnumTypeWrapper(_ERRORCODE)
_STOPLINEOPERATOR = DESCRIPTOR.enum_types_by_name['StopLineOperator']
StopLineOperator = enum_type_wrapper.EnumTypeWrapper(_STOPLINEOPERATOR)
_STOPREQUESTTYPE = DESCRIPTOR.enum_types_by_name['StopRequestType']
StopRequestType = enum_type_wrapper.EnumTypeWrapper(_STOPREQUESTTYPE)
_PLANNERREQUESTTYPE = DESCRIPTOR.enum_types_by_name['PlannerRequestType']
PlannerRequestType = enum_type_wrapper.EnumTypeWrapper(_PLANNERREQUESTTYPE)
_HUMANRESPONSETYPE = DESCRIPTOR.enum_types_by_name['HumanResponseType']
HumanResponseType = enum_type_wrapper.EnumTypeWrapper(_HUMANRESPONSETYPE)
_SPEEDLIMITTYPE = DESCRIPTOR.enum_types_by_name['SpeedLimitType']
SpeedLimitType = enum_type_wrapper.EnumTypeWrapper(_SPEEDLIMITTYPE)
_BUSINESSSTATUS = DESCRIPTOR.enum_types_by_name['BusinessStatus']
BusinessStatus = enum_type_wrapper.EnumTypeWrapper(_BUSINESSSTATUS)
ORDER = 0
PLANNER = 1
UNKNOWN = 0
SUCCESS = 1
FAILED = 2
CREATE_OP = 0
REMOVE_OP = 1
TEMPORARY_STOP = 0
EMERGENCY_STOP = 1
PULLOVER_STOP = 2
DEFAULT_STOP = 3
BLOCK_ALL_ROAD = 0
ABNORMAL_SINGLE_ROAD = 1
UPSTREAM_DATA_FAILURE = 2
OPEN_SPACE = 3
DESTINATION_REACHED = 4
BLOCK_NONE = 5
WAITING = 0
LEFT_DETOUR = 1
RIGHT_DETOUR = 2
TRACING = 3
REMOTE_TAKE_OVER = 4
RELATIVE_TO_MAP_SPEED_LIMIT = 0
ABSOLUTE_SPEED_LIMIT = 1
BUSSINESS_UNKNOWN = 0
BUSSINESS_PULL_OVER = 1
BUSSINESS_EMERGENCY_STOP = 2
BUSSINESS_OUTLANE_NUDGE = 3
BUSSINESS_CHANG_LANE = 4
BUSSINESS_TRACE = 5


_STOPREQUEST = DESCRIPTOR.message_types_by_name['StopRequest']
_PLANNERREQUEST = DESCRIPTOR.message_types_by_name['PlannerRequest']
_DRIVINGMODEREQUEST = DESCRIPTOR.message_types_by_name['DrivingModeRequest']
_DESTCHANGEREQUEST = DESCRIPTOR.message_types_by_name['DestChangeRequest']
_PLANNERRESPONSE = DESCRIPTOR.message_types_by_name['PlannerResponse']
_ORDERREQUESTFROMHUMAN = DESCRIPTOR.message_types_by_name['OrderRequestFromHuman']
_ORDERREQUESTFROMHUMANRESPONSE = DESCRIPTOR.message_types_by_name['OrderRequestFromHumanResponse']
_STOPRESPONSE = DESCRIPTOR.message_types_by_name['StopResponse']
_DYNAMICSPEEDLIMITREQUEST = DESCRIPTOR.message_types_by_name['DynamicSpeedLimitRequest']
_DYNAMICSPEEDLIMITRESPONSE = DESCRIPTOR.message_types_by_name['DynamicSpeedLimitResponse']
_DRIVINGMODERESPONSE = DESCRIPTOR.message_types_by_name['DrivingModeResponse']
_DESTCHANGERESPONSE = DESCRIPTOR.message_types_by_name['DestChangeResponse']
_DYNAMICFOLLOWDISTANCEREQUEST = DESCRIPTOR.message_types_by_name['DynamicFollowDistanceRequest']
_DYNAMICFOLLOWDISTANCERESPONSE = DESCRIPTOR.message_types_by_name['DynamicFollowDistanceResponse']
_REROUTINGREQUEST = DESCRIPTOR.message_types_by_name['ReRoutingRequest']
_REROUTINGRESPONSE = DESCRIPTOR.message_types_by_name['ReRoutingResponse']
_BUSINESSREQUEST = DESCRIPTOR.message_types_by_name['BusinessRequest']
_BUSINESSRESPONSE = DESCRIPTOR.message_types_by_name['BusinessResponse']
_BUSSINESSDEBUGINFO = DESCRIPTOR.message_types_by_name['BussinessDebugInfo']
StopRequest = _reflection.GeneratedProtocolMessageType('StopRequest', (_message.Message,), {
  'DESCRIPTOR' : _STOPREQUEST,
  '__module__' : 'planning.business_request_and_response_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.planning.StopRequest)
  })
_sym_db.RegisterMessage(StopRequest)

PlannerRequest = _reflection.GeneratedProtocolMessageType('PlannerRequest', (_message.Message,), {
  'DESCRIPTOR' : _PLANNERREQUEST,
  '__module__' : 'planning.business_request_and_response_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.planning.PlannerRequest)
  })
_sym_db.RegisterMessage(PlannerRequest)

DrivingModeRequest = _reflection.GeneratedProtocolMessageType('DrivingModeRequest', (_message.Message,), {
  'DESCRIPTOR' : _DRIVINGMODEREQUEST,
  '__module__' : 'planning.business_request_and_response_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.planning.DrivingModeRequest)
  })
_sym_db.RegisterMessage(DrivingModeRequest)

DestChangeRequest = _reflection.GeneratedProtocolMessageType('DestChangeRequest', (_message.Message,), {
  'DESCRIPTOR' : _DESTCHANGEREQUEST,
  '__module__' : 'planning.business_request_and_response_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.planning.DestChangeRequest)
  })
_sym_db.RegisterMessage(DestChangeRequest)

PlannerResponse = _reflection.GeneratedProtocolMessageType('PlannerResponse', (_message.Message,), {
  'DESCRIPTOR' : _PLANNERRESPONSE,
  '__module__' : 'planning.business_request_and_response_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.planning.PlannerResponse)
  })
_sym_db.RegisterMessage(PlannerResponse)

OrderRequestFromHuman = _reflection.GeneratedProtocolMessageType('OrderRequestFromHuman', (_message.Message,), {
  'DESCRIPTOR' : _ORDERREQUESTFROMHUMAN,
  '__module__' : 'planning.business_request_and_response_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.planning.OrderRequestFromHuman)
  })
_sym_db.RegisterMessage(OrderRequestFromHuman)

OrderRequestFromHumanResponse = _reflection.GeneratedProtocolMessageType('OrderRequestFromHumanResponse', (_message.Message,), {
  'DESCRIPTOR' : _ORDERREQUESTFROMHUMANRESPONSE,
  '__module__' : 'planning.business_request_and_response_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.planning.OrderRequestFromHumanResponse)
  })
_sym_db.RegisterMessage(OrderRequestFromHumanResponse)

StopResponse = _reflection.GeneratedProtocolMessageType('StopResponse', (_message.Message,), {
  'DESCRIPTOR' : _STOPRESPONSE,
  '__module__' : 'planning.business_request_and_response_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.planning.StopResponse)
  })
_sym_db.RegisterMessage(StopResponse)

DynamicSpeedLimitRequest = _reflection.GeneratedProtocolMessageType('DynamicSpeedLimitRequest', (_message.Message,), {
  'DESCRIPTOR' : _DYNAMICSPEEDLIMITREQUEST,
  '__module__' : 'planning.business_request_and_response_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.planning.DynamicSpeedLimitRequest)
  })
_sym_db.RegisterMessage(DynamicSpeedLimitRequest)

DynamicSpeedLimitResponse = _reflection.GeneratedProtocolMessageType('DynamicSpeedLimitResponse', (_message.Message,), {
  'DESCRIPTOR' : _DYNAMICSPEEDLIMITRESPONSE,
  '__module__' : 'planning.business_request_and_response_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.planning.DynamicSpeedLimitResponse)
  })
_sym_db.RegisterMessage(DynamicSpeedLimitResponse)

DrivingModeResponse = _reflection.GeneratedProtocolMessageType('DrivingModeResponse', (_message.Message,), {
  'DESCRIPTOR' : _DRIVINGMODERESPONSE,
  '__module__' : 'planning.business_request_and_response_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.planning.DrivingModeResponse)
  })
_sym_db.RegisterMessage(DrivingModeResponse)

DestChangeResponse = _reflection.GeneratedProtocolMessageType('DestChangeResponse', (_message.Message,), {
  'DESCRIPTOR' : _DESTCHANGERESPONSE,
  '__module__' : 'planning.business_request_and_response_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.planning.DestChangeResponse)
  })
_sym_db.RegisterMessage(DestChangeResponse)

DynamicFollowDistanceRequest = _reflection.GeneratedProtocolMessageType('DynamicFollowDistanceRequest', (_message.Message,), {
  'DESCRIPTOR' : _DYNAMICFOLLOWDISTANCEREQUEST,
  '__module__' : 'planning.business_request_and_response_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.planning.DynamicFollowDistanceRequest)
  })
_sym_db.RegisterMessage(DynamicFollowDistanceRequest)

DynamicFollowDistanceResponse = _reflection.GeneratedProtocolMessageType('DynamicFollowDistanceResponse', (_message.Message,), {
  'DESCRIPTOR' : _DYNAMICFOLLOWDISTANCERESPONSE,
  '__module__' : 'planning.business_request_and_response_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.planning.DynamicFollowDistanceResponse)
  })
_sym_db.RegisterMessage(DynamicFollowDistanceResponse)

ReRoutingRequest = _reflection.GeneratedProtocolMessageType('ReRoutingRequest', (_message.Message,), {
  'DESCRIPTOR' : _REROUTINGREQUEST,
  '__module__' : 'planning.business_request_and_response_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.planning.ReRoutingRequest)
  })
_sym_db.RegisterMessage(ReRoutingRequest)

ReRoutingResponse = _reflection.GeneratedProtocolMessageType('ReRoutingResponse', (_message.Message,), {
  'DESCRIPTOR' : _REROUTINGRESPONSE,
  '__module__' : 'planning.business_request_and_response_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.planning.ReRoutingResponse)
  })
_sym_db.RegisterMessage(ReRoutingResponse)

BusinessRequest = _reflection.GeneratedProtocolMessageType('BusinessRequest', (_message.Message,), {
  'DESCRIPTOR' : _BUSINESSREQUEST,
  '__module__' : 'planning.business_request_and_response_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.planning.BusinessRequest)
  })
_sym_db.RegisterMessage(BusinessRequest)

BusinessResponse = _reflection.GeneratedProtocolMessageType('BusinessResponse', (_message.Message,), {
  'DESCRIPTOR' : _BUSINESSRESPONSE,
  '__module__' : 'planning.business_request_and_response_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.planning.BusinessResponse)
  })
_sym_db.RegisterMessage(BusinessResponse)

BussinessDebugInfo = _reflection.GeneratedProtocolMessageType('BussinessDebugInfo', (_message.Message,), {
  'DESCRIPTOR' : _BUSSINESSDEBUGINFO,
  '__module__' : 'planning.business_request_and_response_pb2'
  # @@protoc_insertion_point(class_scope:deeproute.planning.BussinessDebugInfo)
  })
_sym_db.RegisterMessage(BussinessDebugInfo)

if _descriptor._USE_C_DESCRIPTORS == False:

  DESCRIPTOR._options = None
  _ORDERREQUESTFROMHUMAN.fields_by_name['bypass_points']._options = None
  _ORDERREQUESTFROMHUMAN.fields_by_name['bypass_points']._serialized_options = b'\030\001'
  _MODULE._serialized_start=4014
  _MODULE._serialized_end=4046
  _ERRORCODE._serialized_start=4048
  _ERRORCODE._serialized_end=4097
  _STOPLINEOPERATOR._serialized_start=4099
  _STOPLINEOPERATOR._serialized_end=4147
  _STOPREQUESTTYPE._serialized_start=4149
  _STOPREQUESTTYPE._serialized_end=4243
  _PLANNERREQUESTTYPE._serialized_start=4246
  _PLANNERREQUESTTYPE._serialized_end=4396
  _HUMANRESPONSETYPE._serialized_start=4398
  _HUMANRESPONSETYPE._serialized_end=4500
  _SPEEDLIMITTYPE._serialized_start=4502
  _SPEEDLIMITTYPE._serialized_end=4577
  _BUSINESSSTATUS._serialized_start=4580
  _BUSINESSSTATUS._serialized_end=4750
  _STOPREQUEST._serialized_start=164
  _STOPREQUEST._serialized_end=303
  _PLANNERREQUEST._serialized_start=306
  _PLANNERREQUEST._serialized_end=622
  _DRIVINGMODEREQUEST._serialized_start=624
  _DRIVINGMODEREQUEST._serialized_end=722
  _DESTCHANGEREQUEST._serialized_start=724
  _DESTCHANGEREQUEST._serialized_end=809
  _PLANNERRESPONSE._serialized_start=811
  _PLANNERRESPONSE._serialized_end=936
  _ORDERREQUESTFROMHUMAN._serialized_start=939
  _ORDERREQUESTFROMHUMAN._serialized_end=1187
  _ORDERREQUESTFROMHUMANRESPONSE._serialized_start=1190
  _ORDERREQUESTFROMHUMANRESPONSE._serialized_end=1327
  _STOPRESPONSE._serialized_start=1329
  _STOPRESPONSE._serialized_end=1418
  _DYNAMICSPEEDLIMITREQUEST._serialized_start=1420
  _DYNAMICSPEEDLIMITREQUEST._serialized_end=1537
  _DYNAMICSPEEDLIMITRESPONSE._serialized_start=1539
  _DYNAMICSPEEDLIMITRESPONSE._serialized_end=1612
  _DRIVINGMODERESPONSE._serialized_start=1614
  _DRIVINGMODERESPONSE._serialized_end=1684
  _DESTCHANGERESPONSE._serialized_start=1686
  _DESTCHANGERESPONSE._serialized_end=1755
  _DYNAMICFOLLOWDISTANCEREQUEST._serialized_start=1757
  _DYNAMICFOLLOWDISTANCEREQUEST._serialized_end=1877
  _DYNAMICFOLLOWDISTANCERESPONSE._serialized_start=1879
  _DYNAMICFOLLOWDISTANCERESPONSE._serialized_end=1956
  _REROUTINGREQUEST._serialized_start=1959
  _REROUTINGREQUEST._serialized_end=2131
  _REROUTINGRESPONSE._serialized_start=2133
  _REROUTINGRESPONSE._serialized_end=2234
  _BUSINESSREQUEST._serialized_start=2237
  _BUSINESSREQUEST._serialized_end=2985
  _BUSINESSRESPONSE._serialized_start=2988
  _BUSINESSRESPONSE._serialized_end=3776
  _BUSSINESSDEBUGINFO._serialized_start=3779
  _BUSSINESSDEBUGINFO._serialized_end=4012
# @@protoc_insertion_point(module_scope)
